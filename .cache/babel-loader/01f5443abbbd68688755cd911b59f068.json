{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"clShop-colors\"\n};\nconst _hoisted_2 = {\n  class: \"clShop-colors__selection\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Single = _resolveComponent(\"Single\");\n  const _component_Double = _resolveComponent(\"Double\");\n  const _component_Special = _resolveComponent(\"Special\");\n  const _component_Dependendencies = _resolveComponent(\"Dependendencies\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"Выберите цвет\")), 1), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.modifications.singleColors, color => {\n    return _openBlock(), _createBlock(_component_Single, {\n      key: color.id,\n      colors: color,\n      active: $options.isActive(color),\n      onClick: $event => $options.setModification(color)\n    }, null, 8, [\"colors\", \"active\", \"onClick\"]);\n  }), 128)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.modifications.doubleColors, color => {\n    return _openBlock(), _createBlock(_component_Double, {\n      key: color.id,\n      colors: color,\n      active: $options.isActive(color),\n      onClick: $event => $options.setModification(color)\n    }, null, 8, [\"colors\", \"active\", \"onClick\"]);\n  }), 128)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.modifications.specialColors, color => {\n    return _openBlock(), _createBlock(_component_Special, {\n      key: color.id,\n      colors: color,\n      active: $options.isActive(color),\n      onClick: $event => $options.setModification(color)\n    }, null, 8, [\"colors\", \"active\", \"onClick\"]);\n  }), 128)), _createVNode(_component_Dependendencies, {\n    style: {\n      \"width\": \"0\",\n      \"height\": \"0\"\n    }\n  })])]);\n}","map":null,"metadata":{},"sourceType":"module"}