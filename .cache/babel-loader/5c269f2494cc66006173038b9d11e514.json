{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"HackCombinLockMiniGame\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"HackCombinLockMiniGame-hr\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0,\n  class: \"HackCombinLockMiniGame__title-section\"\n};\nconst _hoisted_4 = {\n  class: \"HackCombinLockMiniGame__title\"\n};\nconst _hoisted_5 = {\n  class: \"HackCombinLockMiniGame__main\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"HackCombinLockMiniGame__main-timer\"\n};\nconst _hoisted_7 = {\n  class: \"HackCombinLockMiniGame__main-timer-value\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"HackCombinLockMiniGame__dial\"\n};\nconst _hoisted_9 = [\"id\", \"onClick\"];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"HackCombinLockMiniGame__info-section\"\n};\nconst _hoisted_11 = {\n  class: \"HackCombinLockMiniGame__info-title\"\n};\nconst _hoisted_12 = {\n  class: \"HackCombinLockMiniGame__info-title2\"\n};\nconst _hoisted_13 = {\n  class: \"HackCombinLockMiniGame__info\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"record-gif\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    class: \"HackCombinLockMiniGame__close-button\",\n    onClick: _cache[0] || (_cache[0] = () => this.close())\n  }), _createVNode(_Transition, {\n    name: \"show-info\"\n  }, {\n    default: _withCtx(() => [!$data.isRecordMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"взлом\")), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"ЭЛЕКТРИЧЕСКОГО ЗАМКА\")), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_Transition, {\n    name: \"show-timer\"\n  }, {\n    default: _withCtx(() => [$data.startGameTime ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString($options.formatTime($data.startGameTime)), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), !$data.startGameTime ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.visibleButtonsList, button => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      class: \"HackCombinLockMiniGame__dial-button\",\n      key: button.id,\n      id: button.id,\n      onClick: () => $options.enterNumber(button.id)\n    }, _toDisplayString(button.text), 9 /* TEXT, PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]), _createVNode(_Transition, {\n    name: \"show-info\"\n  }, {\n    default: _withCtx(() => [!$data.isRecordMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, _toDisplayString(_ctx.$t(\"ВЗЛОМ ЭЛЕКТРИЧЕСКОГО ЗАМКА\")), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_12, _toDisplayString(_ctx.$t(\"ваша задача\")), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_13, _toDisplayString(_ctx.$t(\"Вам будет показано 3 кодовые комбинации. Необходимо запомнить комбинации и в правильной последовательность ввести их.\")), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", {\n    class: \"HackCombinLockMiniGame__game-timer\",\n    style: _normalizeStyle({\n      opacity: !($data.isRecordMode || $data.startGameTime) ? 1 : 0\n    })\n  }, [_createElementVNode(\"div\", {\n    class: \"HackCombinLockMiniGame__game-timer-inner\",\n    id: \"game-timer-inner\",\n    style: _normalizeStyle({\n      transitionDuration: $data.timeToGame + 'ms'\n    })\n  }, null, 4 /* STYLE */)], 4 /* STYLE */), $data.isRecordMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14)) : _createCommentVNode(\"v-if\", true)]);\n}","map":null,"metadata":{},"sourceType":"module"}