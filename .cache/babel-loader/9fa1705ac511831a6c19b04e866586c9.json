{"ast":null,"code":"export default {\n  data() {\n    return {\n      coords: {\n        x: 0,\n        y: 0\n      }\n    };\n  },\n  props: {\n    nextMsg: {\n      type: Object,\n      required: true\n    },\n    msg: {\n      type: Object,\n      required: true\n    }\n  },\n  methods: {\n    onBack() {\n      this.$router.go(-1);\n    },\n    showPhoto(url) {\n      console.log(url);\n      this.$store.dispatch(\"phone/setShownPhoto\", url);\n    },\n    goToCoords() {\n      this.$callClient(\"W:Phone:GoToCoords\", this.msg.coords);\n    },\n    getDaysDifference(date1, date2) {\n      const d1 = new Date(date1);\n      const d2 = new Date(date2);\n      d1.setHours(0, 0, 0, 0);\n      d2.setHours(0, 0, 0, 0);\n      const oneDay = 1000 * 60 * 60 * 24;\n      const diffInTime = Math.abs(d2.getTime() - d1.getTime());\n      const diffInDays = Math.round(diffInTime / oneDay);\n      return diffInDays;\n    },\n    isDiffrentDay(date1, date2) {\n      if (!date2) return false;\n      return !!this.getDaysDifference(date1, date2);\n    },\n    getPosition(x, y) {\n      const imgWidth = 10000;\n      const imgHeight = 11060;\n      let procentH = (y - 1560) / imgHeight * 100;\n      let procentW = (x + 50) / imgWidth * 100;\n      procentH = 50 - procentH;\n      procentW = 50 + procentW;\n      return {\n        transformOrigin: `${procentW}% ${procentH}%`\n      };\n    },\n    getPosition2(x, y) {\n      const imgWidth = 10000;\n      const imgHeight = 11060;\n      let procentH = (y - 1560) / imgHeight * 100;\n      let procentW = (x + 50) / imgWidth * 100;\n      procentH = 50 - procentH;\n      procentW = 50 + procentW;\n      return {\n        transform: `translate(${-procentW}%, ${-procentH}%)`\n      };\n    },\n    formatDate(date) {\n      const d = new Date(date);\n      const currentDate = new Date();\n      const diffInDays = this.getDaysDifference(d, currentDate);\n      const bindDaysByDiffInDays = {\n        0: this.$t(\"Сегодня\"),\n        1: this.$t(\"Вчера\")\n      };\n      const daysOfWeek = [\"Воскресенье\", \"Понедельник\", \"Вторник\", \"Среда\", \"Четверг\", \"Пятница\", \"Суббота\"].map(day => this.$t(day));\n      let firstValue;\n      if (diffInDays in bindDaysByDiffInDays) {\n        firstValue = bindDaysByDiffInDays[diffInDays];\n      } else if (diffInDays >= 2 && diffInDays <= 7) {\n        firstValue = daysOfWeek[d.getDay()];\n      } else {\n        firstValue = `${d.getDate()}.${d.getMonth() + 1}.${d.getFullYear()}`;\n      }\n      return `${firstValue} ${d.getHours()}:${d.getMinutes()}`;\n    }\n  },\n  mounted() {\n    console.log(this.msg, this.nextMsg);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}