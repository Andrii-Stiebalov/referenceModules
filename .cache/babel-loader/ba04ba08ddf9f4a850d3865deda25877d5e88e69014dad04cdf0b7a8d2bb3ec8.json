{"ast":null,"code":"export default {\n  data() {\n    return {\n      moneyPerSecond: 20,\n      incrementValue: 1,\n      maxRisk: 1000,\n      currentRisk: 0,\n      middleRisk: 150,\n      highRisk: 500,\n      reward: 0\n    };\n  },\n  methods: {\n    dataInit(data) {\n      this.$recursiveAssign(data, this.$data);\n      //   if (!this.interval) {\n      //     this.interval = setInterval(() => {\n      //       if (this.currentRisk < this.maxRisk)\n      //         this.reward += this.moneyPerSecond;\n      //     }, 1000);\n\n      //     let risk = setInterval(() => {\n      //       if (this.currentRisk < this.maxRisk)\n      //         this.currentRisk += this.incrementValue;\n      //       else clearInterval(risk);\n      //     }, 100);\n      //   }\n    },\n    UpdateRisk(data) {\n      console.log(this.currentRisk);\n      console.log(this.maxRisk);\n      if (this.currentRisk < this.maxRisk) {\n        this.reward += this.moneyPerSecond;\n        this.currentRisk = data;\n      }\n    }\n  },\n  computed: {\n    getRisk() {\n      if (this.currentRisk < this.middleRisk) return {\n        class: \"low\",\n        iconAmount: 1,\n        title: this.$t(\"Низкий\")\n      };\n      if (this.currentRisk < this.highRisk) return {\n        class: \"medium\",\n        iconAmount: 2,\n        title: this.$t(\"Средний\")\n      };\n      if (this.currentRisk <= this.maxRisk) return {\n        class: \"hight\",\n        iconAmount: 3,\n        title: this.$t(\"Высокий\")\n      };\n    },\n    getFirstChek() {\n      return {\n        \"--check\": this.middleRisk / 10 + \"%\"\n      };\n    },\n    getSecondChek() {\n      if (this.currentRisk <= this.middleRisk) {\n        return {\n          style: {\n            \"--check\": this.highRisk / 10 + \"%\",\n            \"--display\": \"none\"\n          }\n        };\n      } else {\n        return {\n          style: {\n            \"--check\": this.highRisk / 10 + \"%\",\n            \"--display\": \"block\"\n          }\n        };\n      }\n    },\n    getRiscProgress() {\n      return {\n        \"--progress\": this.currentRisk / 10 + \"%\"\n      };\n    },\n    getRiscStage() {\n      if (this.currentRisk < this.middleRisk) {\n        return {\n          \"--stage\": \"0%\"\n        };\n      }\n      if (this.currentRisk < this.highRisk) {\n        return {\n          \"--stage\": this.middleRisk / 10 + \"%\"\n        };\n      }\n      if (this.currentRisk < this.maxRisk) {\n        return {\n          \"--stage\": this.highRisk / 10 + \"%\"\n        };\n      }\n      if (this.currentRisk === this.maxRisk) {\n        return {\n          \"--stage\": \"100%\"\n        };\n      }\n    },\n    getReward() {\n      const balance = this.reward.toString();\n      if (false) {\n        //balance.length > 3)\n        const hundreds = balance.substring(balance.length - 3);\n        const numbers = balance.substring(0, balance.length - 3);\n        return this.reward = numbers.concat(\".\", hundreds);\n      } else {\n        return balance.toLocaleString(\"uk-UA\");\n      }\n    }\n  },\n  created() {\n    this.$onClient(\"W:HUD:RobberyStart\", this.dataInit);\n    this.$onClient(\"W:HUD:Robbery:UpdateRisk\", this.UpdateRisk);\n    this.$callClient(\"C:HUD:RobberyReady\");\n  },\n  beforeUnmount() {\n    this.$offClient(\"W:HUD:RobberyStart\", this.dataInit);\n    this.$offClient(\"W:HUD:Robbery:UpdateRisk\", this.UpdateRisk);\n    this.$callClient(\"C:HUD:RobberyDestroyed\");\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}