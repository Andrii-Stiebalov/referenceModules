{"ast":null,"code":"import CopyIcon from \"../Components/Icons/CopyIcon.vue\";\nexport default {\n  data() {\n    return {\n      // commands: [\n      //   {\n      //     name: \"rmute\",\n      //     params: [\n      //       {\n      //         name: \"time\",\n      //         title: \"Час у хв.\",\n      //       },\n      //       {\n      //         name: \"reason\",\n      //         title: \"Причина\",\n      //       },\n      //     ],\n      //     args: [\"ID\", \"time\", \"reason\"],\n      //   },\n      //   {\n      //     name: \"unrmute\",\n      //     args: [\"ID\"],\n      //   },\n      //   {\n      //     name: \"mute\",\n      //     params: [\n      //       {\n      //         name: \"time\",\n      //         title: \"Час у хв.\",\n      //       },\n      //       {\n      //         name: \"reason\",\n      //         title: \"Причина\",\n      //       },\n      //     ],\n      //     args: [\"ID\", \"time\", \"reason\"],\n      //   },\n      //   {\n      //     name: \"unmute\",\n      //     args: [\"ID\"],\n      //   },\n      //   {\n      //     name: \"demorgan\",\n      //     params: [\n      //       {\n      //         name: \"time\",\n      //         title: \"Час у хв.\",\n      //       },\n      //       {\n      //         name: \"reason\",\n      //         title: \"Причина\",\n      //       },\n      //     ],\n      //     args: [\"ID\", \"time\", \"reason\"],\n      //   },\n      //   {\n      //     name: \"offdemorgan\",\n      //     params: [\n      //       {\n      //         name: \"Name\",\n      //         title: \"Нікнейм\",\n      //       },\n      //       {\n      //         name: \"time\",\n      //         title: \"Час у хв.\",\n      //       },\n      //       {\n      //         name: \"reason\",\n      //         title: \"Причина\",\n      //       },\n      //     ],\n      //     args: [\"Name\", \"time\", \"reason\"],\n      //   },\n      //   {\n      //     name: \"setdim\",\n      //     params: [\n      //       {\n      //         name: \"dimension\",\n      //         title: \"Вимір\",\n      //       },\n      //     ],\n      //     args: [\"ID\", \"dimension\"],\n      //   },\n\n      //   {\n      //     name: \"tp\",\n      //     args: [\"ID\"],\n      //   },\n      //   {\n      //     name: \"metp\",\n      //     args: [\"ID\"],\n      //   },\n      //   {\n      //     name: \"fz\",\n      //     args: [\"ID\"],\n      //   },\n      //   {\n      //     name: \"ufz\",\n      //     args: [\"ID\"],\n      //   },\n      //   {\n      //     name: \"asms\",\n      //     params: [\n      //       {\n      //         name: \"notification\",\n      //         title: \"Повідомлення\",\n      //       },\n      //     ],\n      //     args: [\"ID\", \"notification\"],\n      //   },\n      //   {\n      //     name: \"hp\",\n      //     params: [\n      //       {\n      //         name: \"newHealth\",\n      //         title: \"Кількість здоров'я\",\n      //       },\n      //     ],\n      //     args: [\"ID\", \"newHealth\"],\n      //   },\n      //   {\n      //     name: \"resp\",\n      //     args: [\"ID\"],\n      //   },\n      //   {\n      //     name: \"kill\",\n      //     args: [\"ID\"],\n      //   },\n      //   {\n      //     name: \"kick\",\n      //     params: [\n      //       {\n      //         name: \"reason\",\n      //         title: \"Причина\",\n      //       },\n      //     ],\n      //     args: [\"ID\", \"reason\"],\n      //   },\n      //   {\n      //     name: \"house\",\n      //     args: [\"House\"],\n      //   },\n      //   {\n      //     name: \"biz\",\n      //     args: [\"BizID\"],\n      //   },\n      //   {\n      //     name: \"ban\",\n      //     params: [\n      //       {\n      //         name: \"time\",\n      //         title: \"Час у хв.\",\n      //       },\n      //       {\n      //         name: \"reason\",\n      //         title: \"Причина\",\n      //       },\n      //     ],\n      //     args: [\"ID\", \"time\", \"reason\"],\n      //   },\n      //   {\n      //     name: \"offban\",\n      //     params: [\n      //       {\n      //         name: \"Name\",\n      //         title: \"Нікнейм\",\n      //       },\n      //       {\n      //         name: \"time\",\n      //         title: \"Час у хв.\",\n      //       },\n      //       {\n      //         name: \"reason\",\n      //         title: \"Причина\",\n      //       },\n      //     ],\n      //     args: [\"Name\", \"time\", \"reason\"],\n      //   },\n      //   {\n      //     name: \"hardban\",\n      //     params: [\n      //       {\n      //         name: \"time\",\n      //         title: \"Час у хв.\",\n      //       },\n      //       {\n      //         name: \"reason\",\n      //         title: \"Причина\",\n      //       },\n      //     ],\n      //     args: [\"ID\", \"time\", \"reason\"],\n      //   },\n      //   {\n      //     name: \"warn\",\n      //     params: [\n      //       {\n      //         name: \"reason\",\n      //         title: \"Причина\",\n      //       },\n      //     ],\n      //     args: [\"ID\", \"reason\"],\n      //   },\n      //   {\n      //     name: \"udemorgan\",\n      //     args: [\"ID\"],\n      //   },\n      //   {\n      //     name: \"checkinventory\",\n      //     args: [\"ID\"],\n      //   },\n      //   {\n      //     name: \"offudemorgan\",\n      //     args: [\"Name\"],\n      //   },\n      //   {\n      //     name: \"setleader\",\n      //     params: [\n      //       {\n      //         name: \"fractionId\",\n      //         title: \"Номер фракції\",\n      //       },\n      //     ],\n      //     args: [\"ID\", \"fractionId\"],\n      //   },\n      //   {\n      //     name: \"offdelleader\",\n      //     args: [\"Name\"],\n      //   },\n      //   {\n      //     name: \"skick\",\n      //     args: [\"ID\"],\n      //   },\n      //   {\n      //     name: \"sban\",\n      //     params: [\n      //       {\n      //         name: \"time\",\n      //         title: \"Час у хв.\",\n      //       },\n      //     ],\n      //     args: [\"ID\", \"time\"],\n      //   },\n      //   {\n      //     name: \"addlic\",\n      //     params: [\n      //       {\n      //         name: \"license\",\n      //         title: \"Ліцензія\",\n      //       },\n      //       {\n      //         name: \"category\",\n      //         title: \"Категорія\",\n      //       },\n      //     ],\n      //     args: [\"ID\", \"license\", \"category\"],\n      //   },\n      //   {\n      //     name: \"takelic\",\n      //     params: [\n      //       {\n      //         name: \"license\",\n      //         title: \"Ліцензія\",\n      //       },\n      //     ],\n      //     args: [\"ID\", \"license\"],\n      //   },\n      //   {\n      //     name: \"unban\",\n      //     params: [\n      //       {\n      //         name: \"Name\",\n      //         title: \"Нікнейм\",\n      //       },\n      //     ],\n      //     args: [\"Name\"],\n      //   },\n      //   {\n      //     name: \"unwarn\",\n      //     params: [\n      //       {\n      //         name: \"Name\",\n      //         title: \"Нікнейм\",\n      //       },\n      //     ],\n      //     args: [\"Name\"],\n      //   },\n      //   {\n      //     name: \"unhardban\",\n      //     args: [\"Name\"],\n      //   },\n      // ],\n      playerInfo: {\n        Lvl: 13,\n        Passport: 5454154,\n        Family: \"Ageros\",\n        Fraction: \"ptif\"\n      }\n    };\n  },\n  methods: {\n    getDataFromState(title) {\n      return this.$store.getters[\"universalModal/getFormModalDataByTitle\"](title);\n    },\n    updateInfo() {\n      this.$callClient(\"C:AdminPanel:SetPlayerData:Update\", this.playerData.uuid);\n    },\n    showAdmin() {\n      if (!this.playerData.AdminLVL || this.playerData.ID === \"-\") {\n        this.$Notification.create({\n          type: \"error\",\n          layout: \"compact-bottom__right\",\n          theme: \"compact\",\n          time: 5000,\n          text: `\n                  <div class=\"notification-text__item\">\n                      <div class=\"notification-text__item-title\">\n                          <span>${this.$t(\"Ошибка\")}</span>\n                      </div>\n                      <div class=\"notification-text__item-subtitle\">\n                          <span>${this.$t(\"Недопустимая ставка\")}</span>\n                      </div>\n                  </div>\n                  <div class=\"notification-text__item\">\n                      <div class=\"notification-text__item-icon\">\n                          <span class=\"icon-error\"></span>\n                      </div>\n                  </div>\n              `,\n          progressBar: false\n        });\n        return;\n      }\n      const UniversalModalData = {\n        title: this.$t(\"Смена уровня админа\"),\n        isSetToStore: true,\n        content: [{\n          type: \"input\",\n          options: {\n            label: this.$t(\"новый уровень админа\"),\n            valuesName: \"admLvl\"\n          }\n        }],\n        buttons: {\n          submit: {\n            name: this.$t(\"Да\"),\n            handler: () => {\n              const modalData = this.getDataFromState(\"Смена уровня админа\")?.admLvl;\n              try {\n                mp.invoke(\"command\", `setadminlvl ${this.playerData.ID} ${modalData}`);\n              } catch {\n                console.log(\"command\", `setadminlvl ${this.playerData.ID} ${modalData}`);\n              }\n\n              // this.$callClient(\n              //   \"C:AdminPanel:Command\",\n              //   command.name,\n              //   ...sendData\n              // );\n            }\n          },\n          cansel: {\n            name: this.$t(\"Отмена\")\n          }\n        }\n      };\n      this.$UniversalModal.create(UniversalModalData);\n    },\n    copyCode() {\n      const copyText = document.getElementById(\"code\");\n      copyText.focus();\n      copyText.select();\n      document.execCommand(\"copy\");\n    },\n    onCommandClick(command) {\n      if (!command.params) {\n        const args = command.args.map(arg => this.playerData[arg]);\n        try {\n          mp.invoke(\"command\", `${command.name} ${args}`);\n        } catch {\n          console.log(\"command\", `${command.name} ${args}`);\n        }\n        return;\n      }\n      const content = command.params.map(param => {\n        const input = {\n          type: \"input\",\n          options: {\n            label: param.title,\n            valuesName: param.name\n          }\n        };\n        return input;\n      });\n      const UniversalModalData = {\n        title: command.name,\n        isSetToStore: true,\n        content: [\n        // {\n        //   type: \"description\",\n        //   value: this.$t(\n        //     `Вы действительно хотите удалить ранг <span>{0}<span>?`,\n        //     [this.selectedRank.RankName]\n        //   ),\n        // },\n        ...content],\n        buttons: {\n          submit: {\n            name: this.$t(\"Да\"),\n            handler: () => {\n              const modalData = this.getDataFromState(command.name);\n              const sendData = command.args.map(arg => {\n                if (modalData[arg]) {\n                  return modalData[arg];\n                }\n                return this.playerData[arg];\n              });\n              try {\n                mp.invoke(\"command\", `${command.name} ${sendData.join(\" \")}`);\n              } catch {\n                console.log(\"command\", `${command.name} ${sendData.join(\" \")}`);\n              }\n\n              // this.$callClient(\n              //   \"C:AdminPanel:Command\",\n              //   command.name,\n              //   ...sendData\n              // );\n            }\n          },\n          cansel: {\n            name: this.$t(\"Отмена\")\n          }\n        }\n      };\n      this.$UniversalModal.create(UniversalModalData);\n    }\n  },\n  computed: {\n    commands() {\n      return this.$store.getters[\"adminPanel/getCommandsConfig\"].commands;\n    }\n  },\n  props: {\n    setRoute: Function,\n    playerData: Object\n  },\n  components: {\n    CopyIcon\n  },\n  mounted() {}\n};","map":null,"metadata":{},"sourceType":"module"}