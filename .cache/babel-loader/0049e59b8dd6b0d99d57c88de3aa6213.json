{"ast":null,"code":"import Cross from \"../Components/Icons/Cross.vue\";\nimport Modal from \"../../../../Components/UniversalModal/UniversalModal.vue\";\nimport { MapNames, WeaponNames, GameDescriptions, GameModes } from \"../Components/ArenaEnums.js\";\nexport default {\n  inject: [\"getRooms\", \"getPlayer\", \"getModes\"],\n  components: {\n    Cross,\n    Modal\n  },\n  data() {\n    return {\n      isModalOpened: false,\n      playerName: \"\"\n    };\n  },\n  computed: {\n    player() {\n      return this.getPlayer();\n    },\n    rooms() {\n      return this.getRooms();\n    },\n    modes() {\n      return this.getModes();\n    },\n    currentRoom() {\n      return this.rooms.find(room => room.id == this.$route.params.id);\n    },\n    activeMode() {\n      var mode = this.modes.find(mode => mode.gameType == this.currentRoom.gameType);\n      console.log(\" this.currentRoom.gameType \" + this.currentRoom.gameType);\n      console.log(JSON.stringify(mode));\n      return mode;\n    },\n    isOwner() {\n      return this.currentRoom.creator.uuid == this.player.uuid;\n    }\n  },\n  methods: {\n    onKeyUp(e) {\n      if (e.keyCode === 27 && !window.isModalShow && !this.isModalOpened) this.onBack();\n    },\n    removePlayer(player) {\n      this.$callClient(\"Arena:Client:RemovePlayer\", this.currentRoom.id, player);\n    },\n    addPlayer() {\n      this.isModalOpened = true;\n    },\n    onPlayerAdding() {\n      if (this.playerName) this.$callClient(\"Arena:Client:AddPlayer\", this.currentRoom.id, this.playerName);\n      this.onModalClose();\n    },\n    onModalClose() {\n      this.isModalOpened = false;\n      this.playerName = \"\";\n    },\n    onBack() {\n      this.$callClient(\"Arena:Client:LeaveRoom\", this.currentRoom.id);\n    },\n    startGame() {\n      this.$callClient(\"Arena:Client:StartGame\", this.currentRoom.id);\n    },\n    deleteGame() {\n      this.$callClient(\"Arena:Client:DeleteGame\", this.currentRoom.id);\n    },\n    changeTeam() {\n      this.$callClient(\"Arena:Client:ChangeTeam\", this.currentRoom.id);\n    },\n    getGameName(game) {\n      return GameModes[game] || \"\";\n    },\n    getMapName(map) {\n      return MapNames[map] || \"\";\n    },\n    getWeaponName(weapon) {\n      return WeaponNames[weapon] || \"\";\n    },\n    getGameDescription(game) {\n      return GameDescriptions[game] || \"\";\n    }\n  },\n  created() {\n    window.addEventListener(\"keyup\", this.onKeyUp);\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"keyup\", this.onKeyUp);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}