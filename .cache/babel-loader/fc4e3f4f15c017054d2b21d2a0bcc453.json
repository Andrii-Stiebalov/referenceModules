{"ast":null,"code":"import { mapGetters } from \"vuex\";\nimport Select from \"../../../Components/CustomSelect/CustomSelect.vue\";\nimport BusinessWar__Info from \"./Components/BusinessWar__Info.vue\";\nexport default {\n  components: {\n    Select,\n    BusinessWar__Info\n  },\n  data() {\n    return {\n      isShowModal: false,\n      passedTime: 0,\n      selectedCard: this.$t(\"Выберите карту\"),\n      attackData: {},\n      attackId: null,\n      isShowNewModal: !true,\n      selectedBulletType: -1,\n      businessData: [{\n        coords: [-76.2111571613292, -635.060789499569],\n        holdersName: \"MobbDeep\",\n        isAttacked: true,\n        attackerName: \"EazyMFK_E\",\n        income: 10000,\n        durationOfWar: 654,\n        id: 17,\n        name: \"Гастроном\"\n      }, {\n        coords: [500, 500],\n        holdersName: \"JordanPick\",\n        income: 10000,\n        id: 11,\n        name: \"Гастроном\"\n      }],\n      ownerName: \"JordanPick\",\n      cartList: [\"№1\", \"№5\", \"№3\"],\n      playerCount: 2\n    };\n  },\n  computed: {\n    ...mapGetters({\n      map: \"getMap\",\n      familyName: \"getFamilyName\",\n      vectorLayer: \"getVectorLayer\"\n    }),\n    countOfOwnTerretory() {\n      return this.territoriesData.filter(data => data.familyName === this.familyName).length;\n    },\n    sortedBusines() {\n      const businesClone = [...this.businessData];\n      return businesClone.sort((a, b) => b.coords[1] - a.coords[1]);\n    },\n    countOfOwnBusines() {\n      return this.businessData.filter(busines => busines.holdersName === this.ownerName).length;\n    }\n  },\n  watch: {\n    isShowModal() {\n      this.selectedCard = this.$t(\"Выберите карту\");\n    },\n    businessData() {\n      setTimeout(() => {\n        this.setPositionToBusiness();\n      });\n    },\n    Settings: {\n      handler() {\n        this.playerCount = this.Settings?.MinPlayers;\n      },\n      deep: true\n    },\n    attackId() {\n      this.attackData = this.businessData.find(busines => busines.id === this.attackId);\n    },\n    selectedBulletType(val) {\n      console.log(`val`);\n      console.log(val);\n    }\n  },\n  methods: {\n    showModal(id) {\n      this.attackId = id;\n      // this.isShowModal = true;\n      this.isShowNewModal = true;\n    },\n    onCloseNewModal() {\n      this.isShowNewModal = false;\n    },\n    getGradient(current) {\n      const value = (current - this.Settings.MinPlayers) / (this.Settings.MaxPlayers - this.Settings.MinPlayers) * 100;\n      return `linear-gradient(to right, #40BF6A 0%, #40BF6A ${value}%, #151D1E ${value}%, #151D1E 100%)`;\n    },\n    onStartWar() {\n      const data = {\n        ZoneId: this.attackId,\n        MaxPlayers: this.playerCount,\n        AllowedBullets: this.selectedBulletType,\n        AllowedItems: this.Settings.ItemList.filter(item => item.value).map(item => item.id)\n      };\n      this.$callClient(\"C:BusinessWar:Attack\", data);\n      this.isShowNewModal = false;\n    },\n    onAttack() {\n      if (this.selectedCard === this.$t(\"Выберите карту\")) {\n        const select = document.querySelector(\".CustomSelect__selected-section\");\n        select.style.borderColor = \"#e8262daa\";\n        setTimeout(() => {\n          select.style.borderColor = \"#253436\";\n        }, 100);\n        return;\n      }\n      this.$callClient(\"C:BusinessWar:Attack\", [this.attackData.id, this.cartList.indexOf(this.selectedCard)]);\n      this.isShowModal = false;\n      this.attackId = null;\n    },\n    setPositionToBusiness() {\n      for (let i = 0; i < this.businessData.length; i++) {\n        const {\n          id,\n          coords\n        } = {\n          ...this.businessData[i]\n        };\n        const businesItem = document.getElementById(id);\n        if (!businesItem) {\n          return;\n        }\n        businesItem.style.position = \"absolute\";\n        businesItem.style.zIndex = -1;\n        const minCoords = coords.map(coord => coord / 2);\n        var pixel = this.map.getPixelFromCoordinate(minCoords);\n        businesItem.style.left = pixel[0] + \"px\";\n        businesItem.style.top = pixel[1] + \"px\";\n        businesItem.style.transform = \"scale(\" + (Math.pow(1.2, this.map.getView().getZoom() - 14) - 0.8) + \")\";\n        this.map.on(\"postcompose\", () => {\n          var pixel = this.map.getPixelFromCoordinate(minCoords);\n          businesItem.style.left = pixel[0] + \"px\";\n          businesItem.style.top = pixel[1] + \"px\";\n          businesItem.style.transform = \"scale(\" + (Math.pow(1.2, this.map.getView().getZoom() - 14) - 0.8) + \")\";\n        });\n      }\n    },\n    closeApp() {\n      this.$router.push(\"/\");\n      this.$callClient(\"Mafia:Map:CloseMap\");\n    },\n    keydown(e) {\n      if (e.keyCode === 27 && !window.isModalShow) {\n        this.closeApp();\n      }\n    },\n    bindClose() {\n      window.addEventListener(\"keyup\", this.keydown);\n    },\n    getPolygonCenter(coords) {\n      let ySum = 0;\n      const numVertices = coords.length;\n      for (let i = 0; i < numVertices; i++) {\n        ySum += coords[i][1];\n      }\n      const centerY = ySum / numVertices;\n      return centerY;\n    },\n    setTimer() {\n      this.timer = setInterval(() => {\n        this.passedTime++;\n      }, 1000);\n    },\n    convertToMoneyFormat(numb) {\n      return new Intl.NumberFormat(\"de-DE\").format(numb);\n    },\n    setData(data) {\n      this.businessData = data.businessData;\n      this.cartList = data.cartList;\n      this.ownerName = data.ownerName;\n      this.Settings = data.Settings;\n      if (this.Settings) {\n        this.playerCount = data.Settings.MinPlayers;\n      }\n    }\n  },\n  beforeUnmount() {\n    this.$store.dispatch(\"setIsShowMap\", false);\n    window.removeEventListener(\"keyup\", this.keydown);\n    this.$offClient(\"W:BusinessWar:setData\", this.setData);\n  },\n  mounted() {\n    this.$store.dispatch(\"setIsShowMap\", true);\n    if (this.vectorLayer) {\n      this.vectorLayer.forEach(layer => {\n        layer.getSource().clear();\n      });\n    }\n    this.setPositionToBusiness();\n    this.$onClient(\"W:BusinessWar:setData\", this.setData);\n    this.$callClient(\"C:BusinessWar:Ready\");\n    this.setTimer();\n    this.bindClose();\n  }\n};","map":null,"metadata":{},"sourceType":"module"}