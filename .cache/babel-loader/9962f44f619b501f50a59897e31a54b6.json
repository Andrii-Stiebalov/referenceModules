{"ast":null,"code":"import Tilt from \"vanilla-tilt-vue\";\nexport default {\n  data() {\n    return {\n      player1MoneyValue: \"\",\n      isMoneyActive: false,\n      selectedProperty: [],\n      isValidSum: false,\n      moneyForExchange: null\n    };\n  },\n  components: {\n    Tilt\n  },\n  props: {\n    playerData: Object,\n    isFrom: Boolean,\n    objectTypes: Object,\n    onHoverProperty: Object,\n    setOnHoverProperty: Function\n  },\n  methods: {\n    getPlayerPropertyCells(player) {\n      const propertyList = JSON.parse(JSON.stringify(player.Property));\n      if (player.Money) {\n        propertyList.push({\n          ObjectType: \"Money\",\n          Count: player.Money\n        });\n      }\n      if (propertyList.length === 8) {\n        return propertyList;\n      }\n      while (propertyList.length < 8 || propertyList.length % 2) {\n        propertyList.push({});\n      }\n      return propertyList;\n    },\n    convertToMoneyFormat(numb) {\n      return new Intl.NumberFormat(\"de-DE\").format(numb) + \"$\";\n    },\n    selectProperty(propertyID, objType) {\n      if (objType === \"Money\" || !this.isFrom) {\n        return;\n      }\n      if (this.selectedProperty.includes(propertyID)) {\n        this.selectedProperty = this.selectedProperty.filter(selectedPropID => selectedPropID !== propertyID);\n      } else {\n        const clone = [...this.selectedProperty];\n        clone.push(propertyID);\n        this.selectedProperty = clone;\n      }\n    },\n    changeIsMoneyActive() {\n      this.isMoneyActive = true;\n    },\n    validateSum(e) {\n      const value = e.target.value;\n      let isnum = /^\\d+$/.test(value);\n      this.player1MoneyValue = value;\n      this.isValidSum = isnum && +value <= this.playerData.Money && value.toString()[0] !== \"0\";\n    },\n    getBalance() {\n      return this.isFrom ? \"Ваш баланс: {0}\" : \"Баланс {1}: {0}\";\n    },\n    setMoney() {\n      if (!this.isValidSum) {\n        return;\n      }\n      if (this.moneyForExchange) {\n        this.player1MoneyValue = this.moneyForExchange;\n        this.moneyForExchange = null;\n        return;\n      }\n      this.moneyForExchange = this.player1MoneyValue;\n      this.player1MoneyValue = this.convertToMoneyFormat(this.player1MoneyValue);\n    },\n    isObjectNoEmpty(obj) {\n      const values = Object.values(obj);\n      return !!values.length;\n    },\n    getPropertyName(property) {\n      if (property.Name) {\n        return property.Name;\n      } else if (property.ObjectType === \"House\") {\n        return this.$t(\"Дом\") + \" №\" + property.ID;\n      }\n      return \"\";\n    }\n  },\n  watch: {\n    selectedProperty() {\n      this.$emit(\"selectProperty\", this.selectedProperty, this.moneyForExchange);\n    },\n    isMoneyActive(newValue) {\n      if (!newValue) {\n        this.moneyForExchange = null;\n        this.player1MoneyValue = \"\";\n      }\n    },\n    moneyForExchange() {\n      this.$emit(\"selectProperty\", this.selectedProperty, this.moneyForExchange, this.isFrom);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}