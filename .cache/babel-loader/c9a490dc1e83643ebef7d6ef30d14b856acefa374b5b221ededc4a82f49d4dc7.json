{"ast":null,"code":"export default {\n  props: {\n    buyPrice: Number\n  },\n  data() {\n    return {\n      keys: [100, 1000, 10000, 100000, 250000, 1000000],\n      activeKey: 0,\n      inputString: \"\"\n    };\n  },\n  computed: {\n    sum() {\n      let sum = this.activeKey ? this.activeKey * this.buyPrice : this.inputString ? +this.inputString * this.buyPrice : 0;\n      return sum.toLocaleString();\n    }\n  },\n  methods: {\n    isActive(key) {\n      return this.activeKey === key;\n    },\n    setActive(key) {\n      this.inputString = \"\";\n      this.activeKey = key;\n    },\n    resetActive() {\n      this.activeKey = 0;\n    },\n    buyChips() {\n      if (this.activeKey) {\n        this.$emit(\"buyChips\", this.activeKey);\n        this.clearData();\n      }\n      if (this.inputString) {\n        this.$emit(\"buyChips\", +this.inputString);\n        this.clearData();\n      }\n    },\n    clearData() {\n      this.activeKey = 0;\n      this.inputString = \"\";\n    }\n  },\n  watch: {\n    inputString: function (val) {\n      if (!/^[\\d]+$/.test(val) || val.length > 20) {\n        this.inputString = val.substring(0, val.length - 1);\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}