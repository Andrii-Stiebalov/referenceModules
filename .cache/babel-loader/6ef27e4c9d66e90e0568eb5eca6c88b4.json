{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"FBIPolice-tab\"\n};\nconst _hoisted_2 = {\n  class: \"FBIPolice-calls__header\"\n};\nconst _hoisted_3 = {\n  class: \"FBIPolice-list calls\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Row = _resolveComponent(\"Row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.points, point => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([\"FBIPolice-calls__header-item\", point.id]),\n      key: point.id\n    }, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(point.title)), 1)], 2);\n  }), 128))]), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getCalls, call => {\n    return _openBlock(), _createBlock(_component_Row, {\n      key: call.id,\n      call: call,\n      onAcceptCall: $options.acceptCall\n    }, null, 8, [\"call\", \"onAcceptCall\"]);\n  }), 128))])]);\n}","map":null,"metadata":{},"sourceType":"module"}