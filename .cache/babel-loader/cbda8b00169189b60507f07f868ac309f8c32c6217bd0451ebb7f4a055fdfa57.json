{"ast":null,"code":"import ConfirmationHeader from \"../../../global/organization/ConfirmationHeader.js\";\nimport RanksPermissions from \"../RanksPermissions.js\";\nimport RanksRow from \"./RanksRow.js\";\nexport default {\n  template: `\n    <div class=\"controls-main__wrapper header\">\n        <ConfirmationHeader\n            :headerProps=\"headerProps\"\n            @getBack=\"getBack\"\n            @saveChanges=\"saveChanges\">\n        </ConfirmationHeader>\n        <div class=\"controls-main__content\">\n            <div class=\"controls-main__content-list\">\n                <RanksRow \n                    v-for=\"(permisson,type) in currentPermissions\" \n                    :key=\"type\"\n                    :title=\"getPermissionTitle(type)\"\n                    v-model=\"currentPermissions[type]\">\n                </RanksRow>\n            </div>\n        </div>\n    </div>\n    `,\n  components: {\n    ConfirmationHeader,\n    RanksRow\n  },\n  props: {\n    editableRank: {\n      type: Object\n    }\n  },\n  data() {\n    return {\n      RanksPermissions,\n      currentPermissions: []\n    };\n  },\n  computed: {\n    headerProps() {\n      let id = this.editableRank && this.editableRank.id !== undefined ? this.editableRank.id : ``;\n      let title = this.editableRank && this.editableRank.name !== undefined ? this.editableRank.name : ``;\n      let subtitle = this.$GetText(`Редактирование`);\n      return {\n        id,\n        title,\n        subtitle\n      };\n    }\n  },\n  methods: {\n    getBack() {\n      this.$EBus.$emit(`src/components/controls/organization/ranks/edit/RanksEdit->src/mixins/controls/organization/Ranks:RanksGetBack`);\n    },\n    saveChanges() {\n      this.$EBus.$emit(`src/components/controls/organization/ranks/edit/RanksEdit->src/mixins/controls/organization/Ranks:RanksEditPermissions`, this.headerProps.id, this.currentPermissions);\n    },\n    getPermissionTitle(type) {\n      return this.RanksPermissions[type] !== undefined ? this.RanksPermissions[type] : ``;\n    },\n    RanksSetDefault() {\n      this.currentPermissions = Object.assign({}, this.editableRank.permissions);\n    }\n  },\n  mounted() {\n    if (this.editableRank && this.editableRank.permissions !== undefined && typeof this.editableRank.permissions === \"object\") this.currentPermissions = Object.assign({}, this.editableRank.permissions);\n    this.$EBus.$on(\"src/mixins/controls/organization/Ranks->src/components/controls/organization/ranks/edit/RanksEdit:RanksSetDefault\", this.RanksSetDefault);\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}