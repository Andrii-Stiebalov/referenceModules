{"ast":null,"code":"export default {\n  props: {\n    id: {\n      type: Number,\n      required: true\n    },\n    active: {\n      type: Boolean,\n      required: true\n    },\n    downTime: {\n      type: Number,\n      required: true\n    },\n    upTime: {\n      type: Number,\n      required: true\n    },\n    range: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      onAnim: false,\n      standartHeight: 8,\n      goDown: false,\n      isFinished: false\n    };\n  },\n  computed: {\n    zoneStyle() {\n      return `height:${this.standartHeight}vw`;\n    }\n  },\n  methods: {\n    onKeyDown() {\n      if (this.active && !this.onAnim && !this.isFinished) {\n        this.onAnim = true;\n        this.$emit(\"onAnim\", this.id, true);\n        Object.assign(this.$refs.img.style, {\n          height: \"2vw\",\n          transition: `${this.upTime}ms all linear`\n        });\n        setTimeout(() => {\n          Object.assign(this.$refs.img.style, {\n            height: \"9vw\",\n            transition: `${this.downTime}ms all linear`\n          });\n          this.goDown = true;\n          this.currentHeight = 2 + 2.553 + 2.916;\n          this.time = 0;\n          this.interval = setInterval(() => {\n            this.currentHeight += this.division * 10;\n            this.time += 10;\n            if (this.time >= this.downTime) clearInterval(this.interval);\n          }, 10);\n          setTimeout(() => {\n            this.goDown = false;\n            this.onAnim = false;\n            this.$emit(\"onAnim\", this.id, false);\n            if (this.isFinished) this.$emit(\"onAnim\", this.id, true);\n          }, this.downTime);\n        }, this.upTime);\n      }\n    },\n    onKeySpace(id) {\n      if (this.id === id && !this.isFinished) {\n        if (Math.abs(this.currentHeight - this.standartHeight) <= this.range && this.goDown) {\n          this.isFinished = true;\n          this.$emit(\"win\");\n          Object.assign(this.$refs.img.style, {\n            height: `${this.standartHeight - 2.553 - 2.916}vw`,\n            transition: \"none\"\n          });\n          Object.assign(this.$refs.key.style, {\n            \"margin-top\": \"auto\"\n          });\n        }\n      }\n    }\n  },\n  mounted() {\n    this.$EBus.on(\"keyW\", this.onKeyDown);\n    this.$EBus.on(\"keySpace\", this.onKeySpace);\n    this.division = 7 / this.downTime;\n    this.maxHeigth = 13;\n    this.minHeight = 8;\n    this.standartHeight = this.minHeight + Math.random() * (this.maxHeigth - this.minHeight);\n  },\n  beforeUnmount() {\n    this.$EBus.off(\"keyW\", this.onKeyDown);\n    this.$EBus.off(\"keySpace\", this.onKeySpace);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}