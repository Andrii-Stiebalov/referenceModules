{"ast":null,"code":"import CdnResolverImage from \"../../../../Components/CdnResolverImage.vue\";\nexport default {\n  data() {\n    return {\n      furnituresList: [],\n      selectedItem: \"\",\n      sellItem: null,\n      isShowModal: false,\n      filterTypes: [\"Все\", \"Не установленные \", \"Установленные\"],\n      selectedFilterType: \"Все\",\n      hotKeyList: [\n      // { name: \"Перемещение курсором\", imgName: \"F2\" },\n      // { name: \"Поставить объект\", imgName: \"LKM\" },\n      {\n        name: \"Отмена\",\n        imgName: \"ESC\"\n      }, {\n        name: \"Двигаться по вертикали\",\n        imgName: \"arrowVertical\"\n      }, {\n        name: \"Двигать по горизонтали\",\n        imgName: \"arrowHorizontal\"\n      }, {\n        name: \"Поднять/опустить\",\n        imgName: \"AltArrowH\"\n      }, {\n        name: \"Поворот\",\n        imgName: \"arrowVerticalV\"\n      }\n      // { name: \"Поворот\", imgName: \"shift\" },\n      ]\n    };\n  },\n  components: {\n    CdnResolverImage\n  },\n  computed: {\n    filterFurnitures() {\n      if (this.selectedFilterType === \"Все\") {\n        return this.furnituresList;\n      }\n      return this.furnituresList.filter(furniture => {\n        return this.selectedFilterType === \"Установленные\" ? furniture.isMounted : !furniture.isMounted;\n      });\n    }\n  },\n  methods: {\n    getHotKeyePath(name) {\n      return require(`../Assets/HotKeyIcons/${name}.svg`);\n    },\n    setData(data) {\n      this.data = Object.assign(this.$data, this.parseData(data));\n      this.$emit(\"setPlayerinfo\", data.playerData);\n    },\n    parseData(data) {\n      let newObj = {\n        furnituresList: [],\n        playerData: data.playerData\n      };\n      newObj.furnituresList = this.parseArray(data.furnituresList);\n      return newObj;\n    },\n    parseArray(furnituresList) {\n      let array = [];\n      for (let item of furnituresList) {\n        array.push({\n          Identifier: item[0],\n          isMounted: item[1],\n          Price: item[2],\n          Name: item[3],\n          ImagePath: `cdn/furniture/images/${item[4]}.png`,\n          propName: item[4]\n        });\n      }\n      return array;\n    },\n    setSelectedItem(id) {\n      this.selectedItem = id;\n      this.selectedMultiplication = \"1\";\n    },\n    onClearAll() {\n      this.$callClient(\"C:FurnitureInventory:ClearAll\");\n    },\n    onUseItem(type, id, propname) {\n      if (type === \"mount\") {\n        this.$callClient(\"C:FurnitureInventory:Mount\", id, propname);\n      } else {\n        this.$callClient(\"C:FurnitureInventory:Unmount\", id);\n      }\n    },\n    onShowModal(item) {\n      this.isShowModal = true;\n      this.sellItem = item;\n    },\n    onSellItem() {\n      this.isShowModal = false;\n      this.$callClient(\"C:FurnitureInventory:sell\", this.sellItem.Identifier);\n      this.sellItem = null;\n    },\n    formatNumberToCurrency(number) {\n      let formattedNumber = number.toString().replace(\".\", \",\");\n      formattedNumber = formattedNumber.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n      formattedNumber = formattedNumber + \" $\";\n      return formattedNumber;\n    },\n    setPlayerData(data) {\n      this.$emit(\"setPlayerinfo\", data);\n    },\n    ClearAll() {\n      this.furnituresList = [];\n    },\n    AddFurniture(data) {\n      this.furnituresList = [...this.furnituresList, ...this.parseArray(data)];\n    },\n    DespawnAll() {\n      this.furnituresList = this.furnituresList.map(item => item.isMounted = true);\n    },\n    SetSpawnStatus(id, status) {\n      let item = this.furnituresList.find(item => item.Identifier == id);\n      if (item) {\n        item.isMounted = status;\n      }\n    },\n    RemoveFurtinure(id) {\n      this.furnituresList = this.furnituresList.filter(item => item.Identifier !== id);\n    }\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"keyup\", this.keydown);\n    this.$offClient(\"W:FurnitureInventory:setData\", this.setData);\n    this.$offClient(\"W:FurnitureInventory:AddFurniture\", this.AddFurniture);\n    this.$offClient(\"W:FurnitureInventory:SetSpawnStatus\", this.SetSpawnStatus);\n    this.$offClient(\"W:FurnitureInventory:RemoveFurtinure\", this.RemoveFurtinure);\n    this.$offClient(\"W:FurnitureInventory:ClearAll\", this.ClearAll);\n    this.$offClient(\"W:FurnitureInventory:DespawnAll\", this.DespawnAll);\n    this.$offClient(\"W:FurnitureInventory:SetPlayerData\", this.setPlayerData);\n  },\n  mounted() {\n    this.$onClient(\"W:FurnitureInventory:setData\", this.setData);\n    this.$onClient(\"W:FurnitureInventory:AddFurniture\", this.AddFurniture);\n    this.$onClient(\"W:FurnitureInventory:SetSpawnStatus\", this.SetSpawnStatus);\n    this.$onClient(\"W:FurnitureInventory:RemoveFurtinure\", this.RemoveFurtinure);\n    this.$onClient(\"W:FurnitureInventory:ClearAll\", this.ClearAll);\n    this.$onClient(\"W:FurnitureInventory:DespawnAll\", this.DespawnAll);\n    this.$onClient(\"W:FurnitureInventory:SetPlayerData\", this.setPlayerData);\n    this.$callClient(\"C:FurnitureInventory:Ready\");\n  }\n};","map":null,"metadata":{},"sourceType":"module"}