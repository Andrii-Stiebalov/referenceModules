{"ast":null,"code":"import ContractsMenuMain from \"./Components/ContractsMenuMain.vue\";\nimport CreateNew from \"./Components/ContractsMenuCreateNew.vue\";\nimport ContractsInfo from \"./Components/ContractsInfo/ContractsInfo.vue\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data() {\n    return {\n      isAllLoaded: false,\n      typeShowContractsInfo: null,\n      isShowContractsInInfoSection: false,\n      newContractMenuData: {},\n      govContract: null,\n      currentBalance: 0,\n      dayTax: 0,\n      countOfNewContracts: {\n        active: 0,\n        incoming: 0,\n        outgoing: 0\n      },\n      isShowTax: false,\n      ownerName: \"\",\n      selectedContract: undefined,\n      isActiveNewContract: false,\n      audios: [{\n        name: \"book-up\",\n        path: \"./Assets/book-up.mp3\"\n      }, {\n        name: \"book-down\",\n        path: \"./Assets/book-down.mp3\"\n      }, {\n        name: \"onLamp\",\n        path: \"./Assets/onLamp.mp3\"\n      }]\n    };\n  },\n  components: {\n    ContractsMenuMain,\n    CreateNew,\n    ContractsInfo\n  },\n  watch: {\n    blankData: {\n      handler(newValue) {\n        const changedProperty = this.getChangedPropertyName(newValue);\n        this.checkIsValidValue(changedProperty, newValue[changedProperty]);\n        this.prevBlankData = {\n          ...newValue\n        };\n        this.countOfNewContracts = {\n          active: newValue.active.length,\n          incoming: newValue.active.length,\n          outgoing: newValue.outgoing.length\n        };\n      },\n      deep: true\n    }\n  },\n  methods: {\n    getPath(path) {\n      return require(path);\n    },\n    setSelectedContract(value) {\n      this.selectedContract = value;\n    },\n    onKeyUp(e) {\n      if (e.keyCode === 27 && !window.isModalShow) {\n        if (this.isActiveNewContract) {\n          this.isActiveNewContract = false;\n          return;\n        }\n        if (this.typeShowContractsInfo) {\n          if (this.selectedContract) {\n            this.setSelectedContract(null);\n            return;\n          } else {\n            this.typeShowContractsInfo = false;\n            return;\n          }\n        }\n        this.$callClient(\"C:ContractsMenu:Destroyed\");\n      }\n    },\n    setData(data) {\n      this.data = Object.assign(this.$data, data);\n      // this.countOfNewContracts = {\n      //   active: this.contractsData.active?.length,\n      //   incoming: this.contractsData.incoming?.length,\n      //   outgoing: this.contractsData.outgoing?.length,\n      // };\n    },\n    setTypeContractsInfo(type) {\n      this.typeShowContractsInfo = type;\n    },\n    setisActiveNewContract(value) {\n      this.isActiveNewContract = value;\n    },\n    getChangedPropertyName(newValue) {\n      if (!this.prevBlankData) {\n        return null;\n      }\n      for (const prop in newValue) {\n        if (newValue[prop] !== this.prevBlankData[prop]) {\n          return prop;\n        }\n      }\n      return null;\n    },\n    onBookEnter() {\n      const audio = document.getElementById(\"book-up\");\n      audio.pause();\n      audio.currentTime = 0;\n      audio.play();\n    },\n    onBookLeave() {\n      const audio = document.getElementById(\"book-down\");\n      audio.pause();\n      audio.currentTime = 0;\n      setTimeout(() => audio.play(), 200);\n    }\n  },\n  computed: {\n    ...mapGetters(\"family\", {\n      contracts: \"getContracts\",\n      familyName: \"getFamilyName\"\n    })\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"keyup\", this.onKeyUp);\n    this.$offClient(\"W:ContractsMenu:setData\", this.setData);\n  },\n  mounted() {\n    window.addEventListener(\"keyup\", this.onKeyUp);\n    setTimeout(() => {\n      this.isAllLoaded = true;\n      const audio = document.getElementById(\"onLamp\");\n      audio.pause();\n      audio.currentTime = 0;\n      audio.play();\n    }, 1000);\n    this.$onClient(\"W:ContractsMenu:setData\", this.setData);\n    this.$callClient(\"C:ContractsMenu:Ready\");\n  }\n};","map":null,"metadata":{},"sourceType":"module"}