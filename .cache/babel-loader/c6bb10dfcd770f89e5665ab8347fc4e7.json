{"ast":null,"code":"import ArrowSwitcher from \"./ArrowSwitcher.js\";\nimport BackpackInfo from \"./BackpackInfo.js\";\nimport DefaultLogo from \"./DefaultLogo.js\";\nimport SpecialLogo from \"./SpecialLogo.js\";\nexport default {\n  template: `\n    <div class=\"store-navigation__wrapper\">\n        <DefaultLogo\n            v-if=\"isDefaultLogo\"\n            :title=\"title\"\n            :subtitle=\"subtitle\">\n        </DefaultLogo>\n        <SpecialLogo\n            v-else\n            :title=\"dTitle\"\n            :image=\"dImage\">\n        </SpecialLogo>\n        <div class=\"store-navigation__main\">\n            <div class=\"store-navigation__main-list\">\n                <div class=\"store-navigation-list__item\" v-for=\"item in items\" @click=\"setActiveItem(item)\" :class=\"{active:itemIsActive(item)}\">\n                    <p>{{item.name}}</p>\n                    <p>{{moneyString(item.price)}}</p>\n                </div>\n            </div>\n        </div>\n        <transition name=\"controls-fade\">\n            <ArrowSwitcher\n                v-if=\"showArrowSwitcher\"\n                @setModification=\"setModification\"\n                :displayModification=\"displayModification\">\n            </ArrowSwitcher>\n            <BackpackInfo \n                v-if=\"showBackpackInfo\"\n                :activeModification=\"activeModification\">\n            </BackpackInfo>\n        </transition>\n        <div class=\"store-navigation__buttons\">\n            <div class=\"store-navigation__buttons-item\" @click=\"buyItem('cash')\">\n                <p>{{$GetText('Оплатить наличными')}}</p>\n            </div>\n            <div class=\"store-navigation__buttons-item\" @click=\"buyItem('bank')\">\n                <p>{{$GetText('Оплатить безналичными')}}</p>\n            </div>\n            <div class=\"store-navigation__buttons-item\" @click=\"closeStore\">\n                <p>{{$GetText('Выйти')}}</p>\n            </div>\n        </div>\n    </div>\n    `,\n  components: {\n    DefaultLogo,\n    SpecialLogo,\n    ArrowSwitcher,\n    BackpackInfo\n  },\n  props: {\n    type: {\n      type: String\n    },\n    title: {\n      type: String\n    },\n    subtitle: {\n      type: String\n    },\n    activeCategory: {\n      type: Object\n    },\n    items: {\n      type: Array\n    },\n    activeItem: {\n      type: Object\n    },\n    modifications: {\n      type: Array\n    },\n    activeModification: {\n      type: Object\n    },\n    wallet: {\n      type: String\n    }\n  },\n  computed: {\n    isDefaultLogo() {\n      return this.type === 'masks' || this.type === 'backpacks' ? true : false;\n    },\n    dTitle() {\n      return this.activeCategory && this.activeCategory.content !== undefined ? this.activeCategory.content : ``;\n    },\n    dImage() {\n      return this.activeCategory && this.activeCategory.image !== undefined ? this.activeCategory.image : ``;\n    },\n    displayModification() {\n      return this.activeModification && this.activeModification.id !== undefined ? this.activeModification.id : ``;\n    },\n    showModifications() {\n      return this.activeItem ? true : false;\n    },\n    showArrowSwitcher() {\n      return this.showModifications && (this.type === 'masks' || this.type === 'appearence') && this.modifications.length !== 0;\n    },\n    showBackpackInfo() {\n      return this.showModifications && this.type === 'backpacks';\n    }\n  },\n  methods: {\n    moneyString(value) {\n      return value !== undefined ? `${value.toLocaleString('uk-UA')} ${this.wallet}` : ``;\n    },\n    itemIsActive(item) {\n      return item === this.activeItem;\n    },\n    setActiveItem(item) {\n      if (item !== this.activeItem) this.$emit('setActiveItem', item);\n    },\n    closeStore() {\n      this.$emit('closeStore');\n    },\n    setModification(type) {\n      let modificationIndex = this.modifications.indexOf(this.modifications.find(x => x === this.activeModification));\n      if (type === 'prev') {\n        if (this.modifications[modificationIndex - 1]) this.$emit('setActiveModification', this.modifications[modificationIndex - 1]);\n      }\n      if (type === 'next') {\n        if (this.modifications[modificationIndex + 1]) this.$emit('setActiveModification', this.modifications[modificationIndex + 1]);\n      }\n    },\n    buyItem(type) {\n      if (this.activeItem) {\n        this.$emit('buyItem', type);\n      } else {\n        notify(1, 0, 'Сначала выберите вещь для покупки', 500);\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}