{"ast":null,"code":"export default {\n  data() {\n    return {\n      player: {},\n      rooms: [],\n      modes: [],\n      zoom: 1\n    };\n  },\n  provide() {\n    return {\n      getPlayer: () => this.player,\n      getRooms: () => this.rooms,\n      getModes: () => this.modes\n    };\n  },\n  methods: {\n    setData(player, rooms, modes) {\n      this.player = player;\n      this.rooms = rooms;\n      this.modes = modes;\n      console.log(JSON.stringify(this.modes));\n    },\n    addRoom(room) {\n      let desiredRoomID = this.rooms.findIndex(sRoom => sRoom.id == room.id);\n      if (desiredRoomID != -1) {\n        this.rooms.splice(desiredRoomID, 1, room);\n      } else {\n        this.rooms.push(room);\n      }\n    },\n    removeRoom(roomID) {\n      let desiredRoomID = this.rooms.findIndex(sRoom => sRoom.id == roomID);\n      if (desiredRoomID != -1) {\n        this.rooms.splice(desiredRoomID, 1);\n      }\n    },\n    onResize() {\n      this.zoom = window.innerWidth < 1.5 * window.innerHeight ? window.innerWidth / 1.5 / window.innerHeight : 1;\n    }\n  },\n  created() {\n    window.addEventListener(\"resize\", this.onResize);\n    this.onResize();\n    this.$onClient(\"Arena:CEF:SetData\", this.setData);\n    this.$onClient(\"Arena:CEF:AddRoom\", this.addRoom);\n    this.$onClient(\"Arena:CEF:RemoveRoom\", this.removeRoom);\n    this.$callClient(\"Arena:Client:Ready\");\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"resize\", this.onResize);\n    this.$offClient(\"Arena:CEF:SetData\", this.setData);\n    this.$offClient(\"Arena:CEF:AddRoom\", this.addRoom);\n    this.$offClient(\"Arena:CEF:RemoveRoom\", this.removeRoom);\n    this.$callClient(\"Arena:Client:Closed\");\n  }\n};","map":null,"metadata":{},"sourceType":"module"}