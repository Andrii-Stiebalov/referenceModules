{"ast":null,"code":"import ColorPicker from \"./ColorPicker\";\nimport { hexToHsv, hsvToHex } from \"../../Assets/hsvUtils\";\nexport default {\n  data() {\n    return {\n      colorList: {\n        1: \"#FFC0CB\",\n        2: \"#AEC6CF\",\n        3: \"#36CED7\",\n        4: \"#556B2F\",\n        5: \"#FC9C73\",\n        6: \"#F5F5DC\",\n        7: \"#000080\",\n        8: \"#F8F8FF\",\n        9: \"#FF4500\",\n        10: \"#800080\",\n        11: \"#FFD700\",\n        12: \"#CD7F32\",\n        13: \"#50C878\",\n        14: \"#8B0000\",\n        15: \"#7FFFD4\",\n        16: \"#D8BFD8\",\n        17: \"#EB4763\",\n        18: \"#E6E6FA\"\n      },\n      selectedColor: \"#FF0000\",\n      inputColor: \"\",\n      isFromInput: false\n    };\n  },\n  components: {\n    ColorPicker\n  },\n  computed: {\n    hexColor() {\n      return hsvToHex(this.colorHsv.h, this.colorHsv.s, this.colorHsv.v);\n    }\n  },\n  watch: {\n    colorHsv: {\n      handler() {\n        if (this.isFromInput) {\n          return;\n        }\n        this.selectedColor = this.hexColor;\n      },\n      deep: true\n    },\n    selectedSubCatigory(val) {\n      console.log(`selectedSubCatigory`);\n      console.log(val);\n    }\n  },\n  methods: {\n    onInput(e) {\n      if (this.isValidHex(e.target.value)) {\n        this.selectedColor = e.target.value;\n        this.inputColor = this.selectedColor;\n        const hsv = this.hexToHsv(this.inputColor);\n        this.setColorHsv(hsv, true);\n      }\n    },\n    hexToHsv(hex) {\n      const hsvArr = hexToHsv(hex);\n      return hsvArr.reduce((acum, item, index) => {\n        const keys = [\"h\", \"s\", \"v\"];\n        const key = keys[index];\n        acum[key] = item;\n        return acum;\n      }, {});\n    },\n    onSelectBindColor(color) {\n      this.inputColor = color;\n      this.selectedColor = this.inputColor;\n      const hsv = this.hexToHsv(color);\n      this.setColorHsv(hsv, true);\n    },\n    setColorHsv(val, isFromInput) {\n      this.isFromInput = isFromInput;\n      this.$emit(\"setColorHsv\", val);\n    },\n    isValidHex(hex) {\n      // Регулярний вираз для перевірки шістнадцяткового коду\n      const hexRegex = /^#[0-9A-F]{6}$/i;\n      return hexRegex.test(hex);\n    }\n  },\n  mounted() {\n    console.log(`selectedSubCatigory`);\n    console.log(this.selectedSubCatigory);\n  },\n  props: {\n    colorHsv: Object,\n    selectedSubCatigory: Object,\n    isSpecial: Boolean\n  }\n};","map":null,"metadata":{},"sourceType":"module"}