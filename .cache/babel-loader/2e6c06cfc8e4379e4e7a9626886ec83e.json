{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, Transition as _Transition, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Transition, {\n    name: \"PhotoViewerTransition\"\n  }, {\n    default: _withCtx(() => [$options.photoViewerSrc ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"PhotoViewer\",\n      onWheel: _cache[1] || (_cache[1] = (...args) => $options.onScroll && $options.onScroll(...args)),\n      onClick: _cache[2] || (_cache[2] = (...args) => $options.hideImg && $options.hideImg(...args))\n    }, [$options.photoViewerTitle ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _toDisplayString($options.photoViewerTitle), 1)) : _createCommentVNode(\"\", true), _createElementVNode(\"img\", {\n      onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"])),\n      style: _normalizeStyle({\n        transform: `scale(${$data.scale})`\n      }),\n      src: $options.photoViewerSrc,\n      draggable: \"false\",\n      alt: \"img\"\n    }, null, 12, _hoisted_2)], 32)) : _createCommentVNode(\"\", true)]),\n    _: 1\n  });\n}","map":null,"metadata":{},"sourceType":"module"}