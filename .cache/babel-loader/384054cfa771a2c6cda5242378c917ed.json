{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"placeholder\", \"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"ATMInput\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.setFocus && $options.setFocus(...args))\n  }, [_createElementVNode(\"input\", {\n    type: \"text\",\n    ref: \"input\",\n    placeholder: $props.placeholder,\n    value: $props.value,\n    onFocus: _cache[0] || (_cache[0] = (...args) => $options.onFocus && $options.onFocus(...args)),\n    onBlur: _cache[1] || (_cache[1] = (...args) => $options.onBlur && $options.onBlur(...args)),\n    onInput: _cache[2] || (_cache[2] = (...args) => $options.onInput && $options.onInput(...args))\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_1), _createElementVNode(\"div\", {\n    class: \"ATMInput-border\",\n    style: _normalizeStyle({\n      '-webkit-mask': $options.getMaskStyle\n    })\n  }, null, 4 /* STYLE */), _createElementVNode(\"p\", {\n    ref: \"text\"\n  }, _toDisplayString($props.title), 513 /* TEXT, NEED_PATCH */)]);\n}","map":null,"metadata":{},"sourceType":"module"}