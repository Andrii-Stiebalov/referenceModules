{"ast":null,"code":"import list from \"./Components/list.vue\";\nimport listcolor from \"./Components/listColor.vue\";\nimport data from \"./Assets/data/data\";\nimport $ from \"jquery\";\nexport default {\n  components: {\n    list,\n    listcolor\n  },\n  data() {\n    return {\n      locale: \"ua\",\n      active: true,\n      isSurgery: false,\n      selectedParent: \"1\",\n      selectedTab: \"1\",\n      faceTab: \"1\",\n      hairTab: \"1\",\n      DefaultData: {\n        fathers: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 42, 43, 44, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45],\n        mothers: [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 42, 43, 44]\n      },\n      savedData: {\n        gender: !true,\n        mother: 0,\n        father: 0,\n        similarity: 0.5,\n        skin: 0.1,\n        hair: 0,\n        beard: 0,\n        eyebrows: 1,\n        eyebrowHeight: -0.9,\n        eyebrowDepth: -0.9,\n        eyeScale: -0.9,\n        noseWidth: -0.9,\n        noseHeight: -0.9,\n        noseDepth: -0.9,\n        noseBroke: -0.9,\n        noseTipLength: -0.9,\n        noseTipHeight: -0.9,\n        cheekboneHeight: -0.9,\n        cheekboneWidth: -0.9,\n        cheekDepth: -0.9,\n        lipThickness: -0.9,\n        jawWidth: -0.9,\n        jawShape: -0.9,\n        chinWidth: -0.9,\n        chinHeight: -0.9,\n        chinDepth: -0.9,\n        chinIndent: -0.9,\n        eyeColor: 3,\n        hairColor: 4,\n        beardColor: 5,\n        eyebrowsColor: 6\n      }\n    };\n  },\n  computed: {\n    mainData() {\n      return data;\n    }\n  },\n  methods: {\n    setData(data) {\n      this.$recursiveAssign(data, this.$data);\n    },\n    genderSw(type) {\n      if (type) {\n        this.savedData.gender = true;\n        this.$callClient(\"characterGender\", \"Male\");\n      } else {\n        this.savedData.gender = false;\n        this.$callClient(\"characterGender\", \"Female\");\n      }\n    },\n    save() {\n      try {\n        console.log(this.savedData);\n        this.$callClient(\"characterSave\");\n      } catch (e) {\n        alert(`Что-то пошло не так, обратитесь в тех. поддержку. Ошибки ${e}`);\n      }\n    },\n    changeParent(e) {\n      this.selectedParent = e;\n    },\n    onSelctTab(e) {\n      this.selectedTab = e;\n    },\n    randomChoose(e) {\n      this.$callClient(\"Character:Random\");\n    }\n  },\n  mounted() {\n    this.$onClient(\"Character:SetData\", this.setData);\n    this.$callClient(\"Character:Ready\");\n    const self = this;\n    $(function () {\n      $(\".button-warning__character\").on(\"click\", function () {\n        $(\".character-warning\").css({\n          display: \"none\"\n        });\n      });\n      $(document).on(\"input\", 'input[type=\"range\"]', function (e) {\n        let id = e.target.id;\n        let val = e.target.value;\n        try {\n          self.$callClient(\"editorList\", id, Number(val));\n        } catch (e) {\n          console.log(e);\n        }\n      });\n      try {} catch {\n        // alert(\"Ошибка в rangeslider\");\n        console.log(\"Ошибка в rangeslider\");\n      }\n      $(\".rangeslider\").append('<div class=\"range-fill__right\"></div><div class=\"range-fill__left\"></div>');\n      $(\".character-options__male-chooser__wrapper-item\").on(\"click\", function () {\n        console.log(\"click=====\");\n        $(\".character-options__male-chooser__wrapper-item\").removeClass(\"active\");\n        $(this).addClass(\"active\");\n        if ($(this).data(\"tabs\") === \"gendermale\") {\n          try {\n            self.genderSw(true);\n          } catch (e) {\n            alert(e);\n          }\n        }\n        if ($(this).data(\"tabs\") === \"genderfemale\") {\n          try {\n            self.genderSw(false);\n          } catch (e) {\n            alert(e);\n          }\n        }\n      });\n      $(\".character-wrapper__card\").on(\"mouseover\", () => {\n        self.$callClient(\"CharacterCreator.Hover\", true);\n      });\n\n      // $(\".character-options__wrapper\").on(\"mouseover\", () => {\n      //   self.$callClient(\"CharacterCreator.Hover\", true);\n      // });\n\n      $(\".character-wrapper__card\").on(\"mouseout\", () => {\n        self.$callClient(\"CharacterCreator.Hover\", false);\n      });\n      // $(\".card-content__gen-tabs__wrapper-item\").on(\"click\", function () {\n      //   if ($(this).attr(\"id\") === \"mother\") {\n      //     $(\n      //       `.card-content__gen-tabs__wrapper-item#${$(this).attr(\"id\")}`\n      //     ).removeClass(\"active\");\n      //     $(this).addClass(\"active\");\n      //     $(\n      //       `.card-content__gen-tabs__selected-wrapper__preview-${$(this).attr(\n      //         \"id\"\n      //       )} img`\n      //     ).attr(\"src\", $(this).find(\"img\").attr(\"src\"));\n      //   }\n\n      //   if ($(this).attr(\"id\") === \"father\") {\n      //     $(\n      //       `.card-content__gen-tabs__wrapper-item#${$(this).attr(\"id\")}`\n      //     ).removeClass(\"active\");\n      //     $(this).addClass(\"active\");\n      //     $(\n      //       `.card-content__gen-tabs__selected-wrapper__preview-${$(this).attr(\n      //         \"id\"\n      //       )} img`\n      //     ).attr(\"src\", $(this).find(\"img\").attr(\"src\"));\n      //   }\n\n      //   if ($(this).attr(\"id\") === \"hairM\") {\n      //     $(\n      //       `.card-content__gen-tabs__wrapper-item#${$(this).attr(\"id\")}`\n      //     ).removeClass(\"active\");\n      //     $(this).addClass(\"active\");\n      //   }\n\n      //   if ($(this).attr(\"id\") === \"hairF\") {\n      //     $(\n      //       `.card-content__gen-tabs__wrapper-item#${$(this).attr(\"id\")}`\n      //     ).removeClass(\"active\");\n      //     $(this).addClass(\"active\");\n      //   }\n\n      //   if ($(this).attr(\"id\") === \"beard\") {\n      //     $(\n      //       `.card-content__gen-tabs__wrapper-item#${$(this).attr(\"id\")}`\n      //     ).removeClass(\"active\");\n      //     $(this).addClass(\"active\");\n      //   }\n\n      //   if ($(this).attr(\"id\") === \"eyebrowsM\") {\n      //     $(\n      //       `.card-content__gen-tabs__wrapper-item#${$(this).attr(\"id\")}`\n      //     ).removeClass(\"active\");\n      //     $(this).addClass(\"active\");\n      //   }\n\n      //   if ($(this).attr(\"id\") === \"eyebrowsF\") {\n      //     $(\n      //       `.card-content__gen-tabs__wrapper-item#${$(this).attr(\"id\")}`\n      //     ).removeClass(\"active\");\n      //     $(this).addClass(\"active\");\n      //   }\n\n      //   if ($(this).attr(\"id\") === \"outerwearM\") {\n      //     $(\n      //       `.card-content__gen-tabs__wrapper-item#${$(this).attr(\"id\")}`\n      //     ).removeClass(\"active\");\n      //     $(this).addClass(\"active\");\n      //   }\n\n      //   if ($(this).attr(\"id\") === \"outerwearF\") {\n      //     $(\n      //       `.card-content__gen-tabs__wrapper-item#${$(this).attr(\"id\")}`\n      //     ).removeClass(\"active\");\n      //     $(this).addClass(\"active\");\n      //   }\n\n      //   if ($(this).attr(\"id\") === \"pantsM\") {\n      //     $(\n      //       `.card-content__gen-tabs__wrapper-item#${$(this).attr(\"id\")}`\n      //     ).removeClass(\"active\");\n      //     $(this).addClass(\"active\");\n      //   }\n\n      //   if ($(this).attr(\"id\") === \"pantsF\") {\n      //     $(\n      //       `.card-content__gen-tabs__wrapper-item#${$(this).attr(\"id\")}`\n      //     ).removeClass(\"active\");\n      //     $(this).addClass(\"active\");\n      //   }\n\n      //   if ($(this).attr(\"id\") === \"shoesM\") {\n      //     $(\n      //       `.card-content__gen-tabs__wrapper-item#${$(this).attr(\"id\")}`\n      //     ).removeClass(\"active\");\n      //     $(this).addClass(\"active\");\n      //   }\n\n      //   if ($(this).attr(\"id\") === \"shoesF\") {\n      //     $(\n      //       `.card-content__gen-tabs__wrapper-item#${$(this).attr(\"id\")}`\n      //     ).removeClass(\"active\");\n      //     $(this).addClass(\"active\");\n      //   }\n      // });\n\n      // $(\".card-content__list-color__wrapper-item\").on(\"click\", function () {\n      //   $(\n      //     `.card-content__list-color__wrapper-item#${$(this).attr(\"id\")}`\n      //   ).removeClass(\"active\");\n      //   $(this).addClass(\"active\");\n      // });\n\n      // $(\".matrix-pointer\").each(function () {\n      //   $(this).draggable({\n      //     containment: $(this).parent(),\n      //     scroll: false,\n      //   });\n      // });\n\n      // const calculateAxis = (data, id, value, pointer) => {\n      //   const pointerOffset = pointer[0];\n      //   let offsetTop, offsetLeft;\n      //   switch (id) {\n      //     case 1:\n      //       offsetTop = pointerOffset.offsetTop - data.height();\n      //       offsetLeft = pointerOffset.offsetLeft - data.width() + 10;\n\n      //       inputHandler(offsetTop * -1, offsetLeft, value);\n      //       break;\n      //     case 2:\n      //       offsetTop = pointerOffset.offsetTop - data.height();\n      //       offsetLeft = pointerOffset.offsetLeft - data.width() + 10;\n\n      //       inputHandler(offsetTop * -1, offsetLeft, value);\n      //       break;\n      //     case 3:\n      //       offsetTop = pointerOffset.offsetTop - data.height();\n      //       offsetLeft = pointerOffset.offsetLeft - data.width() + 10;\n\n      //       inputHandler(offsetTop * -1, offsetLeft, value);\n      //       break;\n      //     case 4:\n      //       offsetTop = pointerOffset.offsetTop - data.height();\n      //       offsetLeft = pointerOffset.offsetLeft - data.width() + 10;\n\n      //       inputHandler(offsetTop * -1, offsetLeft, value);\n      //       break;\n      //   }\n      // };\n\n      // const inputHandler = (y, x, type) => {\n      //   let inputAxisY, inputAxisX;\n      //   switch (type) {\n      //     case \"nose\": // Нос\n      //       inputAxisY = (y / 100) * 1;\n      //       inputAxisX = (x / 100) * 1;\n\n      //       self.$callClient(\n      //         \"editorList\",\n      //         \"noseHeight\",\n      //         Number(inputAxisY.toFixed(1))\n      //       );\n      //       self.$callClient(\n      //         \"editorList\",\n      //         \"noseWidth\",\n      //         Number(inputAxisX.toFixed(1))\n      //       );\n      //       break;\n\n      //     case \"cheekbone\": // Скулы\n      //       inputAxisY = (y / 100) * 1;\n      //       inputAxisX = (x / 100) * 1;\n\n      //       self.$callClient(\n      //         \"editorList\",\n      //         \"cheekboneHeight\",\n      //         Number(inputAxisY.toFixed(1))\n      //       );\n      //       self.$callClient(\n      //         \"editorList\",\n      //         \"cheekboneWidth\",\n      //         Number(inputAxisX.toFixed(1))\n      //       );\n      //       break;\n\n      //     case \"chin\": // Подбородок\n      //       inputAxisY = (y / 100) * 1;\n      //       inputAxisX = (x / 100) * 1;\n\n      //       self.$callClient(\n      //         \"editorList\",\n      //         \"chinHeight\",\n      //         Number(inputAxisY.toFixed(1))\n      //       );\n      //       self.$callClient(\n      //         \"editorList\",\n      //         \"chinWidth\",\n      //         Number(inputAxisX.toFixed(1))\n      //       );\n      //       break;\n      //   }\n      // };\n\n      // const matrixSector = $(\".matrix-sector\");\n      // $(\".matrix-pointer\").on(\"mousemove\", function (e) {\n      //   const matrixPointer = $(this);\n      //   if ($(\".matrix-pointer\").hasClass(\"ui-draggable-dragging\") === false) {\n      //     return console.log(\"u don`t dragging\");\n      //   }\n\n      //   matrixSector.each(function () {\n      //     if (\n      //       e.pageY < $(this).offset().top ||\n      //       e.pageY > $(this).offset().top + $(this).height() ||\n      //       e.pageX < $(this).offset().left ||\n      //       e.pageX > $(this).offset().left + $(this).width()\n      //     ) {\n      //       // Debug\n      //       // $(this).css({'background-color': 'blue', 'opacity': '1'});\n      //     } else {\n      //       // Debug\n      //       // $(this).css({'background-color': 'red', 'opacity': '.5'});\n      //       if ($(this).data(\"id\") === 1) {\n      //         calculateAxis(\n      //           $(this),\n      //           1,\n      //           $(this).parent().data(\"value\"),\n      //           matrixPointer\n      //         );\n      //       }\n\n      //       if ($(this).data(\"id\") === 2) {\n      //         calculateAxis(\n      //           $(this),\n      //           2,\n      //           $(this).parent().data(\"value\"),\n      //           matrixPointer\n      //         );\n      //       }\n\n      //       if ($(this).data(\"id\") === 3) {\n      //         calculateAxis(\n      //           $(this),\n      //           3,\n      //           $(this).parent().data(\"value\"),\n      //           matrixPointer\n      //         );\n      //       }\n\n      //       if ($(this).data(\"id\") === 4) {\n      //         calculateAxis(\n      //           $(this),\n      //           4,\n      //           $(this).parent().data(\"value\"),\n      //           matrixPointer\n      //         );\n      //       }\n      //     }\n      //   });\n      // });\n    });\n  },\n  beforeUnmount() {\n    this.$offClient(\"Character:SetData\", this.setData);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}