{"ast":null,"code":"export default {\n  data() {\n    return {\n      canvas: null,\n      ctx: null,\n      centerX: 0,\n      centerY: 0,\n      height: 28.8,\n      width: 25.6\n    };\n  },\n  props: {\n    procent: Number\n  },\n  watch: {\n    procent() {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.drawHexogone();\n    }\n  },\n  methods: {\n    setCanvas() {\n      if (!this.canvas) {\n        this.canvas = this.$refs.prgressCanvas;\n        this.ctx = this.canvas.getContext(\"2d\");\n      }\n      this.canvas.width = this.remToPx(this.width);\n      this.canvas.height = this.remToPx(this.height);\n      this.centerX = this.canvas.width / 2;\n      this.centerY = this.canvas.height / 2;\n    },\n    onResize() {\n      this.setCanvas();\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.drawHexogone();\n    },\n    remToPx(rem) {\n      var rootFontSize = parseFloat(window.getComputedStyle(document.documentElement).fontSize);\n      console.log(rootFontSize * rem);\n      return rootFontSize * rem;\n    },\n    drawHexogone() {\n      const ctx = this.ctx;\n      var radius = this.canvas.height / 2;\n      const startAngle = -Math.PI * 0.499;\n      const endAngle = 2 * Math.PI * this.procent - Math.PI * 0.5;\n      ctx.beginPath();\n      ctx.moveTo(this.centerX, this.centerY); // начинаем с центра\n      ctx.arc(this.centerX, this.centerY, radius, startAngle, endAngle);\n      ctx.lineTo(this.centerX, this.centerY); // соединяем с центром, чтобы создать замкнутую область\n\n      ctx.fillStyle = \"#40BF6A\";\n      ctx.fill();\n    }\n  },\n  mounted() {\n    this.setCanvas();\n    this.drawHexogone();\n    window.addEventListener(\"resize\", this.onResize);\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}