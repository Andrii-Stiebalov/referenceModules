{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"PropertyExchange__block-info-car\"\n};\nconst _hoisted_2 = {\n  class: \"PropertyExchange__block-info-car-characteristics\"\n};\nconst _hoisted_3 = {\n  class: \"PropertyExchange__block-info-car-characteristic-title-section\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  class: \"PropertyExchange__block-info-car-characteristic-range\"\n};\nconst _hoisted_6 = {\n  class: \"PropertyExchange__block-info-car-items\"\n};\nconst _hoisted_7 = {\n  class: \"PropertyExchange__block-info-car-item-icon\"\n};\nconst _hoisted_8 = {\n  class: \"PropertyExchange__block-info-car-item-border\"\n};\nconst _hoisted_9 = {\n  width: \"5rem\",\n  height: \"5rem\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"rect\", {\n  x: \"1\",\n  y: \"1\",\n  width: \"4.6rem\",\n  height: \"4.6rem\",\n  rx: \"5\",\n  stroke: \"#2C3A3A\",\n  \"stroke-width\": \"0.2rem\",\n  pathLength: \"100\",\n  class: \"PropertyExchange__block-info-car-item-border--empty\"\n}, null, -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GetSVGIcons = _resolveComponent(\"GetSVGIcons\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.carInfo, (key, value) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"PropertyExchange__block-info-car-characteristic\",\n      key: value\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(key)), 1), !$data.characteristicWithoutData.includes(value) ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString($props.onHoverProperty[value]), 1)) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", {\n      style: _normalizeStyle({\n        width: $options.calculatingRangeInnerWidth($props.onHoverProperty[value], $data.maxValues[value])\n      }),\n      class: \"PropertyExchange__block-info-car-characteristic-range-inner\"\n    }, null, 4)])]);\n  }), 128))]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.carItems, carItem => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: carItem.Name,\n      class: _normalizeClass([\"PropertyExchange__block-info-car-item\", {\n        'PropertyExchange__block-info-car-item--disactive': !+$props.onHoverProperty[carItem.IconName]\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_GetSVGIcons, {\n      iconName: carItem.IconName\n    }, null, 8, [\"iconName\"]), _createElementVNode(\"div\", _hoisted_8, [(_openBlock(), _createElementBlock(\"svg\", _hoisted_9, [_hoisted_10, _createElementVNode(\"path\", {\n      d: \"M25 1H37C41.714 1 44.0711 1 45.5355 2.46447C47 3.92893 47\\r\\n              6.28595 47 11V24V37C47 41.714 47 44.0711 45.5355 45.5355C44.0711\\r\\n              47 41.714 47 37 47H24H11C6.28595 47 3.92893 47 2.46447 45.5355C1\\r\\n              44.0711 1 41.714 1 37V5.5C1.16667 4 2.4 1 6 1C9.6 1 19.4572 1\\r\\n              23.9358 1\",\n      stroke: \"#2BD9D9\",\n      \"stroke-width\": \"0.2rem\",\n      pathLength: \"100\",\n      style: _normalizeStyle({\n        transform: `scale(${$data.scaleIconProcent})`,\n        strokeDashoffset: $options.getStrokeDashoffset($props.onHoverProperty[carItem.IconName], carItem.Max)\n      }),\n      class: \"PropertyExchange__block-info-car-item-border--inner\"\n    }, null, 4)]))])]), _createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(carItem.Name)), 1), _createElementVNode(\"p\", null, _toDisplayString(`(${$options.getCountOf($props.onHoverProperty[carItem.IconName], carItem.Max)})`), 1)], 2);\n  }), 128))])]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}