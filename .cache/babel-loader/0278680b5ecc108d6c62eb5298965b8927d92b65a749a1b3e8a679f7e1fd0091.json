{"ast":null,"code":"export default {\n  namespaced: true,\n  state: {\n    timeNow: new Date(),\n    hud: {\n      show: false,\n      animation: {\n        name: \"hud-fade-animation\",\n        mode: \"\"\n      }\n    },\n    cdnResolver: {\n      cdnLink: \"https://cdn.nexus-rp.net\",\n      serverLink: \"https://s1.nexus-rp.net\",\n      // serverLink: 'http://51.83.237.98:3001',\n      cdnKey: null,\n      images: new Map()\n    },\n    payment: {\n      iframeActive: false,\n      selectedPayWay: {},\n      src: null,\n      amount: null\n    },\n    modals: {\n      topUpBalance: false,\n      payWay: false\n    },\n    moduleWrapper: {\n      decisionNotification: {\n        status: false,\n        animation: {\n          name: \"decision-notification-fade-animation\"\n        },\n        data: null\n      }\n    }\n  },\n  getters: {\n    getHud: state => {\n      return state.hud;\n    },\n    getCdnResolver: state => {\n      return state.cdnResolver;\n    },\n    getPayment: state => {\n      return state.payment;\n    },\n    getModals: state => {\n      return state.modals;\n    },\n    getTime: state => state.timeNow.toLocaleString(\"uk-UA\", {\n      hour: \"numeric\",\n      minute: \"numeric\"\n    }),\n    getDate: state => state.timeNow,\n    getModuleWrapper: state => state.moduleWrapper\n  },\n  mutations: {\n    updateTime(state, time) {\n      if (time) {\n        //toLocaleTimeString('uk-UA', {timeZone: 'Europe/Berlin', hour: '2-digit', minute:'2-digit'})\n        let date = new Date(1000 * time).toLocaleString(\"uk-UA\", {\n          timeZone: \"Europe/Kiev\"\n        }).replaceAll(\",\", \"\").split(\" \").map((x, i) => i === 0 ? x.split(\".\").reverse().join(\".\") : x).join(\" \");\n        state.timeNow = new Date(Date.parse(date));\n        return;\n      }\n      state.timeNow = new Date(Date.parse(state.timeNow) + 1000);\n    },\n    updateModuleWrapper(state, payload) {\n      payload.forEach(module => {\n        let moduleName = Object.keys(module)[0];\n        state.moduleWrapper[moduleName] = module[moduleName];\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}