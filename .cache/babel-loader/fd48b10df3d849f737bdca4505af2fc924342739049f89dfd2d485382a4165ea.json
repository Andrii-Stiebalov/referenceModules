{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data: function () {\n    return {\n      show: false,\n      locale: \"ua\",\n      betList: [10, 50, 100, 500, 1000, 5000, 10000],\n      minbet: 10,\n      maxbet: 1000,\n      bet: 10000,\n      balance: 10000,\n      timer: -1,\n      notifyList: [],\n      parallax3d: null\n    };\n  },\n  methods: {\n    outString(e) {\n      return e !== undefined ? `${e.toLocaleString(\"uk-UA\")}` : ``;\n    },\n    getChip(e) {\n      return e !== undefined ? `background-image:url(${require(`./img/icon_chip${e}.svg`)})` : ``;\n    },\n    addNotify(notifyObject) {\n      let type = notifyObject.type;\n      let time = notifyObject.time;\n      let chip = notifyObject.flag;\n      let value = notifyObject.msg;\n      let id = 0;\n      while (this.notifyList.some(x => x.id === id)) {\n        id++;\n      }\n      let notify = value !== undefined ? {\n        id,\n        type,\n        value,\n        chip\n      } : {\n        id,\n        type,\n        chip\n      };\n      this.notifyList.push(notify);\n      setTimeout(() => {\n        this.notifyList.splice(this.notifyList.indexOf(notify), 1);\n      }, time === undefined ? 500 : time);\n    },\n    getMessage(notify) {\n      let notifyText = notify.value;\n      if (notify.chip) notifyText = notifyText + \"<div></div>\";\n      return notifyText;\n    },\n    modal() {\n      const UniversalModalData = {\n        title: this.$t(\"Вы уверены что хотите покинуть стол?\"),\n        isSetToStore: true,\n        content: [{\n          type: \"description\",\n          value: this.$t(`Если вы выйдете сейчас, вы потеряете вашу ставку.`)\n        }],\n        buttons: {\n          submit: {\n            name: this.$t(\"Да\"),\n            handler: () => {\n              try {\n                this.$callClient(\"Casino.Roulette.ConfirmExit\");\n              } catch {\n                console.error(\"Error\");\n              }\n            }\n          },\n          cansel: {}\n        }\n      };\n      this.$UniversalModal.create(UniversalModalData);\n    },\n    setData(data) {\n      this.$recursiveAssign(data, this.$data);\n    }\n  },\n  mounted() {\n    this.$onClient(\"C:CasinoRoulette:SetData\", this.setData);\n    this.$onClient(\"C:CasinoRoulette:addNotify\", this.addNotify);\n    this.$onClient(\"C:CasinoRoulette:modal\", this.modal);\n    this.$callClient(\"W:CasinoRoulette:Ready\");\n  },\n  beforeUnmount() {\n    this.$offClient(\"C:CasinoRoulette:SetData\", this.setData);\n    this.$offClient(\"C:CasinoRoulette:addNotify\", this.addNotify);\n    this.$offClient(\"C:CasinoRoulette:modal\", this.modal);\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}