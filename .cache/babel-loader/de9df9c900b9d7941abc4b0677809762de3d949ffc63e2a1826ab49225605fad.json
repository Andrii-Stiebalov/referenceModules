{"ast":null,"code":"import PhoneMixin from \"../../../../../Mixins/PhoneMixin\";\nexport default {\n  name: \"Pay\",\n  data() {\n    return {\n      inputVal: \"\",\n      numberVal: \"\"\n    };\n  },\n  mixins: [PhoneMixin],\n  computed: {\n    billNumber() {\n      return this.$route.params.number;\n    },\n    isSim() {\n      return this.$route.params.isSim !== \"false\";\n    }\n  },\n  methods: {\n    onInput(e) {\n      const value = e.target.value;\n      const onlyNumber = value.replace(/\\D/g, \"\");\n      const formatedNumber = onlyNumber > 6 ? onlyNumber.slice(0, 6) : onlyNumber;\n      this.inputVal = formatedNumber.replace(/(\\d{3})(\\d{3})/, \"$1-$2\");\n    },\n    onInputNumber(e) {\n      const value = e.target.value;\n      const onlyNumber = value.replace(/\\D/g, \"\");\n      if (!onlyNumber) {\n        this.numberVal = onlyNumber;\n        return;\n      }\n      this.numberVal = this.formatMoney(onlyNumber) + \"$\";\n    },\n    onInputPhone(e) {\n      const value = e.target.value;\n      const onlyNumber = value.replace(/\\D/g, \"\");\n      const formatedNumber = onlyNumber > 7 ? onlyNumber.slice(0, 7) : onlyNumber;\n      this.inputVal = this.formatNumber(formatedNumber);\n      console.log(this.inputVal);\n    },\n    onlyNumber(str) {\n      return str.replace(/\\D/g, \"\");\n    },\n    onPay() {\n      if (this.inputVal.length >= 4 && this.numberVal.length > 1) {\n        if (this.isSim) {\n          this.$callClient(\"W:Phone:BankApp:PaySim\", this.inputVal.replace(/\\D/g, \"\"), this.numberVal.replace(/\\D/g, \"\"));\n        } else {\n          this.$callClient(\"W:Phone:BankApp:Pay\", this.inputVal.replace(/\\D/g, \"\"), this.numberVal.replace(/\\D/g, \"\"));\n        }\n        this.$router.go(-1);\n      }\n    },\n    onKeyDown(e) {\n      if (e.keyCode === 8) {\n        const onlyNumber = this.onlyNumber(this.numberVal);\n        // this.numberVal = onlyNumber.slice(0, -1);\n      }\n    }\n  },\n  mounted() {\n    if (this.billNumber) {\n      if (this.isSim) {\n        this.inputVal = this.formatNumber(this.billNumber);\n        return;\n      }\n      this.inputVal = this.billNumber.replace(/(\\d{3})(\\d{3})/, \"$1-$2\");\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}