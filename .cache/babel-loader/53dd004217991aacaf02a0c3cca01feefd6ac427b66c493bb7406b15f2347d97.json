{"ast":null,"code":"//payload state\nexport default function recursiveAssing(source, target, canCreate = false) {\n  for (let property in source) {\n    if (target[property] !== undefined && target[property] !== null) {\n      if (typeof source[property] === \"object\" && !Array.isArray(source[property])) {\n        if (source[property] !== null) {\n          if (Object.keys(source[property]).length) {\n            recursiveAssing(source[property], target[property], canCreate);\n          } else {\n            target[property] = {};\n          }\n        } else {\n          target[property] = null;\n        }\n      } else if (Array.isArray(source[property]) && Array.isArray(target[property])) {\n        target[property].splice(0, target[property].length, ...source[property]);\n      } else {\n        target[property] = source[property];\n      }\n    } else if (canCreate) {\n      target[property] = source[property];\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}