{"ast":null,"code":"import Ranks from \"../../../components/controls/organization/ranks/Ranks.js\";\nexport default {\n  components: {\n    Ranks\n  },\n  data: {\n    ranks: [],\n    maxRanks: 0,\n    editableRank: {}\n  },\n  methods: {\n    openRanks(ranks, maxRanks) {\n      this.ranks = ranks;\n      this.maxRanks = maxRanks;\n      this.setRoute(\"ranks\");\n    },\n    deleteRank(rankID) {\n      let index = rankID !== undefined && this.ranks && this.ranks.find(x => x.id === rankID) && this.ranks.indexOf(this.ranks.find(x => x.id === rankID));\n      if (index !== undefined) this.ranks.splice(index, 1);\n    },\n    addRank(rank) {\n      this.ranks.push(rank);\n    },\n    openRankNameEditor(rankID) {\n      this.$EBus.$emit(\"src/mixins/controls/organization/Ranks->src/components/controls/organization/ranks/default/RanksItem:RanksOpenEditor\", rankID);\n    },\n    updateRankName(rankID, rankName, rankDate, rankTime) {\n      let rank = rankID !== undefined && this.ranks && this.ranks.find(x => x.id === rankID);\n      if (rank !== undefined && rank.name !== undefined) {\n        rank.name = rankName;\n        rank.date = rankDate;\n        rank.time = rankTime;\n      }\n    },\n    openRanksEdit(editableRank) {\n      this.editableRank = editableRank;\n      this.setRoute(\"ranks/edit\");\n    },\n    ranksSetDefault() {\n      this.$EBus.$emit(\"src/mixins/controls/organization/Ranks->src/components/controls/organization/ranks/edit/RanksEdit:RanksSetDefault\");\n    },\n    removeRank(rankID) {\n      mp.trigger(\"Controls:DeleteRank\", rankID);\n    }\n  },\n  mounted() {\n    this.$EBus.$on(\"src/components/controls/organization/ranks/default/RanksItem->src/mixins/controls/organization/Ranks:RanksRemoveRank\", rankID => {\n      let rankName = this.ranks.find(x => x.id === rankID) !== undefined ? this.ranks.find(x => x.id === rankID).name : ``;\n      let modalOptions = {\n        title: `Удаление ранга`,\n        subtitle2: this.$GetText(`Вы уверены, что хотите удалить <br> ранг <b>`) + `${rankName}</b> ?`,\n        buttons: [{\n          content: \"Подтвердить\",\n          emit: \"src/components/global/UniversalModal:ModalOpen->src/mixins/controls/organization/Ranks:Confirmation\"\n        }],\n        props: [rankID]\n      };\n      this.$EBus.$emit(\"...->src/components/controls/organization/Modal:ModalOpen\", \"confirmation\", modalOptions);\n    });\n    this.$EBus.$on(\"src/components/controls/organization/ranks/default/RanksItemFree->src/mixins/controls/organization/Ranks:RanksAddRank\", rankID => {\n      mp.trigger(\"Controls:AddRank\", rankID);\n    });\n    this.$EBus.$on(\"src/components/controls/organization/ranks/default/RanksItem->src/mixins/controls/organization/Ranks:RanksOpenNameEditor\", rankID => {\n      mp.trigger(\"Controls:EditRankName\", rankID);\n    });\n    this.$EBus.$on(\"src/components/controls/organization/ranks/default/RanksItem->src/mixins/controls/organization/Ranks:RanksSetRankName\", (rankID, rankName) => {\n      mp.trigger(\"Controls:setRankName\", rankID, rankName);\n    });\n    this.$EBus.$on(\"src/components/controls/organization/ranks/default/RanksItem->src/mixins/controls/organization/Ranks:RanksEditRankPermissions\", rankID => {\n      mp.trigger(\"Controls:rankChangePermissions\", rankID);\n    });\n    this.$EBus.$on(\"src/components/controls/organization/ranks/edit/RanksEdit->src/mixins/controls/organization/Ranks:RanksEditPermissions\", (rankID, newPermissions) => {\n      mp.trigger(\"Controls:rankSetPermissions\", rankID, JSON.stringify(newPermissions));\n    });\n    this.$EBus.$on(`src/components/controls/organization/ranks/edit/RanksEdit->src/mixins/controls/organization/Ranks:RanksGetBack`, () => {\n      this.setRoute(\"ranks\");\n    });\n    this.$EBus.$on(`src/components/global/UniversalModal:ModalOpen->src/mixins/controls/organization/Ranks:Confirmation`, props => {\n      this.removeRank(...props);\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"module"}