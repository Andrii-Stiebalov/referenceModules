{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Router from \"@/Router/Router\";\nimport recursiveAssing from \"@/Functions/RecursiveAssign\";\nexport default {\n  namespaced: true,\n  state: {\n    showedContactInfoItem: null,\n    helpersPageViewItem: null,\n    callingData: {\n      number: \"\",\n      isIncoming: false,\n      isAccepted: false,\n      isCalling: false,\n      date: \"2024-02-19T13:45:00\"\n    },\n    contacts: [],\n    recentlyCalls: [],\n    favorites: [],\n    notifyList: [],\n    currentNotifyId: 0,\n    phoneTimer: 0,\n    interval: null,\n    bankData: {\n      bankHistory: [],\n      houseData: [],\n      businessData: []\n    },\n    settingsData: {\n      flightMode: false,\n      phoneSize: 1,\n      background: \"default\",\n      ringtone: \"default\",\n      wallpaper: \"default\"\n    },\n    msgList: [{\n      number: \"111111\",\n      isNoReading: true,\n      messages: [{\n        text: \"Hi\",\n        date: \"2024-02-25T14:45:00\",\n        isIncoming: true\n      }, {\n        text: \"Hi\",\n        date: \"2024-02-24T14:45:00\",\n        isIncoming: true\n      }, {\n        text: \"Hi\",\n        date: \"2024-02-21T13:45:00\",\n        isIncoming: true\n      }, {\n        text: \"Hi\",\n        date: \"2024-02-20T14:45:00\",\n        isIncoming: true\n      }, {\n        text: \"Hi\",\n        date: \"2024-02-20T14:45:00\"\n      }, {\n        text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla nec purus feugiat, vestibulum mi nec, ultricies metus. Sed auctor, eros auctor\",\n        date: \"2024-02-20T14:45:00\",\n        isIncoming: true\n      }, {\n        text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla nec purus feugiat, vestibulum mi nec, ultricies metus. Sed auctor, eros auctor\",\n        date: \"2024-02-20T14:45:00\"\n      }, {\n        text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla nec purus feugiat, vestibulum mi nec, ultricies metus. Sed auctor, eros auctor\",\n        date: \"2024-02-20T14:45:00\"\n      }, {\n        text: \"Hi\",\n        date: \"2024-02-19T13:45:00\",\n        isIncoming: true\n      }, {\n        text: \"Hi\",\n        date: \"2024-02-10T13:45:00\",\n        isIncoming: true\n      }]\n    }, {\n      number: \"860004\",\n      messages: [{\n        text: \"Hello\",\n        date: \"2024-02-19T13:45:00\",\n        isIncoming: false\n      }, {\n        text: \"bad connection\",\n        date: \"2024-02-19T13:45:00\",\n        isIncoming: true\n      }]\n    }],\n    galleryList: [{\n      localUrl: \"http://screenshots/1710341734092.png\",\n      url: null\n    }, {\n      localUrl: \"http://screenshots/1710343109233.png\",\n      url: null\n    }, {\n      localUrl: \"http://screenshots/1710343988699.png\",\n      url: null\n    }, {\n      localUrl: \"http://screenshots/1710344576141.png\",\n      url: \"https://i.imgur.com/tWEbf8Q.jpeg\"\n    }, {\n      localUrl: \"http://screenshots/1710345089855.png\",\n      url: \"https://i.imgur.com/oIoBv9n.jpeg\"\n    }, {\n      localUrl: \"http://screenshots/1710345162362.png\",\n      url: \"https://i.imgur.com/zjP0OiZ.jpeg\"\n    }, {\n      localUrl: \"http://screenshots/1710347368441.png\",\n      url: \"https://i.imgur.com/Iz20UIi.jpeg\"\n    }, {\n      localUrl: \"http://screenshots/1710348735611.png\",\n      url: \"https://i.imgur.com/AFhMc7J.jpeg\"\n    }, {\n      localUrl: \"http://screenshots/1710349224270.png\",\n      url: null\n    }, {\n      localUrl: \"http://screenshots/1710349869505.png\",\n      url: \"https://i.imgur.com/F9RLhFY.jpeg\"\n    }, {\n      localUrl: \"http://screenshots/1710362577957.png\",\n      url: \"https://i.imgur.com/QTgORtn.jpeg\"\n    }, {\n      localUrl: \"http://screenshots/1710363386573.png\",\n      url: \"https://i.imgur.com/77vrdm3.jpeg\"\n    }, {\n      localUrl: \"http://screenshots/1710363989573.png\",\n      url: \"https://i.imgur.com/0xdQvb5.jpeg\"\n    }, {\n      localUrl: \"http://screenshots/1710364021270.png\",\n      url: \"https://i.imgur.com/y8bz8RN.jpeg\"\n    }, {\n      localUrl: \"http://screenshots/1710364373023.png\",\n      url: \"https://i.imgur.com/urtNNN3.jpeg\"\n    }],\n    isShowPhoto: null,\n    weazelList: [],\n    weazelIsActive: false,\n    myInfo: {},\n    modalList: [],\n    taxiData: {\n      Customer: {\n        step: \"main\",\n        // main, wait, ready\n        carsNearby: 0,\n        executorNumber: \"\"\n      },\n      Executor: {\n        activeOrder: null,\n        isWorking: false,\n        // true , false если false, открываем станицу с информацией как устроиться\n        orderList: [{\n          orderName: \"Заказ 1\",\n          distance: 5\n        }]\n      }\n    },\n    companyData: null,\n    blockedNumbers: [],\n    serviceReasonList: [],\n    navigationList: [],\n    blockedList: []\n  },\n  getters: {\n    getHelpersPageViewItem(state) {\n      return state.helpersPageViewItem;\n    },\n    getCallingData(state) {\n      return state.callingData;\n    },\n    getBlockedList(state) {\n      return state.blockedList;\n    },\n    getContacts(state) {\n      return state.contacts;\n    },\n    getFavorites(state) {\n      return state.favorites;\n    },\n    getRecentlyCalls(state) {\n      return state.recentlyCalls;\n    },\n    getMsgList(state) {\n      return state.msgList;\n    },\n    getServiceReasonList(state) {\n      return state.serviceReasonList;\n    },\n    getNumbers(state) {\n      return state.contacts.reduce((acc, item) => {\n        acc[item.number] = item;\n        return acc;\n      }, {});\n    },\n    getNavigationList(state) {\n      return state.navigationList;\n    },\n    getMsgListByNumber: state => number => {\n      return state.msgList.find(item => item.number === number);\n    },\n    getMyInfo(state) {\n      return state.myInfo;\n    },\n    getEmojiPicker(state) {\n      return state.emojiPicker;\n    },\n    getCountIsNoReading: state => {\n      return state.msgList.filter(item => item.isNoReading).length;\n    },\n    getWeazelList(state) {\n      return state.weazelList;\n    },\n    getModalList(state) {\n      return state.modalList;\n    },\n    getTaxiData(state) {\n      return state.taxiData;\n    },\n    getMyHouse(state) {\n      return state.myHouse;\n    },\n    getNotifyList(state) {\n      return state.notifyList;\n    },\n    getGalleryList(state) {\n      return state.galleryList;\n    },\n    getIsShowPhoto(state) {\n      return state.isShowPhoto;\n    },\n    getBankData(state) {\n      return state.bankData;\n    },\n    getTimer(state) {\n      return state.phoneTimer;\n    },\n    getSettingsData(state) {\n      return state.settingsData;\n    },\n    getWeazelIsActive(state) {\n      return state.weazelIsActive;\n    },\n    getWallpaper(state) {\n      return state.settingsData.wallpaper;\n    },\n    getCompanyData(state) {\n      return state.companyData;\n    }\n  },\n  mutations: {\n    setHelpersPageViewItem(state, payload) {\n      state.helpersPageViewItem = payload;\n    },\n    setData(state, payload) {\n      recursiveAssing(payload, state, true);\n      console.log(\"%c ------state------\", \"color: #bada55; font-size: 20px\");\n    },\n    addMsgByNumber(state, payload) {\n      const {\n        number,\n        message\n      } = payload;\n      const msgList = state.msgList.find(item => item.number === number);\n      msgList.isNoReading = true;\n      msgList.messages.unshift({\n        ...message\n      });\n      const router = Router.currentRoute._value.path;\n      const numberOnRouter = router.split(\"/\")[2];\n      if (numberOnRouter !== number && message.isIncoming) {\n        const id = state.currentNotifyId++;\n        state.notifyList.push({\n          id: id,\n          title: \"New message\",\n          text: message.text,\n          type: \"message\",\n          msgType: message.isGeo ? \"geo\" : message.isImg ? \"img\" : \"\",\n          number\n        });\n        setTimeout(() => {\n          state.notifyList = state.notifyList.filter(item => item.id !== id);\n        }, payload.time || 3000);\n      }\n      console.log(number, \"router\");\n    },\n    setMsgRead(state, payload) {\n      const msgList = state.msgList.find(item => item.number === payload);\n      if (!msgList) return;\n      msgList.isNoReading = false;\n    },\n    setEmojis(state, payload) {\n      state.emojiPicker = payload;\n    },\n    addNotify(state, payload) {\n      const id = state.currentNotifyId++;\n      state.notifyList.push({\n        ...payload,\n        id\n      });\n      setTimeout(() => {\n        state.notifyList = state.notifyList.filter(item => item.id !== id);\n      }, payload.time || 3000);\n    },\n    updateContact(state, payload) {\n      const {\n        number\n      } = payload;\n      let contactIndex = state.contacts.findIndex(item => item.number === number);\n      if (contactIndex === -1) {\n        state.contacts.push(payload);\n      } else {\n        state.contacts[contactIndex] = payload;\n      }\n    },\n    setSoundSettings(state, payload) {\n      state.soundSettings = payload;\n    },\n    arrayModify(state, payload) {\n      const {\n        type,\n        data,\n        index,\n        valueName,\n        valueNameForRemove,\n        removingValue,\n        isReverse\n      } = payload;\n      const bindAction = {\n        add() {\n          if (isReverse) {\n            state[valueName].unshift(data);\n          } else {\n            state[valueName].push(data);\n          }\n        },\n        remove() {\n          if (valueNameForRemove) {\n            state[valueName] = state[valueName].filter(item => item[valueNameForRemove] !== removingValue);\n          } else {\n            state[valueName] = state[valueName].filter(item => item !== data);\n          }\n        },\n        update() {\n          state[valueName] = index;\n        }\n      };\n      bindAction[type]();\n    },\n    addModal(state, payload) {\n      state.modalList.push(payload);\n    },\n    removeModal(state, payload) {\n      state.modalList = state.modalList.filter(item => item.id !== payload);\n    },\n    setShownPhoto(state, payload) {\n      state.isShowPhoto = payload;\n    },\n    acceptCall(state) {\n      state.callingData.isAccepted = true;\n      state.interval = setInterval(() => {\n        state.phoneTimer++;\n      }, 1000);\n    },\n    cancelCall(state) {\n      clearInterval(state.interval);\n      state.callingData.isAccepted = false;\n      state.phoneTimer = 0;\n    },\n    setPhoneSetting(state, payload) {\n      Object.assign(state.settingsData, payload);\n    }\n  },\n  actions: {\n    setHelpersPageViewItem({\n      commit\n    }, payload) {\n      commit(\"setHelpersPageViewItem\", payload);\n    },\n    setData({\n      commit\n    }, payload) {\n      commit(\"setData\", payload);\n    },\n    arrayModify({\n      commit\n    }, payload) {\n      commit(\"arrayModify\", payload);\n    },\n    addMsgByNumber({\n      commit\n    }, payload) {\n      commit(\"addMsgByNumber\", payload);\n    },\n    setEmojis({\n      commit\n    }, payload) {\n      commit(\"setEmojis\", payload);\n    },\n    addModal({\n      commit\n    }, payload) {\n      commit(\"addModal\", payload);\n    },\n    removeModal({\n      commit\n    }, payload) {\n      commit(\"removeModal\", payload);\n    },\n    addNotify({\n      commit\n    }, payload) {\n      commit(\"addNotify\", payload);\n    },\n    updateContact({\n      commit\n    }, payload) {\n      commit(\"updateContact\", payload);\n    },\n    setShownPhoto({\n      commit\n    }, payload) {\n      commit(\"setShownPhoto\", payload);\n    },\n    acceptCall({\n      commit\n    }, payload) {\n      commit(\"acceptCall\", payload);\n    },\n    cancelCall({\n      commit\n    }, payload) {\n      commit(\"cancelCall\", payload);\n    },\n    setPhoneSetting({\n      commit\n    }, payload) {\n      commit(\"setPhoneSetting\", payload);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}