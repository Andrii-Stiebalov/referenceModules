{"ast":null,"code":"import ContactList from \"./ContactList.vue\";\nimport SystemAppHeader from \"../../../../Components/SystemAppHeader.vue\";\nimport { setContactInfoItem, setNewContact } from \"../../../../Lib/additionalUiFunctions\";\nexport default {\n  data() {\n    return {\n      emojiList: [],\n      search: \"\",\n      isFixed: false,\n      isRedacted: false,\n      redactList: []\n    };\n  },\n  props: {\n    isPrevent: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    contactList() {\n      return this.$store.getters[\"phone/getContacts\"];\n    },\n    filteredList() {\n      return this.contactList.filter(contact => {\n        return contact.name.toLowerCase().includes(this.search.toLowerCase());\n      });\n    },\n    sortByName() {\n      return [...this.filteredList].sort((a, b) => {\n        return a.name.localeCompare(b.name);\n      });\n    },\n    bindByLetterObj() {\n      return this.sortByName.reduce((acc, contact) => {\n        if (contact.name === \"\") return acc;\n        const firstLetter = contact.name[0].toUpperCase();\n        if (!acc[firstLetter]) {\n          acc[firstLetter] = [];\n        }\n        acc[firstLetter].push(contact);\n        return acc;\n      }, {});\n    }\n  },\n  components: {\n    SystemAppHeader,\n    ContactList\n  },\n  methods: {\n    onWheel(e) {\n      e.preventDefault();\n      console.log(e);\n      if (e.deltaY > 0) {\n        e.currentTarget.scrollTop += 50;\n      } else {\n        e.currentTarget.scrollTop -= 50;\n      }\n      if (e.currentTarget.scrollTop > 50) {\n        this.isFixed = true;\n      } else {\n        this.isFixed = false;\n      }\n    },\n    deleteRedact() {\n      this.$callClient(\"W:Phone:DeleteContacts\", this.redactList);\n      this.redactList = [];\n      this.isRedacted = false;\n    },\n    closeRedact() {\n      this.redactList = [];\n      this.isRedacted = false;\n    },\n    addContact() {\n      setNewContact();\n    },\n    addToRedact(contact) {\n      if (this.redactList.includes(contact)) {\n        this.redactList = this.redactList.filter(item => item !== contact);\n      } else {\n        this.redactList.push(contact);\n      }\n    },\n    onContactClick(callItem) {\n      if (this.isPrevent) {\n        this.$emit(\"onContactClick\", callItem);\n        return;\n      }\n      setContactInfoItem(callItem);\n    },\n    onCkickLetter(letter) {\n      const elem = document.getElementById(letter);\n      elem.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  },\n  mounted() {\n    console.log(this.bindByLetterObj);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}