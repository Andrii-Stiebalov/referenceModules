{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data: function () {\n    return {\n      active: true,\n      locale: \"ua\",\n      message: \"\",\n      messageMaxLength: 250,\n      autoScrollMinHeight: 50,\n      // In px\n      group: \"admin\",\n      reportList: [],\n      hotKeyList: [\"/tp\", \"/sp\", \"/gm\"],\n      chat: {},\n      quickAnswers: [{\n        id: 1,\n        text: \"Вам ще потрібна якась допомога?\"\n      }, {\n        id: 2,\n        text: \"Вітаю! Уточніть Ваше запитання, будь-ласка.\"\n      }, {\n        id: 3,\n        text: \"Шановний гравець! Адміністрація не телепортує гравців.\"\n      }, {\n        id: 4,\n        text: \"Вітаю, вже лечу на допомогу!\"\n      }, {\n        id: 5,\n        text: \"Вітаю! Адмімістрація не видає матеріальних благ.\"\n      }, {\n        id: 6,\n        text: \"Вітаю, F10 -> магазин -> Донат кейси -> Мої призи!\"\n      }, {\n        id: 7,\n        text: \"Шановний гравець, це можна зробити РП шляхом.\"\n      }, {\n        id: 8,\n        text: \"Слідкую за гравцем.\"\n      }, {\n        id: 9,\n        text: \"Не виявив порушень.\"\n      }, {\n        id: 10,\n        text: \"Вітаю! Якщо ви не згодні з покаранням, залиште скаргу на форумі.\"\n      }],\n      permissions: {\n        addNewQuickAnswer: [\"admin\"]\n      }\n    };\n  },\n  computed: {\n    getReportList() {\n      return this.reportList.length ? this.reportList.sort((a, b) => b.priority - a.priority) : [];\n    }\n  },\n  methods: {\n    setData(data) {\n      console.log(data);\n      this.$recursiveAssign(data, this.$data);\n      console.log(this.$data);\n    },\n    SetChatData(data) {\n      this.chat = data;\n    },\n    setReportList(data) {\n      this.reportList = data;\n    },\n    removeReportFromList(id) {\n      let findReport = this.reportList.findIndex(a => a.id === id);\n      if (findReport !== -1) {\n        this.reportList.splice(findReport, 1);\n      }\n    },\n    addReportToList(data) {\n      this.reportList.push(data);\n    },\n    permissionResolver(type) {\n      return this.permissions[type].includes(this.group);\n    },\n    chatHandler(data) {\n      if (Object.keys(this.chat).length) {\n        if (this.chat.messages && Array.isArray(this.chat.messages)) {\n          this.chat.messages.push(data);\n        }\n      }\n    },\n    quickAnswerHandler(action, data) {\n      switch (action) {\n        case \"mount\":\n          this.quickAnswers = data;\n          break;\n        case \"add\":\n          this.quickAnswers.push(data);\n          break;\n        case \"remove\":\n          let findAnswer = this.quickAnswers.findIndex(a => a.id === data.id);\n          if (findAnswer !== -1) {\n            this.quickAnswers.splice(findAnswer, 1);\n          }\n          break;\n      }\n    },\n    getTime(date) {\n      return new Date(date).toLocaleTimeString(\"uk-UA\", {\n        timeZone: \"Europe/Kiev\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      });\n    },\n    getDate(date) {\n      return new Date(date).toLocaleString(\"en-US\", {\n        timezone: \"Europe/Kiev\",\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\"\n      });\n    },\n    selectReport(report) {\n      if (Object.keys(this.chat).length > 0) {\n        return;\n      }\n      this.$callClient(\"AdminReport:SelectReport\", JSON.stringify(report));\n    },\n    sendMessage() {\n      if (this.message) {\n        this.$callClient(\"AdminReport:SendMessage\", this.message);\n        this.message = \"\";\n      }\n    },\n    reportAction(action) {\n      this.$callClient(\"AdminReport:Action\", action);\n    },\n    scrollChat() {\n      this.$nextTick(() => {\n        try {\n          if (document.querySelector(\".admin-report__wrapper-content__item-dialog__chat-list\").scrollTop + document.querySelector(\".admin-report__wrapper-content__item-dialog__chat-list\").offsetHeight + document.querySelector(\".admin-report__wrapper-content__item-dialog__chat-list\").lastChild.offsetHeight + Math.ceil(Number(getComputedStyle(document.querySelector(\".admin-report__wrapper-content__item-dialog__chat-list\").lastChild).getPropertyValue(\"margin-bottom\").replace(\"px\", \"\"))) >= document.querySelector(\".admin-report__wrapper-content__item-dialog__chat-list\").scrollHeight - this.autoScrollMinHeight) {\n            document.querySelector(\".admin-report__wrapper-content__item-dialog__chat-list\").scrollTo({\n              top: document.querySelector(\".admin-report__wrapper-content__item-dialog__chat-list\").scrollHeight,\n              behavior: \"smooth\"\n            });\n          }\n        } catch (ex) {\n          console.log(ex);\n        }\n      });\n    },\n    selectHotKey(command) {\n      this.$callClient(\"AdminReport:SelectHotKey\", command);\n    },\n    selectQuickAnswer(text) {\n      this.message = text;\n    },\n    quickAnswerAction(action, answer) {\n      switch (action) {\n        case \"add\":\n          this.$EBus.$emit(\"modal-universal\", {\n            transition: \"modal-universal-fade\",\n            type: \"modal-universal__new-quick__answer\",\n            title: \"Добавление нового ответа\",\n            subtitle: \"\",\n            actionOnBackground: () => {\n              this.$EBus.$emit(\"modal-universal__trigger\", false);\n            },\n            buttons: [{\n              type: \"default\",\n              title: \"Добавить\",\n              action: text => {\n                this.$callClient(\"AdminReport:QuickAnswerAction\", \"add\", {\n                  text\n                });\n                this.$EBus.$emit(\"modal-universal__trigger\", false);\n              }\n            }, {\n              type: \"default\",\n              title: \"Отменить\",\n              action: () => {\n                this.$EBus.$emit(\"modal-universal__trigger\", false);\n              }\n            }]\n          });\n          break;\n        case \"edit\":\n          this.$EBus.$emit(\"modal-universal\", {\n            transition: \"modal-universal-fade\",\n            type: \"modal-universal__new-quick__answer\",\n            title: \"Редактирование ответа\",\n            subtitle: \"\",\n            actionOnBackground: () => {\n              this.$EBus.$emit(\"modal-universal__trigger\", false);\n            },\n            inputValue: answer.text,\n            buttons: [{\n              type: \"default\",\n              title: \"Сохранить\",\n              action: (text, answer) => {\n                this.$callClient(\"AdminReport:QuickAnswerAction\", \"edit\", Object.assign({\n                  id: answer.id\n                }, {\n                  text\n                }));\n                this.$EBus.$emit(\"modal-universal__trigger\", false);\n              }\n            }, {\n              type: \"default\",\n              title: \"Отменить\",\n              action: () => {\n                this.$EBus.$emit(\"modal-universal__trigger\", false);\n              }\n            }],\n            data: {\n              answer\n            }\n          });\n          break;\n        case \"remove\":\n          this.$EBus.$emit(\"modal-universal\", {\n            transition: \"modal-universal-fade\",\n            type: \"modal-universal__confirmation\",\n            title: \"Удаление ответа\",\n            subtitle: \"Вы уверены что хотите удалить?\",\n            actionOnBackground: () => {\n              this.$EBus.$emit(\"modal-universal__trigger\", false);\n            },\n            buttons: [{\n              type: \"default\",\n              title: \"Да\",\n              action: data => {\n                this.$callClient(\"AdminReport:QuickAnswerAction\", \"remove\", {\n                  id: data.answer.id\n                });\n                this.$EBus.$emit(\"modal-universal__trigger\", false);\n              }\n            }, {\n              type: \"default\",\n              title: \"Нет\",\n              action: () => {\n                this.$EBus.$emit(\"modal-universal__trigger\", false);\n              }\n            }],\n            data: {\n              answer\n            }\n          });\n          break;\n      }\n    },\n    closeAdminReport() {\n      this.$callClient(\"AdminReport:Close\");\n    }\n  },\n  mounted() {\n    console.log(\"REPORTS MOUNTED\");\n    document.addEventListener(\"keyup\", e => {\n      if (e.keyCode === 27) {\n        // Escape\n        if (this.active) {\n          this.closeAdminReport();\n        }\n      }\n      if (e.keyCode === 13) {\n        // Enter\n        if (this.active) {\n          if (Object.keys(this.chat).length) {\n            this.sendMessage();\n          }\n        }\n      }\n    });\n    this.$onClient(\"C:AdminReport:SetData\", this.setData);\n    this.$onClient(\"C:AdminReport:SetChatData\", this.SetChatData);\n    this.$onClient(\"C:AdminReport:addReportToList\", this.addReportToList);\n    this.$onClient(\"C:AdminReport:removeReportFromList\", this.removeReportFromList);\n    this.$onClient(\"C:AdminReport:chatHandler\", this.chatHandler);\n    this.$callClient(\"W:AdminReport:Ready\");\n  },\n  beforeUnmount() {\n    this.$offClient(\"C:AdminReport:SetData\", this.setData);\n    this.$offClient(\"C:AdminReport:SetChatData\", this.SetChatData);\n    this.$offClient(\"C:AdminReport:addReportToList\", this.addReportToList);\n    this.$offClient(\"C:AdminReport:removeReportFromList\", this.removeReportFromList);\n    this.$offClient(\"C:AdminReport:chatHandler\", this.chatHandler);\n  },\n  watch: {\n    message(value) {\n      if (value.length > this.messageMaxLength) {\n        return this.message = value.slice(0, value.length - 1);\n      }\n    },\n    chat: {\n      handler() {\n        this.scrollChat();\n      },\n      deep: true\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}