{"ast":null,"code":"import Animations_Menu from \"./Components/Animations_Menu.vue\";\nimport Animations_Navigation from \"./Components/Animation_Nav.vue\";\nexport default {\n  name: \"animations\",\n  data() {\n    return {\n      locale: \"ua\",\n      isActive: false,\n      activeCategory: null,\n      fastSlots: {\n        1: [],\n        2: [],\n        3: [],\n        4: [],\n        5: [],\n        6: []\n      },\n      walkStyle: {\n        id: 0,\n        name: \"Стандартная\",\n        style: \"\"\n      },\n      qwery: \"\",\n      filteredAnimations: [],\n      animations: []\n    };\n  },\n  components: {\n    xnavigation: Animations_Navigation,\n    xmenu: Animations_Menu\n  },\n  watch: {\n    activeCategory() {\n      if (this.qwery.length) {\n        this.qwery = \"\";\n        return;\n      }\n      this.filterAnimations();\n    },\n    qwery(value) {\n      this.filterAnimations(value);\n    }\n  },\n  computed: {\n    sortedAnimations() {\n      return this.animations.slice().sort((a, b) => a.name.localeCompare(b.name));\n    },\n    categoriesList() {\n      return this.$store.getters.getAnimations;\n    }\n  },\n  methods: {\n    filterAnimations(value) {\n      this.filteredAnimations = !value ? this.sortedAnimations : this.customFilter(value.toLowerCase());\n      // : this.sortedAnimations.filter(\n      //     (animation) =>\n      //       this.$t(animation.name).toLowerCase().includes(value) ||\n      //       this.$t(animation.name).toLowerCase().includes(valueWithoutI)\n      //   );\n      // .sort((a, b) => a.name.localeCompare(b.name));\n    },\n    onChangeInput(event) {\n      this.qwery = event.target.value;\n    },\n    customFilter(value) {\n      const valueWithoutI = value && value?.includes(\"і\") ? value?.replace(\"і\", \"i\").toLowerCase() : value?.toLowerCase();\n      let result = [];\n      const sortedAnimations = this.sortedAnimations;\n      for (let i = 0; i < sortedAnimations.length; i++) {\n        const isIncludes = this.$t(sortedAnimations[i].name).toLowerCase().includes(valueWithoutI);\n        if (isIncludes) {\n          result.push(sortedAnimations[i]);\n        } else if (result.length) {\n          console.log(i);\n          return result;\n        }\n      }\n      return result;\n    },\n    onFocusInput() {\n      this.activeCategory = null;\n    },\n    setAnimations() {\n      this.animations = this.categoriesList.reduce((prev, categoriesItem) => {\n        const animationsWithCategory = categoriesItem.animations.map(animation => {\n          return {\n            ...animation,\n            category: categoriesItem.name,\n            img: categoriesItem.img\n          };\n        });\n        return [...prev, ...animationsWithCategory];\n      }, []);\n    },\n    setData() {\n      this.activeCategory = this.categoriesList[0];\n      this.animations = this.categoriesList.find(categoriesItem => categoriesItem.name === this.activeCategory.name).animations;\n    },\n    setCategory(category) {\n      this.activeCategory = category;\n    },\n    closeApp() {\n      this.isActive = false;\n      this.$callClient(\"saveSlots\", JSON.stringify(this.fastSlots));\n    },\n    playAnim(animation, isSpecial) {\n      if (isSpecial) {\n        this.walkStyle = animation;\n        this.$callClient(\"setWalk\", JSON.stringify(animation));\n      } else {\n        this.$callClient(\"playAnim\", JSON.stringify(animation));\n      }\n    },\n    keydown(e) {\n      if (e.keyCode === 27 && !window.isModalShow) {\n        this.closeApp();\n      }\n    },\n    bindClose() {\n      window.addEventListener(\"keyup\", this.keydown);\n    },\n    setFast(data) {\n      this.fastSlots = data.fastSlots;\n      this.walkStyle = data.walkStyle;\n    }\n  },\n  beforeUnmount() {\n    this.$offClient(\"setFastAniamtions\");\n    window.removeEventListener(\"keyup\", this.keydown);\n  },\n  mounted() {\n    this.isActive = true;\n    this.bindClose();\n    this.setData();\n    this.setAnimations();\n    this.$onClient(\"setFastAniamtions\", this.setFast);\n    this.$callClient(\"C:Animation:SetDefaultData\");\n  }\n};","map":null,"metadata":{},"sourceType":"module"}