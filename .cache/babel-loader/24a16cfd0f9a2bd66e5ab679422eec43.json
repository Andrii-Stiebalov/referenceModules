{"ast":null,"code":"import ColorPickerSL from \"./ColorPickerSL\";\nimport ColorPickerHue from \"./ColorPickerHue\";\nimport { hexToHsv, hsvToHex } from \"../../Assets/hsvUtils\";\nexport default {\n  data() {\n    return {\n      localColorHsv: {\n        h: 0,\n        s: 0,\n        v: 0\n      }\n    };\n  },\n  components: {\n    ColorPickerSL,\n    ColorPickerHue\n  },\n  props: {\n    selectedColor: {\n      type: String,\n      default: \"#36ced7\"\n    },\n    colorHsv: {\n      type: String\n    }\n  },\n  watch: {\n    localColorHsv: {\n      handler(val) {\n        const keys = Object.keys(this.localColorHsv);\n        const isChanged = keys.some(key => this.localColorHsv[key] == this.colorHsv[key]);\n        if (isChanged) {\n          this.$emit(\"setColorHsv\", val);\n        }\n      },\n      deep: true\n    }\n  },\n  computed: {\n    hexColor() {\n      return hsvToHex(this.colorHsv.h, this.colorHsv.s, this.colorHsv.v);\n    }\n  },\n  methods: {\n    onChangeSL(color) {\n      this.localColorHsv = color;\n    },\n    onChangeHue(h) {\n      this.localColorHsv.h = h;\n    },\n    setHsvColor(h, s, v) {\n      this.localColorHsv = {\n        h,\n        s,\n        v\n      };\n    }\n  },\n  mounted() {\n    this.setHsvColor(...hexToHsv(this.selectedColor));\n  }\n};","map":null,"metadata":{},"sourceType":"module"}