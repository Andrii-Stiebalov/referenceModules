{"ast":null,"code":"export default {\n  data() {\n    return {\n      scaleIconProcent: 0.83,\n      procent: 50,\n      addOnTap: 6.5,\n      minusOnTick: 1,\n      timer: null,\n      isGameStop: false,\n      currentKey: null,\n      event: null,\n      missclick: 0,\n      lastCheck: new Date(),\n      buttonChanged: false\n    };\n  },\n  methods: {\n    getStrokeDashoffset(count, max) {\n      const procent = count / max * 100;\n      return 100 - procent;\n    },\n    setScaleIconProcent() {\n      const fontSize = getComputedStyle(document.documentElement).fontSize;\n      const size = fontSize.slice(0, -2);\n      this.scaleIconProcent = +size / 10 + 0.04;\n    },\n    setElemAnim() {\n      const tapItem = document.getElementById(\"taptapItem\");\n      tapItem.style.transform = \"scale(0.9)\";\n      setTimeout(() => tapItem.style.transform = \"scale(1)\", 100);\n    },\n    generateRandomKeyCode() {\n      let keyCodes = [69, 82, 81, 70, 90, 88, 72];\n      // Получаем случайный индекс элемента\n      let randomIndex = Math.floor(Math.random() * keyCodes.length);\n      // Получаем случайный элемент из массива\n      return keyCodes[randomIndex];\n    },\n    setData(data) {\n      this.addOnTap = data.addOnTap;\n      this.minusOnTick = data.minusOnTick;\n      this.event = data.event;\n    },\n    handelTap(e) {\n      if (!this.isGameStop) {\n        if (Date.now() - this.lastCheck < 50) {\n          return;\n        }\n        this.lastCheck = Date.now();\n        if (e.keyCode === this.currentKey) {\n          this.procent += this.addOnTap;\n          this.setElemAnim();\n        } else {\n          this.missclick++;\n          if (this.missclick > 25) {\n            clearInterval(this.timer);\n            this.isGameStop = true;\n            this.$callClient(\"C:TapTapMiniGame\", false, this.event);\n          }\n        }\n      }\n    },\n    setBtnList() {\n      for (let i = 0; i <= 3; i++) {\n        let isApproved = false;\n        while (!isApproved) {\n          const rndmKey = this.generateRandomKeyCode();\n          if (!this.btnList.includes(rndmKey)) {\n            isApproved = true;\n            this.btnList.push(rndmKey);\n          }\n        }\n      }\n    },\n    getCharFromKeyCode(keyCode) {\n      return String.fromCharCode(keyCode);\n    }\n  },\n  mounted() {\n    this.setScaleIconProcent();\n    this.currentKey = this.generateRandomKeyCode();\n    window.addEventListener(\"keyup\", this.handelTap);\n    this.$onClient(\"C:TapTapMiniGame:SetData\", this.setData);\n    this.$callClient(\"C:TapTapMiniGame:Ready\");\n    let i = 0;\n    setTimeout(() => {\n      this.timer = setInterval(() => {\n        if (!this.buttonChanged && this.procent > 75) {\n          //i++;\n          if (Math.random() < 0.3) {\n            this.currentKey = this.generateRandomKeyCode();\n            this.buttonChanged = true;\n          }\n        }\n        this.procent -= this.minusOnTick;\n        if (this.procent <= 0) {\n          clearInterval(this.timer);\n          this.isGameStop = true;\n          this.$callClient(\"C:TapTapMiniGame\", false, this.event);\n        }\n        if (this.procent > 100) {\n          this.procent = 100;\n          this.isGameStop = true;\n          this.$callClient(\"C:TapTapMiniGame\", true, this.event);\n          clearInterval(this.timer);\n        }\n      }, 50);\n    }, 500);\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"keyup\", this.handelTap);\n    this.$offClient(\"C:TapTapMiniGame:SetData\", this.setData);\n    this.$callClient(\"C:TapTapMiniGame:Ready\");\n  }\n};","map":null,"metadata":{},"sourceType":"module"}