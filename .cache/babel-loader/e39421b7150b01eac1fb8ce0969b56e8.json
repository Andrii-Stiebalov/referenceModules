{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vShow as _vShow, withDirectives as _withDirectives, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"CustomSelect__options-section\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"CustomSelect\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.showOptions())\n  }, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"CustomSelect__selected-section\", {\n      'CustomSelect__selected-section--selected': $data.isShowOptions,\n      'CustomSelect__selected-section--disabled': $props.disabled\n    }])\n  }, _toDisplayString($props.selectedValue), 3), _createVNode(_Transition, {\n    name: \"showOptions\"\n  }, {\n    default: _withCtx(() => [_withDirectives(_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.options, option => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: option\n      }, [option !== $props.selectedValue ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: \"CustomSelect__option\",\n        onClick: $event => $options.setValue(option)\n      }, _toDisplayString(option), 9, _hoisted_2)) : _createCommentVNode(\"\", true)]);\n    }), 128))], 512), [[_vShow, $data.isShowOptions]])]),\n    _: 1\n  })]);\n}","map":null,"metadata":{},"sourceType":"module"}