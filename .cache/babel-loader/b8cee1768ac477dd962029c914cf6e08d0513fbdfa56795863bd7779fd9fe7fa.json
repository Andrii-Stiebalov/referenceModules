{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport MPitemCard from \"../MP-ItemCard/MP-ItemCard.vue\";\nimport { checkSection } from \"../../Assets/functions\";\nexport default {\n  props: {\n    cardsList: {\n      type: Array,\n      required: true\n    }\n  },\n  components: {\n    MPitemCard\n  },\n  data() {\n    return {\n      cardsLimit: 16,\n      visibleCards: [],\n      isScrollToEnd: false\n    };\n  },\n  mounted() {\n    this.loadMoreCards();\n  },\n  watch: {\n    cardsList: {\n      handler(newVal) {\n        this.visibleCards = [];\n        this.loadMoreCards();\n      },\n      deep: true\n    }\n  },\n  methods: {\n    handleCardClick(itemCard) {\n      if (checkSection(this.$route, \"stock\") || checkSection(this.$route, \"shoppingHistory\")) {\n        return;\n      } else if (checkSection(this.$route, \"myListings\")) {\n        if (itemCard?.itemID) {\n          this.setMyListingsOfferExchange(itemCard);\n        } else {\n          this.setSelectedItem(itemCard);\n        }\n      } else if (checkSection(this.$route, \"createListing\")) {\n        if (itemCard.status === \"unavailable\") {\n          return;\n        } else if (itemCard?.objectType === \"item\") {\n          this.$store.commit(\"marketPlace/openModal\", [itemCard, \"exchangeItemAdd\"]);\n        } else if (itemCard?.action === \"transportRent\") {\n          this.$router.push(\"/MarketPlace/createListing/transportRent\");\n        } else {\n          this.$store.commit(\"marketPlace/selectItem\", itemCard);\n        }\n      } else {\n        this.setSelectedItem(itemCard);\n      }\n    },\n    setSelectedItem(itemCard) {\n      if (Object.keys(itemCard?.data).length <= 3) {\n        this.$callClient(\"C:MarketPlace:ItemCard:Select\", itemCard.id);\n      } else {\n        this.$store.commit(\"marketPlace/setSelectedItem\", itemCard.id);\n      }\n    },\n    setMyListingsOfferExchange(itemCard) {\n      const exchangeItem = this.$store.getters[\"marketPlace/getCardsList\"](\"items\")?.find(exchange => exchange.itemID === itemCard.itemID);\n      if (exchangeItem) {\n        if (exchangeItem.data?.statistic?.length) {\n          this.$store.commit(\"marketPlace/setSelectedItem\", exchangeItem.id);\n        } else {\n          this.$callClient(\"C:MarketPlace:ItemCard:Select\", exchangeItem.id);\n        }\n      }\n    },\n    handleScroll(event) {\n      const element = event.target;\n      if (element.scrollHeight - element.scrollTop <= element.clientHeight * 1.05 && !this.isScrollToEnd) {\n        this.isScrollToEnd = true;\n        this.loadMoreCards();\n      }\n    },\n    loadMoreCards() {\n      const start = this.visibleCards.length;\n      const end = start + this.cardsLimit;\n      this.visibleCards.push(...this.cardsList.slice(start, end));\n      this.isScrollToEnd = false;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}