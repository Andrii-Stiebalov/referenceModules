{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"modals-safezone\"\n};\nconst _hoisted_2 = {\n  class: \"modal-main\"\n};\nconst _hoisted_3 = {\n  class: \"modalContent\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = [\"innerHTML\"];\nconst _hoisted_6 = {\n  key: 2,\n  class: \"modalContent-inputs\"\n};\nconst _hoisted_7 = [\"placeholder\", \"value\", \"onInput\"];\nconst _hoisted_8 = {\n  class: \"modalContent-buttons\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", null, /*#__PURE__*/_toDisplayString(\"Нажмите в пустую область, \\n чтобы закрыть окно\"), -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"modal-window\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.onWindowClick && $options.onWindowClick(...args))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [$props.data.title ? (_openBlock(), _createElementBlock(\"p\", {\n    key: 0,\n    class: \"modalContent-title\",\n    innerHTML: $props.data.title\n  }, null, 8, _hoisted_4)) : _createCommentVNode(\"\", true), $props.data.subtitle ? (_openBlock(), _createElementBlock(\"p\", {\n    key: 1,\n    class: \"modalContent-subtitle\",\n    innerHTML: $props.data.subtitle\n  }, null, 8, _hoisted_5)) : _createCommentVNode(\"\", true), $props.data.text ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.data.text, (text, idx) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"modalContent-inputs__item\",\n      key: idx\n    }, [_createElementVNode(\"input\", {\n      type: \"text\",\n      placeholder: text.placeholder,\n      value: text.value,\n      onInput: $event => $options.onTextInput(idx, text, $event)\n    }, null, 40, _hoisted_7)]);\n  }), 128))])) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.data.button, (button, idx) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      class: \"modalContent-buttons__item default\",\n      key: idx,\n      onClick: $event => $options.onButtonClick(idx, button)\n    }, [_createElementVNode(\"p\", null, _toDisplayString(button.text), 1)], 8, _hoisted_9);\n  }), 128))])])]), _hoisted_10])]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}