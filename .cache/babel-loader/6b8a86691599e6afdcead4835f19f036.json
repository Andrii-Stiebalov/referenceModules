{"ast":null,"code":"export default {\n  template: `\n    <transition name=\"controls-fade\">\n        <div class=\"controls-modal\" v-if=\"modalActive\">\n            <div class=\"controls-modal__main\">\n                <div class=\"controls-modal__main-confirmation\">\n                    <div class=\"controls-modal__main-content\">\n                        <div class=\"controls-modal__content-title\">\n                            <p>{{title}}</p>\n                        </div>\n                        <div class=\"controls-modal__content-subtitle\">\n                            <p v-html=\"subtitle\"></p>\n                        </div>\n                        <div class=\"controls-modal__content-selection\" v-if=\"selectionValues\">\n                            <div class=\"controls-modal__selection-image\" @click=\"setPrev\">\n                                <svg viewBox=\"0 0 10 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.83607 11.8192C6.03477 11.6001 6.05284 11.2571 5.89026 11.0155L5.83607 10.9462L1.35106 6L5.83607 1.05377C6.03477 0.83462 6.05284 0.491687 5.89026 0.250032L5.83607 0.180798C5.63736 -0.0383512 5.32642 -0.0582738 5.1073 0.12103L5.04453 0.180798L0.163933 5.56351C-0.0347738 5.78266 -0.0528383 6.1256 0.10974 6.36725L0.163933 6.43649L5.04453 11.8192C5.26311 12.0603 5.61749 12.0603 5.83607 11.8192Z\"></path><path opacity=\"0.25\" d=\"M9.83607 11.8192C10.0348 11.6001 10.0528 11.2571 9.89026 11.0155L9.83607 10.9462L5.35106 6L9.83607 1.05377C10.0348 0.83462 10.0528 0.491687 9.89026 0.250032L9.83607 0.180798C9.63736 -0.0383512 9.32642 -0.0582738 9.1073 0.12103L9.04453 0.180798L4.16393 5.56351C3.96523 5.78266 3.94716 6.1256 4.10974 6.36725L4.16393 6.43649L9.04453 11.8192C9.26311 12.0603 9.61749 12.0603 9.83607 11.8192Z\"></path></svg>\n                            </div>\n                            <p>{{selectedValue.name}}</p>\n                            <div class=\"controls-modal__selection-image\" @click=\"setNext\">\n                                <svg viewBox=\"0 0 10 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.83607 11.8192C6.03477 11.6001 6.05284 11.2571 5.89026 11.0155L5.83607 10.9462L1.35106 6L5.83607 1.05377C6.03477 0.83462 6.05284 0.491687 5.89026 0.250032L5.83607 0.180798C5.63736 -0.0383512 5.32642 -0.0582738 5.1073 0.12103L5.04453 0.180798L0.163933 5.56351C-0.0347738 5.78266 -0.0528383 6.1256 0.10974 6.36725L0.163933 6.43649L5.04453 11.8192C5.26311 12.0603 5.61749 12.0603 5.83607 11.8192Z\"></path><path opacity=\"0.25\" d=\"M9.83607 11.8192C10.0348 11.6001 10.0528 11.2571 9.89026 11.0155L9.83607 10.9462L5.35106 6L9.83607 1.05377C10.0348 0.83462 10.0528 0.491687 9.89026 0.250032L9.83607 0.180798C9.63736 -0.0383512 9.32642 -0.0582738 9.1073 0.12103L9.04453 0.180798L4.16393 5.56351C3.96523 5.78266 3.94716 6.1256 4.10974 6.36725L4.16393 6.43649L9.04453 11.8192C9.26311 12.0603 9.61749 12.0603 9.83607 11.8192Z\"></path></svg>\n                            </div>\n                        </div>\n                        <input type=\"text\" class=\"controls-modal__input\"\n                            v-for=\"input in inputs\"\n                            :key=\"getInitInputID(input)\"\n                            :value=\"getInputValue(input)\"\n                            :placeholder=\"getInputPlaceholed(input)\"\n                            @input=\"onInput($event,input)\"\n                        >\n                        <div class=\"controls-modal__content-buttons\">\n                            <div class=\"controls-modal__buttons-button\"\n                                v-for=\"button in buttons\" \n                                @click=\"buttonClick(button)\">{{getButtonContent(button)}}\n                            </div>\n                            <div @click=\"closeModal\" class=\"controls-modal__buttons-button\">{{$t('Закрыть')}}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </transition>\n    `,\n  data() {\n    return {\n      modalActive: false,\n      title: ``,\n      buttons: [],\n      inputs: [],\n      props: [],\n      selectionValues: null,\n      selectedValue: null,\n      selection: null,\n      outputValues: {}\n    };\n  },\n  methods: {\n    onKeyUp(e) {\n      if (e.key === \"Escape\") this.closeModal();\n    },\n    setPrev() {\n      let index = this.selectionValues.indexOf(this.selectionValues.find(x => x.id === this.selectedValue.id));\n      if (this.selectionValues[index - 1]) this.selectedValue = this.selectionValues[index - 1];\n    },\n    setNext() {\n      let index = this.selectionValues.indexOf(this.selectionValues.find(x => x.id === this.selectedValue.id));\n      if (this.selectionValues[index + 1]) this.selectedValue = this.selectionValues[index + 1];\n    },\n    onMouseDown(e) {\n      if (e.target.classList.contains(\"controls-modal\")) this.closeModal();\n    },\n    closeModal() {\n      this.modalActive = false;\n    },\n    getButtonContent(button) {\n      return button && button.content !== undefined ? this.$t(button.content) : ``;\n    },\n    buttonClick(button) {\n      if (button && button.emit !== undefined) {\n        this.$EBus.$emit(button.emit, this.props, this.outputValues, this.selectedValue);\n      }\n      this.closeModal();\n    },\n    getInitInputID(input) {\n      return input && input.id !== undefined ? input.id : \"default\";\n    },\n    getInitInputValue(input) {\n      input.value = input.value !== undefined ? input.value : \"\";\n      return input.value;\n    },\n    getInputValue(input) {\n      return this.outputValues.inputs[this.getInitInputID(input)];\n    },\n    getInputPlaceholed(input) {\n      return input && input.placeholder !== undefined ? this.$t(input.placeholder) : ``;\n    },\n    onInput(e, input) {\n      if (input.regex !== undefined) {\n        if (!input.regex.test(e.target.value)) {\n          e.target.value = e.target.value.substring(0, e.target.value.length - 1);\n        }\n      }\n      this.outputValues.inputs[this.getInitInputID(input)] = e.target.value;\n    }\n  },\n  mounted() {\n    window.addEventListener(\"keyup\", this.onKeyUp);\n    this.$EBus.$on(\"...->src/components/global/UniversalModal:ModalOpen\", modalOptions => {\n      if (modalOptions) {\n        this.title = modalOptions.title ? this.$t(modalOptions.title) : ``;\n        if (modalOptions.subtitle) {\n          this.subtitle = this.$t(modalOptions.subtitle);\n        } else if (modalOptions.subtitle2) {\n          this.subtitle = modalOptions.subtitle2;\n        } else {\n          this.subtitle = ``;\n        }\n        this.buttons = modalOptions.buttons && Array.isArray(modalOptions.buttons) ? modalOptions.buttons : [];\n        this.inputs = modalOptions.inputs && Array.isArray(modalOptions.inputs) ? modalOptions.inputs : [];\n        this.props = modalOptions.props && Array.isArray(modalOptions.props) ? modalOptions.props : [];\n        if (modalOptions.selector && modalOptions.selector.types) {\n          this.selectionValues = modalOptions.selector.types;\n          this.selectedValue = this.selectionValues[0];\n        }\n        if (this.inputs.length !== 0) {\n          this.outputValues.inputs = {};\n          this.inputs.forEach(input => {\n            this.outputValues.inputs[this.getInitInputID(input)] = this.getInitInputValue(input);\n          });\n        }\n      }\n      this.modalActive = true;\n    });\n    window.addEventListener(\"mousedown\", this.onMouseDown);\n  },\n  destroyed() {\n    this.$EBus.$off(\"...->src/components/global/UniversalModal:ModalOpen\");\n  }\n};","map":null,"metadata":{},"sourceType":"module"}