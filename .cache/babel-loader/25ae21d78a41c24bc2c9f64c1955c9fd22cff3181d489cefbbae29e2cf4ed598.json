{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createBlock as _createBlock, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"Workbench_side-bar\"\n};\nconst _hoisted_2 = {\n  class: \"Workbench_nav-list\"\n};\nconst _hoisted_3 = {\n  class: \"Workbench_main-selector\"\n};\nconst _hoisted_4 = {\n  class: \"Workbench_main-selector-input\"\n};\nconst _hoisted_5 = [\"placeholder\"];\nconst _hoisted_6 = {\n  class: \"Workbench_main-list-selector\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_WorkbenchNavItem = _resolveComponent(\"WorkbenchNavItem\");\n  const _component_WorkbenchSideBarItem = _resolveComponent(\"WorkbenchSideBarItem\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.navList, navItem => {\n    return _openBlock(), _createBlock(_component_WorkbenchNavItem, {\n      onClick: () => _ctx.$emit('selectCategory', navItem.CategoryId),\n      key: navItem.id,\n      iconName: navItem.ImageId,\n      name: navItem.CategoryName,\n      class: _normalizeClass({\n        selectedNav: navItem.CategoryId === $props.selectedNavId\n      })\n    }, null, 8, [\"onClick\", \"iconName\", \"name\", \"class\"]);\n  }), 128))]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inputValue = $event),\n    placeholder: _ctx.$t('Название предмета')\n  }, null, 8, _hoisted_5), [[_vModelText, $data.inputValue]])]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredRecipes, recipe => {\n    return _openBlock(), _createBlock(_component_WorkbenchSideBarItem, {\n      key: recipe.id,\n      onClick: () => recipe.isHaveLvl ? _ctx.$emit('selectRecipe', recipe) : '',\n      recipe: recipe,\n      class: _normalizeClass({\n        selectedSelectorItem: $props.selectedRecipe?.ItemId === recipe.ItemId,\n        blurSelectorItem: !recipe.isHaveLvl\n      })\n    }, null, 8, [\"onClick\", \"recipe\", \"class\"]);\n  }), 128))])])]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}