{"ast":null,"code":"import ConfirmationHeader from \"../../../global/organization/ConfirmationHeader.js\";\nexport default {\n  template: `\n    <div class=\"controls-main__wrapper header\">\n        <ConfirmationHeader\n            :headerProps=\"headerProps\"\n            @getBack=\"getBack\"\n            @saveChanges=\"saveChanges\">\n        </ConfirmationHeader>\n        <div class=\"controls-main__content\">\n            <div class=\"controls-main__content-list edit\">\n                <div class=\"controls-edit__item members\" \n                    v-for=\"rank in shortRanks\" \n                    :class=\"{hover:showHover(rank),active:showActive(rank)}\" \n                    @click=\"setRank(rank)\"\n                    @mouseover=\"setHover(rank)\" \n                    @mouseleave=\"setHover\"\n                >\n                    <p>{{getRankName(rank)}}</p>\n               </div>\n            </div>\n        </div>\n    </div>\n    `,\n  components: {\n    ConfirmationHeader\n  },\n  props: {\n    editableVehicle: {\n      type: Object,\n      required: true\n    },\n    shortRanks: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      activeRank: 0,\n      hoverRank: 0\n    };\n  },\n  computed: {\n    headerProps() {\n      let id = this.editableVehicle && this.editableVehicle.id !== undefined ? this.editableVehicle.id : ``;\n      let title = this.editableVehicle && this.editableVehicle.name !== undefined ? this.editableVehicle.name : ``;\n      let subtitle = this.editableVehicle && this.editableVehicle.number !== undefined ? this.$GetText(`Гос.номер:`) + ` ${this.editableVehicle.number}` : ``;\n      return {\n        id,\n        title,\n        subtitle\n      };\n    }\n  },\n  methods: {\n    showActive(rank) {\n      return rank.id >= this.activeRank ? true : false;\n    },\n    showHover(rank) {\n      return rank.id >= this.hoverRank ? true : false;\n    },\n    setHover(rank) {\n      if (rank.id !== undefined) this.hoverRank = rank.id;else this.hoverRank = Math.max(...this.shortRanks.map(x => x.id));\n    },\n    setRank(rank) {\n      if (rank && rank.id !== undefined && rank.id !== this.activeRank) this.activeRank = rank.id;\n    },\n    getRankName(rank) {\n      return rank && rank.id !== undefined && rank.name !== undefined ? `#${rank.id} ${rank.name}` : ``;\n    },\n    getBack() {\n      this.$EBus.$emit(\"src/components/controls/organization/vehicles/edit/VehiclesEdit->src/mixins/controls/organization/Vehicles:VehiclesGetBack\");\n    },\n    saveChanges() {\n      this.$EBus.$emit(\"src/components/controls/organization/vehicles/edit/VehiclesEdit->src/mixins/controls/organization/Vehicles:VehiclesSetRank\", this.activeRank, this.editableVehicle.id);\n    }\n  },\n  mounted() {\n    this.hoverRank = Math.max(...this.shortRanks.map(x => x.id));\n    if (this.editableVehicle && this.editableVehicle.rankId !== undefined) this.activeRank = this.editableVehicle.rankId;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}