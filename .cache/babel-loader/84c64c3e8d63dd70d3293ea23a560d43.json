{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"auction-item special\"\n};\nconst _hoisted_2 = {\n  class: \"auction-item__main\"\n};\nconst _hoisted_3 = {\n  class: \"auction-item__content\"\n};\nconst _hoisted_4 = {\n  class: \"auction-item__content-image\"\n};\nconst _hoisted_5 = {\n  class: \"auction-item__content-mesh\"\n};\nconst _hoisted_6 = {\n  class: \"auction-item__row-main\"\n};\nconst _hoisted_7 = [\"src\", \"alt\"];\nconst _hoisted_8 = {\n  class: \"auction-item__buy\"\n};\nconst _hoisted_9 = [\"value\", \"placeholder\"];\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CdnResolverImage = _resolveComponent(\"CdnResolverImage\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, _toDisplayString($props.item.lotName), 1), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_CdnResolverImage, {\n    path: $props.item.imagePath\n  }, null, 8, [\"path\"])]), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.currentFields, field => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"auction-item__row\",\n      key: field.id\n    }, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(field.name)), 1), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n      src: `img/${field.img}.svg`,\n      alt: field.id\n    }, null, 8, _hoisted_7), _createElementVNode(\"p\", null, _toDisplayString(field.id == \"timeLeft\" && $props.item[field.id] == -1 ? _ctx.$t(\"Ожидание ставок\") : field.fn ? field.fn($props.item[field.id]) : $props.item[field.id]), 1)])]);\n  }), 128))])])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"input\", {\n    type: \"text\",\n    value: $props.currentBet,\n    class: \"auction-item__buy-input\",\n    onInput: _cache[0] || (_cache[0] = (...args) => $options.onInput && $options.onInput(...args)),\n    placeholder: _ctx.$t('Введите сумму')\n  }, null, 40, _hoisted_9), _createElementVNode(\"div\", {\n    class: \"auction-item__buy-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.onClick && $options.onClick(...args))\n  }, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"Сделать ставку\")), 1)]), _createElementVNode(\"p\", null, [_createTextVNode(_toDisplayString(_ctx.$t(\"Минимальная ставка\")) + \": \", 1), _hoisted_10, _createTextVNode(_toDisplayString($props.item.minimalBet) + \"$ \", 1), _hoisted_11, _createTextVNode(_toDisplayString(_ctx.$t(\"Комиссия\")) + \": \" + _toDisplayString($props.item.comission) + \"$ \", 1)])])]);\n}","map":null,"metadata":{},"sourceType":"module"}