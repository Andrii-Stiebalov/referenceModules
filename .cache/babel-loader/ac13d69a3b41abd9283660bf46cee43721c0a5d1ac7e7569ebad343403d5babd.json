{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport MPSortSelect from \"../MP-SortSelect/MP-SortSelect.vue\";\nimport SpecialBtn from \"../MP-SpecialBtn/MP-SpecialBtn.vue\";\nimport MPInput from \"../MP-Input/MP-Input.vue\";\nimport MPSpecialBtn from \"../MP-SpecialBtn/MP-SpecialBtn.vue\";\nimport MPDeleteBtn from \"../MP-DeleteBtn/MP-DeleteBtn.vue\";\nimport MPEditBtn from \"../MP-EditBtn/MP-EditBtn.vue\";\nimport MPContinueBtn from \"../MP-ContinueBtn/MP-ContinueBtn.vue\";\nimport MPModerateBtn from \"../MP-ModerateBtn/MP-ModerateBtn.vue\";\nimport MPReturnBtn from \"../MP-ReturnBtn/MP-ReturnBtn.vue\";\nimport { formatNumber, checkSection, getIsAuction, getIsExchange } from \"../../Assets/functions\";\nimport arrow from \"./Assets/Icons/arrow.vue\";\nimport MPModeration from \"@/Application/Pages/MarketPlace/Components/MP-Moderation/MP-Moderation.vue\";\nexport default {\n  props: {},\n  components: {\n    MPSortSelect,\n    SpecialBtn,\n    MPInput,\n    MPModeration,\n    MPSpecialBtn,\n    MPDeleteBtn,\n    MPEditBtn,\n    MPContinueBtn,\n    MPModerateBtn,\n    MPReturnBtn,\n    arrow\n  },\n  methods: {\n    formatNumber(number) {\n      return `${formatNumber(number, \".\")}`;\n    },\n    switchToCreateListing() {\n      this.$store.commit(\"marketPlace/resetSelectedItem\");\n      this.$router.push(\"/MarketPlace/createListing/all\");\n    },\n    handleReturnBackClick() {\n      const isEditListing = this.$route.params?.type === \"edit\";\n      const isCreateListing = checkSection(this.$route, \"createListing\");\n      if (isEditListing) {\n        this.$router.go(-1);\n      } else if (isCreateListing) {\n        this.$store.commit(\"marketPlace/resetSelectedItem\");\n        this.$router.push(\"/MarketPlace/createListing/all\");\n      } else {\n        this.$store.commit(\"marketPlace/resetSelectedItem\");\n      }\n    },\n    setSearchInput(value) {\n      this.inputSearch = value;\n      this.$store.commit(\"marketPlace/setSearchItems\", [this.$route.params?.section, value]);\n    }\n  },\n  computed: {\n    getIsShowReturnBtn() {\n      return this.getSelectedItem && this.getIsAdmin && this.$route.params?.section === \"moderation\";\n    },\n    getIsShowModerateBtn() {\n      return this.getSelectedItem && this.getIsAdmin && !getIsExchange(this.getSelectedItem) && !getIsAuction(this.getSelectedItem) && !checkSection(this.$route, \"moderation\") && !checkSection(this.$route, \"createListing\");\n    },\n    getIsShowContinueButton() {\n      return this.getSelectedItem && this.getIsPlayerListing && !this.getIsModeration;\n    },\n    getIsShowEditButton() {\n      return this.getSelectedItem && this.getIsPlayerListing & !this.getIsModeration;\n    },\n    getIsShowDeleteBtn() {\n      return this.getSelectedItem && (this.getIsAdmin || this.getIsPlayerListing) && !getIsExchange(this.getSelectedItem) && !checkSection(this.$route, \"createListing\");\n    },\n    getIsShowComplaint() {\n      return this.getSelectedItem && !(getIsAuction(this.getSelectedItem) || getIsExchange(this.getSelectedItem)) && !checkSection(this.$route, \"createListing\") && !this.getIsAdmin && !this.getIsPlayerListing;\n    },\n    getSearchValue() {\n      return this.$store.getters[\"marketPlace/getSearchValue\"];\n    },\n    getSelectedItem() {\n      return this.$store.getters[\"marketPlace/getSelectedItem\"];\n    },\n    getSectionTitle() {\n      const section = this.$route.params?.section || \"createListing\";\n      const titles = {\n        stock: \"Склад зберігання\",\n        favorites: \"Вподабані\",\n        shoppingHistory: \"Історія покупок\",\n        createListing: \"Виберіть товар для продажу\",\n        myListings: \"Мої оголошення\",\n        moderation: \"Відправлено на модерацію\"\n      };\n      return titles[section] || \"\";\n    },\n    getInputPlaceholder() {\n      const section = this.$route.params?.section;\n      const placeholders = {\n        auction: \"Назва лоту\",\n        estate: \"Назва нерухомості\",\n        business: \"Назва бізнесу\",\n        atms: \"Назва банкомату\",\n        items: \"Назва предмету\",\n        services: \"Назва послуги\"\n      };\n      return placeholders[section] || \"\";\n    },\n    getIsShowCategorySelect() {\n      return [\"auction\"].includes(this.$route.params?.section);\n    },\n    getIsShowRentSelect() {\n      return [\"transportRent\"].includes(this.$route.params?.section);\n    },\n    getIsShowGenderSelect() {\n      return [\"clothes\"].includes(this.$route.params?.section);\n    },\n    getIsShowTransportSelect() {\n      return [\"transport\", \"transportRent\"].includes(this.$route.params?.section);\n    },\n    getIsShowSortSelect() {\n      return [\"auction\", \"transport\", \"estate\", \"business\", \"atms\", \"billboards\", \"items\", \"clothes\", \"services\", \"transportRent\"].includes(this.$route.params?.section);\n    },\n    getIsShowClothesSelect() {\n      return [\"clothes\"].includes(this.$route.params?.section);\n    },\n    isShowReturnBack() {\n      return this.getSelectedItem || [\"transportRent\"].includes(this.$route.params?.type);\n    },\n    getIsPlayerListing() {\n      const isMyListingsSection = checkSection(this.$route, \"myListings\");\n      const isMyListing = this.getSelectedItem?.data.static === this.getStatic;\n      return isMyListingsSection || isMyListing;\n    },\n    getPlayerMoney() {\n      return this.$store.getters[\"playerMenu/getBalance\"];\n    },\n    getStatic() {\n      return this.$store.getters[\"playerMenu/getStatic\"];\n    },\n    getIsModeration() {\n      return this.$route.params?.section === \"moderation\";\n    },\n    getIsAdmin() {\n      return this.$store.getters[\"playerMenu/getIsAdmin\"];\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}