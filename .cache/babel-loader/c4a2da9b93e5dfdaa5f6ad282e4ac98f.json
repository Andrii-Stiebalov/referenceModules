{"ast":null,"code":"export default {\n  props: {\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: {\n    getSharedData() {\n      return [\"text\", \"range\", \"checkbox\"].reduce((acc, type) => {\n        if (this.data[type] !== undefined) {\n          acc[type] = Object.entries(this.data[type]).reduce((_acc, [id, _data]) => {\n            _acc[id] = _data.value;\n            return _acc;\n          }, {});\n        }\n        return acc;\n      }, {});\n    }\n  },\n  methods: {\n    onButtonClick(buttonId, button) {\n      this.$callClient(\"C:Modals:ButtonPressed\", buttonId, this.getSharedData);\n      if (button.isClose) this.$emit(\"delete\", this.data);\n    },\n    onWindowClick(e) {\n      if (e.target == this.$el) {\n        this.$callClient(\"C:Modals:WindowPressed\", this.getSharedData);\n        this.$emit(\"delete\", this.data);\n      }\n    },\n    onTextInput(textId, text, e) {\n      this.$emit(\"update\", this.data.id, {\n        text: {\n          [textId]: {\n            value: e.target.value\n          }\n        }\n      });\n    }\n  },\n  created() {\n    this.$callClient(\"C:Modals:ModalReady\", this.data.id);\n  },\n  beforeUnmount() {\n    this.$callClient(\"C:Modals:ModalDestroyed\", this.data.id);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}