{"ast":null,"code":"import OneKnobMiniGame from \"./Components/OneKnobMiniGame.vue\";\nimport OneKnobMiniGameServe from \"./Components/OneKnobMiniGameServe.vue\";\nimport FallBtnsMiniGame from \"./Components/FallBtnsMiniGame.vue\";\nimport FiguresListMiniGame from \"./Components/FiguresListMiniGame.vue\";\nimport ServerClickMiniGame from \"./Components/ServerClickMiniGame.vue\";\nexport default {\n  data() {\n    return {\n      gameType: 0\n    };\n  },\n  components: {\n    OneKnobMiniGame,\n    FallBtnsMiniGame,\n    FiguresListMiniGame,\n    ServerClickMiniGame,\n    OneKnobMiniGameServe\n  },\n  // methods: {\n  //   getImgPath(name) {\n  //     return require(`./Assets/${name}.png`);\n  //   },\n\n  //   checkFigure() {\n  //     clearInterval(this.figureListInterval);\n  //     this.isGameStop = true;\n  //     const leaveLength = (this.transform - 65) * -1;\n  //     const index = Math.floor(leaveLength / 13.6);\n  //     const selectFigure = this.figureList[index - 2];\n  //     if (\n  //       selectFigure.color === this.currentFigure.color &&\n  //       selectFigure.figure === this.currentFigure.figure\n  //     ) {\n  //       if (leaveLength % 13.6 >= 1 && leaveLength % 13.6 <= 5) {\n  //         console.log(true);\n  //         this.IsRight = true;\n  //       }\n  //     }\n  //     console.log(\n  //       this.figureList[index - 2],\n  //       leaveLength % 13.6,\n  //       this.currentFigure\n  //     );\n  //   },\n\n  //   setAnim() {\n  //     const listElem = document.getElementsByClassName(\n  //       \"TapTapMiniGame_figuresList-section\"\n  //     );\n  //     let lastTransform = this.transform;\n  //     const width = 13.6;\n  //     this.figureListInterval = setInterval(() => {\n  //       const countOfItemLive = Math.floor(\n  //         (lastTransform - this.transform) / width\n  //       );\n  //       console.log(Math.floor(((this.transform + 13.6 * 2) * -1) / 13.6));\n  //       listElem[0].style.transform = `translateX(${(this.transform -= 0.1)}rem)`;\n  //       if (countOfItemLive % 8) {\n  //         lastTransform = this.transform;\n  //         this.setRandomFigureList();\n  //       }\n  //     });\n  //   },\n  //   getFigureStyle(figure) {\n  //     const app = this;\n  //     const style = {\n  //       backgroundColor: app.colorBind[figure.color],\n  //       maskImage: `url(${app.getImgPath(figure.figure)})`,\n  //     };\n\n  //     return style;\n  //   },\n  //   setRandomFigureList() {\n  //     const colors = Object.keys(this.colorBind);\n  //     const figures = Object.keys(this.figureBind);\n  //     const lastLength = this.figureList.length;\n  //     for (let i = 0; i < 10; i++) {\n  //       const color = colors[Math.floor(Math.random() * 4)];\n  //       const figure = figures[Math.floor(Math.random() * 4)];\n  //       const figureItem = { color, figure };\n  //       this.figureList.push(figureItem);\n  //     }\n  //     const currentLength = this.figureList.length;\n  //     const index =\n  //       Math.floor(Math.random() * currentLength - lastLength) + lastLength;\n  //     this.figureList[index] = this.currentFigure;\n  //   },\n  //   setRandomPositionBtn() {\n  //     const btns = document.querySelectorAll(\".TapTapMiniGame-fall-btn\");\n  //     const positionList = [];\n  //     btns.forEach((btn) => {\n  //       let left;\n  //       do {\n  //         left = Math.random() * 100;\n  //       } while (this.chekDef(left, positionList));\n  //       positionList.push(left);\n  //       btn.style.left = left + \"%\";\n  //       btn.style.transform = `translateY(${Math.random() * 200}%)`;\n  //     });\n  //   },\n  //   chekDef(position, positionList) {\n  //     let result = false;\n  //     positionList.forEach((posit) => {\n  //       if (posit - 5 < position && posit + 5 > position) {\n  //         result = true;\n  //       }\n  //     });\n  //     return result;\n  //   },\n  //   generateRandomKeyCode() {\n  //     const minKeyCode = 65;\n  //     const maxKeyCode = 90;\n  //     return (\n  //       Math.floor(Math.random() * (maxKeyCode - minKeyCode + 1)) + minKeyCode\n  //     );\n  //   },\n  //   setBtnList() {\n  //     for (let i = 0; i <= 3; i++) {\n  //       let isApproved = false;\n  //       while (!isApproved) {\n  //         const rndmKey = this.generateRandomKeyCode();\n\n  //         if (!this.btnList.includes(rndmKey)) {\n  //           isApproved = true;\n  //           this.btnList.push(rndmKey);\n  //           console.log(rndmKey);\n  //         }\n  //       }\n  //     }\n  //   },\n  //   getCharFromKeyCode(keyCode) {\n  //     return String.fromCharCode(keyCode);\n  //   },\n  // },\n  mounted() {\n    this.gameType = +this.$route.params.gameType;\n    // this.setAnimation();\n    // const colors = Object.keys(this.colorBind);\n    // const figures = Object.keys(this.figureBind);\n    // const color = colors[Math.floor(Math.random() * 4)];\n    // const figure = figures[Math.floor(Math.random() * 4)];\n    // this.currentFigure = { color, figure };\n    // // this.setRandomFigureList();\n    // // this.setAnim();\n    // // this.setBtnList();\n    // // setTimeout(() => {\n    // //   this.setRandomPositionBtn();\n    // // });\n    // window.addEventListener(\"keydown\", (e) => {\n    //   if (e.keyCode === 69) {\n    //     this.checkFigure();\n    //     console.log(\"E\");\n    //   }\n    // });\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}