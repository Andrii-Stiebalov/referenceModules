{"ast":null,"code":"import Header from \"./Components/PlayerMenuHeader.vue\";\nimport Navigation from \"./Components/PlayerMenuNav.vue\";\nimport Loader from \"./Components/Loading.vue\";\nexport default {\n  data() {\n    return {\n      iframeUrl: \"\",\n      isShowIframePay: false,\n      isShowLoader: false\n    };\n  },\n  computed: {\n    isPreventCLose() {\n      return this.$store.getters[\"getIsPreventRouting\"];\n    }\n  },\n  components: {\n    Header,\n    Navigation,\n    Loader\n  },\n  watch: {\n    $route() {\n      this.iframeUrl = \"\";\n      this.isShowIframePay = false;\n    }\n  },\n  methods: {\n    setIsShowLoader(value) {\n      this.isShowLoader = value;\n    },\n    setSettingsData(data, property) {\n      const settingData = {\n        data,\n        property\n      };\n      this.$store.dispatch(\"playerMenu/SetSettingsData\", settingData);\n    },\n    setIframeModal(iframeUrl) {\n      this.isShowLoader = false;\n      if (!iframeUrl) {\n        this.isShowIframePay = false;\n        this.iframeUrl = \"\";\n        return;\n      }\n      this.iframeUrl = iframeUrl;\n      this.isShowIframePay = true;\n    },\n    keyup(e) {\n      console.log(window.isModalShow);\n      if (e.keyCode === 27 && !window.isModalShow) {\n        if (!this.isPreventCLose) {\n          this.$callClient(\"W:PlayerMenu:Close\");\n        }\n      }\n    }\n  },\n  mounted() {\n    this.$onClient(\"W:PlayerMenuSettings:SetData\", this.setSettingsData);\n    this.$callClient(\"W:PlayerMenuSettings:Ready\");\n    window.addEventListener(\"keyup\", this.keyup);\n  },\n  beforeUnmount() {\n    this.$offClient(\"W:PlayerMenuSettings:SetData\", this.setSettingsData);\n    window.removeEventListener(\"keyup\", this.keyup);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}