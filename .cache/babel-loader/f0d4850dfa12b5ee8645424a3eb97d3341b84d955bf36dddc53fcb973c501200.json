{"ast":null,"code":"import Modal from \"../../../../../Components/UniversalModal/UniversalModal.vue\";\nimport Range from \"../../../../../Components/CustomRange/CustomRange.vue\";\nexport default {\n  components: {\n    Modal,\n    Range\n  },\n  props: {\n    type: {\n      type: String,\n      required: true\n    },\n    parkingData: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      innerValue: 1\n    };\n  },\n  computed: {\n    getTitle() {\n      return this.type === \"buy\" ? this.$t(`Аренда парковочного места`) : this.$t(`Продление аренды парковочного места`);\n    },\n    getSubtitle() {\n      return this.type === \"buy\" ? this.$t(`Выберите время и способ оплаты <br> аренды парковочного места на парковке № <b> {id} </b>`).replace(\"{id}\", this.parkingData.id) : this.$t(`Выберите время и способ оплаты продления <br> аренды парковочного места на парковке № <b>{id}</b>. <br> Текущее оплаченное время: <b> {time} </b> ч.`).replace(\"{id}\", this.parkingData.id).replace(\"{time}\", this.parkingData.timeLeft);\n    },\n    currentPrice() {\n      return this.parkingData.hourPrice * this.innerValue;\n    }\n  },\n  methods: {\n    modalClose() {\n      this.$emit(\"modalClose\");\n    },\n    setInnerValue(value) {\n      this.innerValue = value;\n    },\n    buySpace(type) {\n      this.$RPC.call(\"Parking.PurchaseSpace\", this.type, type, this.innerValue).then(([sucsess]) => {\n        if (sucsess) this.modalClose();\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}