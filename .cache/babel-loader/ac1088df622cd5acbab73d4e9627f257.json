{"ast":null,"code":"import { mapGetters } from \"vuex\";\nimport api from \"./mixins/api.js\";\nimport IconMail1 from \"./assets/icons/mail-1.vue\";\nexport default {\n  components: {\n    IconMail1\n  },\n  mixins: [api],\n  data() {\n    return {\n      inputs: {\n        email: {\n          value: \"\",\n          focus: false,\n          valid: false,\n          handler: {\n            focus: () => {\n              this.inputs.email.focus = true;\n            },\n            blur: () => {\n              this.inputs.email.focus = false;\n            },\n            validate: e => {\n              let regExp = /^[\\w-.]{1,50}@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n              this.inputs.email.valid = regExp.test(e.target.value);\n              this.inputs.email.status.code = 1;\n              this.validateEmailTimeout && clearTimeout(this.validateEmailTimeout);\n              this.validateEmailTimeout = setTimeout(() => {\n                this.inputs.email.valid ? this.inputs.email.status.code = 3 : this.inputs.email.status.code = 2;\n              }, 1000);\n            }\n          },\n          status: {\n            code: 0\n          }\n        }\n      }\n    };\n  },\n  computed: {\n    ...mapGetters(\"authentication\", [\"getProfile\", \"getRecovery\"])\n  },\n  methods: {\n    recovery(e) {\n      e.preventDefault();\n      if (this.inputs.email.valid) {\n        this.$refs.buttonRecoverySubmit.disabled = true;\n        this.APIuserRecovery(this.inputs.email.value).then(data => {\n          if (data.status) {\n            this.getRecovery.status = true;\n            this.getRecovery.email = this.inputs.email.value;\n            this.$router.push(\"/authentication/recovery/confirm\");\n          } else {\n            this.$refs.buttonRecoverySubmit.disabled = false;\n            switch (data.code) {\n              case \"2.0\":\n                this.$Notification.create({\n                  type: \"error\",\n                  layout: \"compact-bottom__right\",\n                  theme: \"compact\",\n                  time: 5000,\n                  text: `\n                           <div class=\"notification-text__item\">\n                              <div class=\"notification-text__item-title\">\n                                 <span>${this.$t(\"Ошибка\")}</span>\n                              </div>\n                              <div class=\"notification-text__item-subtitle\">\n                                 <span>${this.$t(\"Пользователя с таким Email адресом не существует.\")}</span>\n                              </div>\n                           </div>\n                           <div class=\"notification-text__item\">\n                              <div class=\"notification-text__item-icon\">\n                                 <span class=\"icon-error\"></span>\n                              </div>\n                           </div>\n                        `,\n                  progressBar: false\n                });\n                break;\n              case \"2.1\":\n                this.$Notification.create({\n                  type: \"error\",\n                  layout: \"compact-bottom__right\",\n                  theme: \"compact\",\n                  time: 5000,\n                  text: `\n                           <div class=\"notification-text__item\">\n                              <div class=\"notification-text__item-title\">\n                                 <span>${this.$t(\"Ошибка\")}</span>\n                              </div>\n                              <div class=\"notification-text__item-subtitle\">\n                                 <span>${this.$t(\"Вы не указали Email адрес.\")}</span>\n                              </div>\n                           </div>\n                           <div class=\"notification-text__item\">\n                              <div class=\"notification-text__item-icon\">\n                                 <span class=\"icon-error\"></span>\n                              </div>\n                           </div>\n                        `,\n                  progressBar: false\n                });\n                break;\n              default:\n                this.$Notification.create({\n                  type: \"error\",\n                  layout: \"compact-bottom__right\",\n                  theme: \"compact\",\n                  time: 5000,\n                  text: `\n                           <div class=\"notification-text__item\">\n                              <div class=\"notification-text__item-title\">\n                                 <span>${this.$t(\"Ошибка\")}</span>\n                              </div>\n                              <div class=\"notification-text__item-subtitle\">\n                                 <span>${this.$t(\"Что-то пошло не так. Обратитесь к администрации.\")}</span>\n                              </div>\n                           </div>\n                           <div class=\"notification-text__item\">\n                              <div class=\"notification-text__item-icon\">\n                                 <span class=\"icon-error\"></span>\n                              </div>\n                           </div>\n                        `,\n                  progressBar: false\n                });\n                break;\n            }\n          }\n        }).catch(() => {\n          this.$refs.buttonRecoverySubmit.disabled = false;\n          this.$Notification.create({\n            type: \"error\",\n            layout: \"compact-bottom__right\",\n            theme: \"compact\",\n            time: 5000,\n            text: `\n                  <div class=\"notification-text__item\">\n                     <div class=\"notification-text__item-title\">\n                        <span>${this.$t(\"Ошибка\")}</span>\n                     </div>\n                     <div class=\"notification-text__item-subtitle\">\n                        <span>${this.$t(\"Время ожидание от сервера вышло, попробуйте позже.\")}</span>\n                     </div>\n                  </div>\n                  <div class=\"notification-text__item\">\n                     <div class=\"notification-text__item-icon\">\n                        <span class=\"icon-error\"></span>\n                     </div>\n                  </div>\n               `,\n            progressBar: false\n          });\n        });\n      } else {\n        this.$Notification.create({\n          type: \"error\",\n          layout: \"compact-bottom__right\",\n          theme: \"compact\",\n          time: 5000,\n          text: `\n            <div class=\"notification-text__item\">\n              <div class=\"notification-text__item-title\">\n                <span>${this.$t(\"Ошибка\")}</span>\n              </div>\n              <div class=\"notification-text__item-subtitle\">\n                <span>${this.$t(\"Вы ввели некорректный Email.\")}</span>\n              </div>\n            </div>\n            <div class=\"notification-text__item\">\n              <div class=\"notification-text__item-icon\">\n                <span class=\"icon-error\"></span>\n              </div>\n            </div>\n          `,\n          progressBar: false\n        });\n      }\n    },\n    returnBack(route) {\n      this.getRecovery.email = \"\";\n      this.$router.push(route);\n    }\n  },\n  beforeMount() {\n    if (this.getProfile.isLoggIn) {\n      return this.$router.push(\"/authentication/character\");\n    }\n    if (this.getRecovery.status) {\n      return this.$router.push(\"/authentication/recovery/confirm\");\n    }\n  },\n  mounted() {\n    if (this.getRecovery.email) {\n      this.inputs.email.value = this.getRecovery.email;\n      this.inputs.email.valid = true;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}