{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport IconSortBy from \"../Components/IconSortBy.vue\";\nimport Select from \"../Components/FamilySelectWrapper.vue\";\nexport default {\n  data() {\n    return {\n      sortType: \"data\",\n      sortOrder: \"dec\",\n      sortDataOrder: \"dec\",\n      selectType: \"Всі\"\n    };\n  },\n  components: {\n    IconSortBy,\n    Select\n  },\n  computed: {\n    filterActionList() {\n      if (!this.selectType || this.selectType === \"Всі\") {\n        return this.actionList;\n      }\n      return this.actionList.filter(action => action.TypeAction === this.selectType.Id);\n    },\n    actionList() {\n      return this.$store.getters[\"family/getFamilyLogDataActionList\"];\n    },\n    actionTypeList() {\n      return this.$store.getters[\"family/getFamilyLogDataActionTypeList\"];\n    },\n    playerList() {\n      return this.$store.getters[\"family/getPlayerList\"];\n    },\n    actionTypeNameList() {\n      if (!this.actionTypeList) {\n        return [];\n      }\n      const actionTypeList = this.actionTypeList.map(action => action.Name);\n      actionTypeList.push(\"Всі\");\n      return actionTypeList;\n    },\n    sortedActionList() {\n      if (!this.sortType || !this.actionList) {\n        return this.filterActionList;\n      }\n      const getDataFormat = data => {\n        const [day, month, year, hour, minute] = data.split(\"/\");\n        return new Date(`20${year}`, month - 1, day, hour, minute);\n      };\n      const sortOrder = this.sortOrder;\n      const sortDataOrder = this.sortDataOrder;\n      const sortingMethods = {\n        name(arr) {\n          return arr.slice().sort((a, b) => (sortOrder === \"arc\" ? a.PlayerName.localeCompare(b.PlayerName) : b.PlayerName.localeCompare(a.PlayerName)) || (sortDataOrder === \"arc\" ? getDataFormat(a.DataAction) - getDataFormat(b.DataAction) : getDataFormat(b.DataAction) - getDataFormat(a.DataAction)));\n        },\n        data(arr) {\n          return arr.slice().sort((a, b) => sortDataOrder === \"arc\" ? getDataFormat(a.DataAction) - getDataFormat(b.DataAction) : getDataFormat(b.DataAction) - getDataFormat(a.DataAction));\n        },\n        online(arr) {\n          return arr.slice().sort((a, b) => sortOrder === \"arc\" ? b.OnlineTime.Week - a.OnlineTime.Week : a.OnlineTime.Week - b.OnlineTime.Week);\n        }\n      };\n      return sortingMethods[this.sortType](this.filterActionList);\n    }\n  },\n  watch: {\n    getFamilyLogData(vaL) {\n      this.actionList = vaL.actionList;\n      this.actionTypeList = vaL.actionTypeList;\n    }\n  },\n  methods: {\n    setSortType(sortType) {\n      if (this.sortType === sortType) {\n        if (this.sortOrder === \"dec\") {\n          this.sortType = \"data\";\n          return;\n        }\n        this.sortOrder = \"dec\";\n        return;\n      }\n      this.sortType = sortType;\n      this.sortOrder = \"arc\";\n    },\n    setSortOrderData() {\n      if (this.sortDataOrder === \"dec\") {\n        this.sortDataOrder = \"arc\";\n      } else {\n        this.sortDataOrder = \"dec\";\n      }\n    },\n    setSelected(val) {\n      if (val === \"Всі\") {\n        this.selectType = val;\n        return this.actionList;\n      }\n      this.selectType = this.actionTypeList.find(action => action.Name === val);\n    },\n    getIsOnline(UID) {\n      const player = this.playerList.find(player => player.Id === UID);\n      if (!player) {\n        return \"notFound\";\n      }\n      return player.IsOnline;\n    },\n    getActionTypeName(actionId) {\n      return this.actionTypeList.find(action => action.Id === actionId)?.Name || actionId;\n    },\n    convertDateTime(datetimeStr, type) {\n      var parts = datetimeStr.split(\"/\");\n      var datePart = type === \"date\" ? parts[0] + \".\" + parts[1] + \".\" + parts[2] : parts[3] + \":\" + parts[4];\n      return datePart;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}