{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, TransitionGroup as _TransitionGroup, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"KillLog\"\n};\nconst _hoisted_2 = {\n  class: \"KillLog-item-img\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CdnResolverImage = _resolveComponent(\"CdnResolverImage\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_TransitionGroup, {\n    name: \"showKillLog\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.killLogList, item => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"KillLog-item\",\n        key: item.id\n      }, [item.Killer.Name ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        style: _normalizeStyle({\n          color: item.Killer.Color\n        })\n      }, _toDisplayString(item.Killer.Name), 5)) : (_openBlock(), _createElementBlock(\"div\", {\n        key: 1,\n        style: _normalizeStyle({\n          color: item.Dead.Color\n        })\n      }, _toDisplayString(item.Dead.Name), 5)), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_CdnResolverImage, {\n        path: `cdn/inventory/other/${item.Weapon}.png`,\n        secondPath: `cdn/inventory/other/scull.svg`\n      }, null, 8, [\"path\"])]), item.Killer.Name ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 2,\n        style: _normalizeStyle({\n          color: item.Dead.Color\n        })\n      }, _toDisplayString(item.Dead.Name), 5)) : _createCommentVNode(\"\", true)]);\n    }), 128))]),\n    _: 1\n  })]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}