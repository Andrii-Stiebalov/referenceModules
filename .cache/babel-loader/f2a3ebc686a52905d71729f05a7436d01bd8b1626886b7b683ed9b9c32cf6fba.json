{"ast":null,"code":"import Members from \"../../../components/controls/organization/members/Members.js\";\nimport throttle from \"../../../functions/throttle.js\";\nexport default {\n  components: {\n    Members\n  },\n  data: {\n    membersCount: 0,\n    membersPage: 1,\n    membersPagesCount: 1,\n    members: [],\n    editableMember: {}\n  },\n  methods: {\n    openMembers(members, membersCount, membersPagesCount) {\n      this.membersPage = 1;\n      this.members = members;\n      this.membersCount = membersCount;\n      this.membersPagesCount = membersPagesCount;\n      this.setRoute(\"members\");\n    },\n    updateMember(newMember) {\n      let index = newMember && newMember.id !== undefined && this.members && this.members.find(x => x.id === newMember.id) && this.members.indexOf(this.members.find(x => x.id === newMember.id));\n      if (index !== undefined) this.members.splice(index, 1, newMember);\n    },\n    openMemberEditor(editableMember, shortRanks) {\n      this.editableMember = editableMember;\n      this.shortRanks = shortRanks;\n      this.setRoute(\"members/edit\");\n    },\n    uninviteMember(memberID) {\n      mp.trigger(\"Controls:DeleteMember\", memberID);\n    }\n  },\n  mounted() {\n    this.$eb.$on(\"src/components/controls/organization/members/default/MembersRow->src/mixins/controls/organization/Members:MembersUninvite\", throttle(2000, memberID => {\n      let memberName = this.members.find(x => x.id === memberID) !== undefined ? this.members.find(x => x.id === memberID).name : ``;\n      let modalOptions = {\n        title: `Исключение из фракции`,\n        subtitle2: this.$GetText(`Вы уверены, что хотите исключить`) + ` <br> <b>${memberName}</b> ` + this.$GetText(`из`) + ` ${window.organizationType === \"family\" ? this.$GetText(\"семьи\") : this.$GetText(\"организации\")}?`,\n        buttons: [{\n          content: \"Подтвердить\",\n          emit: \"src/components/global/UniversalModal:ModalOpen->src/mixins/controls/organization/Members:Confirmation\"\n        }],\n        props: [memberID]\n      };\n      this.$eb.$emit(\"...->src/components/controls/organization/Modal:ModalOpen\", \"confirmation\", modalOptions);\n    }));\n    this.$eb.$on(\"src/components/controls/organization/members/default/MembersRow->src/mixins/controls/organization/Members:MembersSetRank\", throttle(1000, (type, memberID) => {\n      mp.trigger(\"Controls:SetMemberRank\", type, memberID);\n    }));\n    this.$eb.$on(\"src/components/controls/organization/members/edit/MembersEdit->src/mixins/controls/organization/Members:MembersSetRank\", throttle(1000, (type, memberID) => {\n      mp.trigger(\"Controls:SetMemberRank\", type, memberID);\n    }));\n    this.$eb.$on(\"src/components/controls/organization/members/default/MembersDefault->src/mixins/controls/organization/Members:MembersSetPage\", (page, type) => {\n      mp.trigger(\"Controls:SetMembersPage\", page, type);\n      console.log(page, type);\n    });\n    this.$eb.$on(\"src/components/controls/organization/members/default/MembersRow->src/mixins/controls/organization/Members:MembersEditMemberRank\", memberID => {\n      mp.trigger(\"Controls:EditMemberRank\", memberID);\n    });\n    this.$eb.$on(\"src/components/controls/organization/members/edit/MembersEdit->src/mixins/controls/organization/Members:MembersGetBack\", () => {\n      this.setRoute(\"members\");\n    });\n    this.$eb.$on(\"src/components/global/UniversalModal:ModalOpen->src/mixins/controls/organization/Members:Confirmation\", props => {\n      this.uninviteMember(...props);\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}