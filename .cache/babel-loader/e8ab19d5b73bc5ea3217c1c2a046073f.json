{"ast":null,"code":"import FamilyHeader from \"./Components/Navigaton/FamilyHeader.vue\";\nimport FamilyFooter from \"./Components/Navigaton/FamilyFooter.vue\";\nimport FamilyTitleSection from \"./Components/FamalyTitleSection.vue\";\nimport FamilyProgress from \"./Components/FamilyProgress.vue\";\nimport MapBW from \"../../../Components/MapBW.vue\";\n// import family from \"./Assets/family.json\";\nimport { drawFamilyPolygons } from \"../../../Plugins/Map.js\";\nexport default {\n  data() {\n    return {\n      isActive: false,\n      pageWithDecor: [\"/family/main\", \"/family/contracts\"]\n    };\n  },\n  components: {\n    MapBW,\n    FamilyHeader,\n    FamilyFooter,\n    FamilyProgress,\n    FamilyTitleSection\n  },\n  computed: {\n    playerList() {\n      return this.$store.getters[\"family/getFamilyList\"];\n    },\n    isMapRoute() {\n      return this.$route.path === \"/family/territory\";\n    },\n    getTransition() {\n      if (this.isMapRoute) {\n        return \"\";\n      }\n      if (this.isCarsRoute) {\n        return \"carPageTransition\";\n      }\n      return \"familyPageTransition\";\n    },\n    isCarsRoute() {\n      return this.$route.path.toLowerCase() === \"/family/managetransports\";\n    },\n    playerPermissions() {\n      return this.$store.getters[\"family/getPlayerPermissions\"];\n    },\n    familyName() {\n      return this.$store.getters[\"family/getFamilyName\"];\n    },\n    territoriesData() {\n      return this.$store.getters[\"family/getTerritoriesData\"];\n    },\n    territoriesStatusData() {\n      return this.$store.getters[\"family/getTerritoriesStatus\"];\n    },\n    map() {\n      return this.$store.getters[\"getMap\"];\n    },\n    isSpecialPage() {\n      return this.$route.path === \"/family/manageTransports\" || this.$route.path === \"/family/territory\";\n    }\n  },\n  watch: {\n    map() {\n      drawFamilyPolygons(this.territoriesData, this.familyName, this.map, this.territoriesStatusData);\n    },\n    territoriesStatusData() {\n      if (this.map) {\n        drawFamilyPolygons(this.territoriesData, this.familyName, this.map, this.territoriesStatusData);\n      }\n    },\n    isMapRoute(val) {\n      this.$store.dispatch(\"setIsShowMap\", val);\n    }\n  },\n  methods: {\n    setData(data) {\n      this.$store.dispatch(\"family/setData\", data);\n    },\n    keydown(e) {\n      if (e.keyCode === 27 && !window.isModalShow) {\n        this.$callClient(\"C:Family:Tablet:Close\");\n      }\n    },\n    bindClose() {\n      window.addEventListener(\"keyup\", this.keydown);\n    },\n    setMapObj(map) {\n      this.map = map;\n    }\n  },\n  beforeUnmount() {\n    this.$offClient(\"setFamilyData\");\n    window.removeEventListener(\"keyup\", this.keydown);\n  },\n  created() {\n    // this.setData(family);\n  },\n  mounted() {\n    this.bindClose();\n    drawFamilyPolygons(this.territoriesData, this.familyName, this.map, this.territoriesStatusData);\n    if (this.territoriesStatusData) {\n      drawFamilyPolygons(this.territoriesData, this.familyName, this.map, this.territoriesStatusData);\n    }\n    const familyMapStatus = [{\n      UID: 1,\n      familyName: \"-\",\n      Status: 0\n    }, {\n      UID: 2,\n      familyName: \"-\",\n      Status: 0\n    }, {\n      UID: 3,\n      familyName: \"-\",\n      Status: 0\n    }, {\n      UID: 4,\n      familyName: \"-\",\n      Status: 0\n    }, {\n      UID: 5,\n      familyName: \"-\",\n      Status: 0\n    }, {\n      UID: 6,\n      familyName: \"-\",\n      Status: 0\n    }, {\n      UID: 7,\n      familyName: \"-\",\n      Status: 0\n    }, {\n      UID: 8,\n      familyName: \"-\",\n      Status: 0\n    }, {\n      UID: 9,\n      familyName: \"-\",\n      Status: 0\n    }, {\n      UID: 10,\n      familyName: \"-\",\n      Status: 0\n    }, {\n      UID: 11,\n      familyName: \"-\",\n      Status: 0\n    }, {\n      UID: 12,\n      familyName: \"-\",\n      Status: 0\n    }, {\n      UID: 13,\n      familyName: \"-\",\n      Status: 0\n    }];\n    this.$onClient(\"setFamilyData\", this.setData);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}