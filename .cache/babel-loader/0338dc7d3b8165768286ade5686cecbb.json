{"ast":null,"code":"// Icons\nimport favorite from \"./Assets/Icons/favorite.vue\";\nimport stock from \"./Assets/Icons/stock.vue\";\nimport create from \"./Assets/Icons/create.vue\";\nimport gps from \"./Assets/Icons/gps.vue\";\nimport complaint from \"./Assets/Icons/complaint.vue\";\nimport bell from \"./Assets/Icons/bell.vue\";\nexport default {\n  name: \"SpecialBtn\",\n  props: {\n    itemCardId: {\n      type: Number,\n      required: false\n    },\n    title: {\n      type: String,\n      required: false,\n      default: \"\"\n    },\n    icon: {\n      type: String,\n      required: true\n    },\n    color: {\n      type: String,\n      required: true\n    },\n    position: {\n      type: String,\n      required: true\n    },\n    isStatic: {\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n  components: {\n    // Icons\n    favorite,\n    stock,\n    create,\n    gps,\n    complaint,\n    bell\n  },\n  methods: {\n    handleButtonClick() {\n      if (this.icon === \"favorite\" && this.itemCardId !== undefined) {\n        if (this.getIsFavoriteStatus) {\n          this.$callClient(\"C:MarketPlace:Favorite:Delete\", this.itemCardId);\n          this.$store.commit(\"marketPlace/favoriteDelete\", this.itemCardId);\n        } else {\n          this.$callClient(\"C:MarketPlace:Favorite:Add\", this.itemCardId);\n          this.$store.commit(\"marketPlace/favoriteAdd\", this.itemCardId);\n        }\n      } else if (this.icon === \"complaint\" && !this.getSelectedItem.data?.isComplained) {\n        this.$store.commit(\"marketPlace/openModal\", [{\n          id: this.getSelectedItem.id\n        }, \"complainAdd\"]);\n      }\n    }\n  },\n  computed: {\n    getMainColor() {\n      const rgbColors = {\n        red: \"247 0 50\",\n        green: \"64 191 106\",\n        blue: \"0 255 255\"\n      };\n      return rgbColors[this.color];\n    },\n    getIsFavoriteStatus() {\n      if (this.icon === \"favorite\" && this.itemCardId) {\n        const favoritesId = this.$store.getters[\"marketPlace/getFavoritesIdList\"];\n        return favoritesId.includes(this.itemCardId);\n      } else {\n        return false;\n      }\n    },\n    getSelectedItem() {\n      return this.$store.getters[\"marketPlace/getSelectedItem\"];\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}