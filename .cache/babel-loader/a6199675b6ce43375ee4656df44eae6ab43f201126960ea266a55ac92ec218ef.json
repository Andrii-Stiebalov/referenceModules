{"ast":null,"code":"import HexogoneBgProgressBar from \"./icons/HexogoneProgressBar.vue\";\nimport WorkbenchCraftPrev from \"./WorkbenchCraftPrev.vue\";\nimport WorkbenchRecipe from \"./WorkbenchRecipe.vue\";\nimport WorkbenchActionSection from \"./WorkbenchActionSection.vue\";\nimport WorkbenchChence from \"./WorkbenchChence.vue\";\nimport FiguresListMiniGame from \"./FiguresListMiniGame.vue\";\nexport default {\n  data() {\n    return {\n      isShowMiniGame: false,\n      navList: [{\n        id: 5,\n        icon: \"\"\n      }],\n      count: 1\n    };\n  },\n  watch: {\n    count(count) {\n      if (count > this.selectedRecipe.MaxCraftCount) {\n        this.count = this.selectedRecipe.MaxCraftCount;\n      }\n    },\n    Progress(val) {\n      if (val >= 100) {\n        this.isShowMiniGame = false;\n      }\n    }\n  },\n  computed: {\n    inventoryMap() {\n      const itemsList = Object.values(this.inventory);\n      const inventoryMap = {};\n      itemsList.forEach(item => {\n        if (inventoryMap[item.Type]) {\n          inventoryMap[item.Type] += item.Count;\n        } else {\n          inventoryMap[item.Type] = item.Count;\n        }\n      });\n      return inventoryMap;\n    },\n    isHaveEnoughItemsAll() {\n      if (!this.selectedRecipe.Recipe) {\n        return true;\n      }\n      return this.selectedRecipe.Recipe.every(item => this.isHaveEnoughItems(item.Type, item.Count * this.count));\n    }\n  },\n  methods: {\n    isHaveEnoughItems(itemType, targetCount) {\n      return this.inventoryMap[itemType] >= targetCount;\n    },\n    setCount(value) {\n      this.count = value;\n    },\n    onClickBtn() {\n      if (this.CurrentItem && this.Progress >= 100) {\n        this.$callClient(\"C:CraftTable:TakeItem\");\n        return;\n      }\n      if (this.CurrentItem) {\n        return;\n      }\n      if (this.isHaveEnoughItemsAll) {\n        const audio = new Audio(require(\"../Assets/startCraft.mp3\"));\n        audio.play();\n        this.$callClient(\"C:CraftTable:StartCraft\", this.selectedRecipe.ItemId, this.count);\n      }\n    }\n  },\n  props: {\n    selectedRecipe: Object,\n    CurrentItem: Object,\n    ChanceBoost: Number,\n    inventory: Object,\n    Progress: Number,\n    Count: Number\n  },\n  components: {\n    WorkbenchActionSection,\n    HexogoneBgProgressBar,\n    WorkbenchCraftPrev,\n    WorkbenchRecipe,\n    WorkbenchChence,\n    FiguresListMiniGame\n  },\n  mounted() {\n    console.log(this.inventoryMap);\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}