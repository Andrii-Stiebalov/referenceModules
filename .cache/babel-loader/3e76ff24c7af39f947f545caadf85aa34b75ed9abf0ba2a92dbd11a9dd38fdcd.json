{"ast":null,"code":"import { mapState, mapGetters } from \"vuex\";\nimport OtherPlayerCard from \"./OtherPlayerCard\";\nexport default {\n  name: \"OtherPlayer\",\n  components: {\n    OtherPlayerCard\n  },\n  props: [\"player\"],\n  data() {\n    return {\n      timerOtherPlayer: null,\n      currentTime: null,\n      scaleIconProcent: null,\n      testValue: false\n    };\n  },\n  computed: {\n    ...mapState(\"poker\", [\"activePlayer\", \"currentMoveTime\", \"ratesDone\", \"winCount\"]),\n    calcCircumference: function () {\n      let number = 2 * Math.PI * 48;\n      return number;\n    },\n    circleValue: function () {\n      const maxCircleValue = 0;\n      if (this.currentMoveTime <= 0 || this.currentTime <= 0) return maxCircleValue;\n      return 100 - this.currentTime / this.currentMoveTime * 100;\n    }\n  },\n  methods: {\n    startTimer() {\n      this.currentTime = this.currentMoveTime;\n      this.timerOtherPlayer = setInterval(() => {\n        this.currentTime -= 0.1;\n      }, 100);\n    },\n    stopTimer() {\n      clearInterval(this.timerOtherPlayer);\n      this.timerOtherPlayer = null;\n    },\n    setScaleIconProcent() {\n      const fontSize = getComputedStyle(document.documentElement).fontSize;\n      const size = fontSize.slice(0, -2);\n      this.scaleIconProcent = +size / 10;\n    }\n  },\n  watch: {\n    currentTime(val) {\n      if (val <= 0 && this.timerOtherPlayer != null) {\n        this.stopTimer();\n      }\n    },\n    currentMoveTime(val) {\n      if (val === 60) {\n        if (this.timerOtherPlayer === null) this.startTimer();else this.currentTime = this.currentMoveTime;\n      } else if (val <= 0 && this.timerOtherPlayer != null) {\n        this.stopTimer();\n      }\n    }\n  },\n  mounted() {\n    if (this.currentMoveTime === 60) {\n      this.startTimer();\n    }\n    this.setScaleIconProcent();\n  },\n  unmounted() {\n    this.stopTimer();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}