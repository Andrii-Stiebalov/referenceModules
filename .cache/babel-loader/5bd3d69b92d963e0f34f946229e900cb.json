{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, vModelText as _vModelText, withDirectives as _withDirectives, withCtx as _withCtx, createBlock as _createBlock, Teleport as _Teleport } from \"vue\";\nconst _hoisted_1 = {\n  class: \"arena-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"arena-main\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"arena-main__wrapper solid\"\n};\nconst _hoisted_4 = {\n  class: \"arena-main__scroll\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 1,\n  class: \"arena-main__wrapper double\"\n};\nconst _hoisted_7 = {\n  class: \"arena-main__wrapper-title\"\n};\nconst _hoisted_8 = {\n  class: \"arena-main__scroll\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  class: \"arena-additional additional\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\" Esc\");\nconst _hoisted_12 = {\n  class: \"arena-additional__main\"\n};\nconst _hoisted_13 = {\n  class: \"arena-additional__main-description\"\n};\nconst _hoisted_14 = {\n  class: \"arena-additional__main-list\"\n};\nconst _hoisted_15 = {\n  class: \"arena-string\"\n};\nconst _hoisted_16 = {\n  class: \"arena-string\"\n};\nconst _hoisted_17 = {\n  class: \"arena-string\"\n};\nconst _hoisted_18 = {\n  class: \"arena-string\"\n};\nconst _hoisted_19 = {\n  key: 0,\n  class: \"arena-string\"\n};\nconst _hoisted_20 = {\n  key: 1,\n  class: \"arena-string\"\n};\nconst _hoisted_21 = {\n  key: 2,\n  class: \"arena-string\"\n};\nconst _hoisted_22 = {\n  key: 0,\n  class: \"arena-additional__buttons\"\n};\nconst _hoisted_23 = [\"placeholder\"];\nconst _hoisted_24 = {\n  class: \"universalModal-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Cross = _resolveComponent(\"Cross\");\n  const _component_Modal = _resolveComponent(\"Modal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, [_createTextVNode(_toDisplayString(_ctx.$t(\"Игроки в лобби\")), 1), _createElementVNode(\"span\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.addPlayer && $options.addPlayer(...args))\n  }, _toDisplayString(_ctx.$t(\"Пригласить игрока по ID\")), 1)]), !$options.currentRoom.players.some(y => Array.isArray(y)) == 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.currentRoom.players, player => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"arena-player exists\",\n      key: player\n    }, [_createElementVNode(\"p\", null, _toDisplayString(player), 1), $options.isOwner && player != $options.currentRoom.creator.name ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"arena-player__image\",\n      onClick: $event => $options.removePlayer(player)\n    }, [_createVNode(_component_Cross)], 8, _hoisted_5)) : _createCommentVNode(\"\", true)]);\n  }), 128))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"Команда атаки\")), 1), _createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"Команда защиты\")), 1)]), _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.currentRoom.players, (team, idx) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"arena-main__wrapper-team\",\n      key: idx\n    }, [!team.some(pl => pl == $options.player.name) ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"arena-player ghost\",\n      onClick: _cache[1] || (_cache[1] = (...args) => $options.changeTeam && $options.changeTeam(...args))\n    }, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"Занять свободное место\")), 1)])) : _createCommentVNode(\"\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(team, player => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"arena-player exists\",\n        key: player\n      }, [_createElementVNode(\"p\", null, _toDisplayString(player), 1), $options.isOwner && player != $options.currentRoom.creator.name ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: \"arena-player__image\",\n        onClick: $event => $options.removePlayer(player)\n      }, [_createVNode(_component_Cross)], 8, _hoisted_9)) : _createCommentVNode(\"\", true)]);\n    }), 128))]);\n  }), 128))])]))]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"p\", null, [_hoisted_11, _createElementVNode(\"span\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.onBack && $options.onBack(...args))\n  }, _toDisplayString(_ctx.$t(\"Назад\")), 1)]), _createElementVNode(\"div\", {\n    class: \"arena-additional__wrapper\",\n    style: _normalizeStyle({\n      background: `linear-gradient(rgba(19, 26, 27, 0.94), rgba(19, 26, 27, 0.94)), center / cover url('./img/Arena/${$options.activeMode.mapName}.png') no-repeat`\n    })\n  }, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t($options.getGameName($options.activeMode.gameType))), 1), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"Описание режима\")), 1), _createElementVNode(\"p\", null, _toDisplayString(_ctx.$t($options.getGameDescription($options.activeMode.gameType))), 1)]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"p\", _hoisted_15, [_createTextVNode(_toDisplayString(_ctx.$t(\"Создатель лобби\")), 1), _createElementVNode(\"span\", null, _toDisplayString($options.currentRoom.creator.name), 1)]), _createElementVNode(\"p\", _hoisted_16, [_createTextVNode(_toDisplayString(_ctx.$t(\"Количество игроков\")), 1), _createElementVNode(\"span\", null, _toDisplayString($options.activeMode.minPlayers) + \"-\" + _toDisplayString($options.activeMode.maxPlayers), 1)]), _createElementVNode(\"p\", _hoisted_17, [_createTextVNode(_toDisplayString(_ctx.$t(\"Количество команд\")), 1), _createElementVNode(\"span\", null, _toDisplayString($options.activeMode.command), 1)]), _createElementVNode(\"p\", _hoisted_18, [_createTextVNode(_toDisplayString(_ctx.$t(\"Общий банк\")), 1), _createElementVNode(\"span\", null, _toDisplayString($options.currentRoom.bank.toLocaleString(\"de-DE\")) + \"$\", 1)]), $options.currentRoom.NameOfMap ? (_openBlock(), _createElementBlock(\"p\", _hoisted_19, [_createTextVNode(_toDisplayString(_ctx.$t(\"Локация\")), 1), _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t($options.getMapName($options.currentRoom.NameOfMap))), 1)])) : _createCommentVNode(\"\", true), $options.currentRoom.weapon && $options.activeMode.gameType.includes('race') == false ? (_openBlock(), _createElementBlock(\"p\", _hoisted_20, [_createTextVNode(_toDisplayString(_ctx.$t(\"Оружие\")), 1), _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t($options.getWeaponName($options.currentRoom.weapon))), 1)])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_21, [_createTextVNode(_toDisplayString(_ctx.$t(\"Транспорт\")), 1), _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t($options.getWeaponName($options.currentRoom.weapon))), 1)]))])]), $options.isOwner ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [_createElementVNode(\"div\", {\n    class: \"arena-button white\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.deleteGame && $options.deleteGame(...args))\n  }, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"Удалить\\n лобби\")), 1)]), _createElementVNode(\"div\", {\n    class: \"arena-button blue\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.startGame && $options.startGame(...args))\n  }, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"Начать игру\")), 1)])])) : _createCommentVNode(\"\", true)], 4)]), (_openBlock(), _createBlock(_Teleport, {\n    to: \"#app\"\n  }, [$data.isModalOpened ? (_openBlock(), _createBlock(_component_Modal, {\n    key: 0,\n    title: _ctx.$t('Пригласить игрока'),\n    subtitle: _ctx.$t('Введите ID игрока которого хотите пригласить в\\n данное лобби'),\n    onClose: $options.onModalClose\n  }, {\n    default: _withCtx(() => [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.playerName = $event),\n      placeholder: _ctx.$t('ID игрока')\n    }, null, 8, _hoisted_23), [[_vModelText, $data.playerName]]), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"button\", {\n      tabindex: \"-1\",\n      class: \"universalModal-buttons__items\",\n      onClick: _cache[6] || (_cache[6] = (...args) => $options.onPlayerAdding && $options.onPlayerAdding(...args))\n    }, _toDisplayString(_ctx.$t(\"Подтвердить\")), 1), _createElementVNode(\"button\", {\n      tabindex: \"-1\",\n      class: \"universalModal-buttons__items\",\n      onClick: _cache[7] || (_cache[7] = (...args) => $options.onModalClose && $options.onModalClose(...args))\n    }, _toDisplayString(_ctx.$t(\"Отменить\")), 1)])]),\n    _: 1\n  }, 8, [\"title\", \"subtitle\", \"onClose\"])) : _createCommentVNode(\"\", true)]))]);\n}","map":null,"metadata":{},"sourceType":"module"}