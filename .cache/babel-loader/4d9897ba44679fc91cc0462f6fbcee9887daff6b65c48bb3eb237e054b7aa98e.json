{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getIsImgFull, formatNumber, getItemCardImgPath } from \"@/Application/Pages/MarketPlace/Assets/functions\";\nimport images from \"./Assets/Icons/images.vue\";\nimport upload from \"./Assets/Icons/upload.vue\";\nimport MPInput from \"../../../MP-Input/MP-Input.vue\";\nimport ActionBtn from \"../../../MP-ActionBtn/MP-ActionBtn.vue\";\nimport UserImg from \"./Components/userImg/userImg.vue\";\nimport CdnResolverImage from \"@/Components/CdnResolverImage.vue\";\nexport default {\n  props: {},\n  components: {\n    UserImg,\n    images,\n    upload,\n    MPInput,\n    ActionBtn,\n    CdnResolverImage\n  },\n  data() {\n    return {\n      userImgs: [],\n      playerCover: null,\n      inputName: null,\n      inputComment: null,\n      inputPrice: null,\n      selectedRentType: null,\n      rentTypes: [{\n        title: \"Погодинний\",\n        value: \"hours\"\n      }, {\n        title: \"Подобовий\",\n        value: \"days\"\n      }]\n    };\n  },\n  mounted() {\n    this.selectedRentType = this.rentTypes[0].value;\n    if (this.isEditListing) {\n      this.inputName = this.getSelectedItem.name;\n      this.inputComment = this.getSelectedItem?.data?.comment;\n      this.setImgsForEdit();\n    }\n  },\n  methods: {\n    convertImageToType(jpgUrl, type, callback) {\n      const img = new Image();\n      img.onload = function () {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n\n        // Convert the image to PNG format\n        let pngDataUrl = canvas.toDataURL(`image/${type}`, 1);\n\n        // Pass the converted PNG URL to the callback function\n        callback(pngDataUrl);\n      };\n      img.src = jpgUrl;\n    },\n    uploadImg(e, type) {\n      let file = e.target.files[0];\n      const size = Number((file.size / 1_048_576).toFixed(2) - 0.01);\n      if (size > 5) {\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = evt => {\n        this.convertImageToType(evt.target.result, \"png\", result => {\n          if (type === \"extra\") {\n            this.userImgs.push(result);\n          } else if (type === \"cover\") {\n            this.playerCover = result;\n          }\n        });\n      };\n      reader.readAsDataURL(file);\n    },\n    setPrice(value) {\n      this.inputPrice = value;\n    },\n    isImgFull() {\n      return getIsImgFull(this.getSelectedItem.objectType);\n    },\n    getItemCardImgPath() {\n      return getItemCardImgPath(this.getSelectedItem);\n    },\n    deleteUserImg(index) {\n      this.userImgs = Array.from(this.userImgs).filter((_, i) => i !== index);\n    },\n    setValue(input, value) {\n      if (input === \"inputName\") this.inputName = value;else if (input === \"inputPrice\") this.inputPrice = value;else if (input === \"inputComment\") this.inputComment = value;else return;\n    },\n    formatNumber(num) {\n      return formatNumber(num, \" \");\n    },\n    selectRentType(value) {\n      this.selectedRentType = value;\n    },\n    uploadListing() {\n      if (this.isCanUploadListing) {\n        const extraImgs = [...this.userImgs];\n        const extraImgsId = [];\n        if (this.playerCover) {\n          extraImgs.unshift(this.playerCover);\n          extraImgsId.unshift(1);\n        }\n        for (let i = 2; i < this.userImgs.length + 2; i++) {\n          extraImgsId.push(i);\n        }\n        if (this.isEditListing) {\n          this.$callClient(\"C:MarketPLace:Listing:Edit\", this.inputName, this.inputComment, this.inputPrice || this.getSelectedItem.price, this.getSelectedItem.id, extraImgsId);\n          this.$store.commit(\"marketPlace/setExtraImgs\", extraImgs);\n        } else {\n          const sellItem = JSON.parse(JSON.stringify(this.getSelectedItem));\n          sellItem.price = this.inputPrice;\n          sellItem.data.comment = this.inputComment;\n          sellItem.extraImgs = extraImgs;\n          sellItem.extraImgsId = extraImgsId;\n          delete sellItem.action;\n          if (this.isShowNameInput) {\n            sellItem.name = this.inputName;\n          }\n          if (this.selectedRentType) {\n            sellItem.data.rentType = this.selectedRentType;\n          }\n          this.$store.commit(\"marketPlace/openModal\", [sellItem, \"listingCreate\"]);\n        }\n      }\n    },\n    setImgsForEdit() {\n      const extraImgs = this.getSelectedItem?.extraImgs;\n      if (extraImgs) {\n        if (extraImgs.includes(1)) {\n          this.playerCover = `https://cdn.nexus-rp.net/MarketPlaceServer/public/images/${this.getSelectedItem.id}_${1}.png`;\n        }\n        const imgs = [];\n        extraImgs.filter(img => img !== 1).forEach(img => {\n          imgs.push(`https://cdn.nexus-rp.net/MarketPlaceServer/public/images/${this.getSelectedItem.id}_${img}.png`);\n        });\n        this.userImgs = imgs;\n      }\n    }\n  },\n  computed: {\n    getUploadHint() {\n      return \"Натисніть в область, <br />щоб завантажити обкладинку\";\n    },\n    isShowNameInput() {\n      return this.getSelectedItem.objectType === \"service\";\n    },\n    getSelectedRentTypeTitle() {\n      return this.selectedRentType === \"days\" ? \"1 день\" : \"1 годину\";\n    },\n    getSelectedItem() {\n      return this.$store.getters[\"marketPlace/getSelectedItem\"];\n    },\n    getModalType() {\n      if (this.$route.path.includes(\"transportRent\")) {\n        return \"transportRent\";\n      } else {\n        return \"listingCreate\";\n      }\n    },\n    isEditListing() {\n      return this.$route.params.type === \"edit\";\n    },\n    getUploadButtonTitle() {\n      if (this.isEditListing) return \"Зберегти оголошення\";else return \"Розмістити оголошення\";\n    },\n    getListingMaxPostingPrice() {\n      return this.$store.getters[\"marketPlace/getListingMaxPostingPrice\"];\n    },\n    isCanUploadListing() {\n      const price = this.isEditListing ? this.getSelectedItem.price : this.inputPrice;\n      if (this.$route.params.type === \"transportRent\") {\n        if (0 < price && price <= this.getListingMaxPostingPrice) {\n          return true;\n        } else {\n          return false;\n        }\n      } else if (this.isShowNameInput) {\n        if (0 < price && price <= this.getListingMaxPostingPrice && this.inputName) {\n          return true;\n        } else return false;\n      } else {\n        if ((this.getSelectedItem.data?.minPrice ? this.getSelectedItem.data.minPrice : 0) < price && price <= this.getListingMaxPostingPrice) {\n          return true;\n        } else return false;\n      }\n    },\n    getIsShowExtraImgs() {\n      return this.getSelectedItem?.objectType !== \"clothes\";\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}