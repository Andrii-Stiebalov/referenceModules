{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport MPActionBtn from \"../MP-ActionBtn/MP-ActionBtn.vue\";\nimport MPSpecialBtn from \"../MP-SpecialBtn/MP-SpecialBtn.vue\";\nimport MPTimer from \"../MP-Timer/MP-Timer.vue\";\nimport MPTip from \"../MP-Tip/MP-Tip.vue\";\nimport MPPrice from \"../MP-Price/MP-Price.vue\";\nimport MPGender from \"../MP-Gender/MP-Gender.vue\";\nimport { getIsImgFull, getitemCardType, parseDate, checkSection, formatNumber } from \"../../Assets/functions\";\nimport { getItemCardImgPath } from \"../../Assets/functions\";\nimport CdnResolverImage from \"@/Components/CdnResolverImage.vue\";\nimport MPImgSwitcher from \"../MP-ImgSwitcher/MP-ImgSwitcher.vue\";\nexport default {\n  props: {\n    itemCard: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      currentImgPath: null\n    };\n  },\n  components: {\n    MPSpecialBtn,\n    MPTimer,\n    MPTip,\n    MPPrice,\n    MPGender,\n    MPActionBtn,\n    CdnResolverImage,\n    MPImgSwitcher\n  },\n  methods: {\n    setImg(path) {\n      this.currentImgPath = path;\n    },\n    getItemCardImgPath() {\n      return getItemCardImgPath(this.itemCard);\n    },\n    isCardImgFull(type) {\n      if (this.itemCard?.action) return false;else return getIsImgFull(type);\n    },\n    onUnload() {\n      this.$store.commit(\"marketPlace/openModal\", [this.itemCard, \"stockUnload\"]);\n    },\n    parseDate(type) {\n      return parseDate(this.itemCard.createdTime, type);\n    },\n    formatNumber(num) {\n      return formatNumber(num, \" \");\n    }\n  },\n  computed: {\n    getUnloadBtnTitle() {\n      return this.getIsTablet ? \"Не доступно для вивантаження через планшет\" : \"Вивантажити зі складу\";\n    },\n    getIsTablet() {\n      return this.$store.getters[\"marketPlace/getIsTablet\"];\n    },\n    isShowStatus() {\n      return this.itemCard?.status && (checkSection(this.$route, \"stock\") || checkSection(this.$route, \"createListing\"));\n    },\n    isCreateListingSection() {\n      return this.$route.path.includes(\"createListing\");\n    },\n    isShowQuantityTip() {\n      return this.itemCard?.count !== undefined && !this.isShowFavorite;\n    },\n    isShowGender() {\n      return this.itemCard?.gender !== undefined;\n    },\n    isShowFavorite() {\n      return ![\"stock\", \"myListings\", \"shoppingHistory\", \"moderation\"].includes(this.$route.params.section) && !this.isCreateListingSection;\n    },\n    getCardInfo() {\n      if (checkSection(this.$route, \"stock\")) {\n        return [];\n      } else {\n        const info = [];\n        if (this.itemCard?.favorites !== undefined && ![\"auction\", \"items\"].includes(this.$route.params?.section)) {\n          info.push({\n            img: \"favorite\",\n            value: this.itemCard.favorites\n          });\n        }\n        if (this.itemCard?.views !== undefined && ![\"auction\", \"items\"].includes(this.$route.params?.section)) {\n          info.push({\n            img: \"views\",\n            value: this.itemCard.views\n          });\n        }\n        if (this.itemCard?.bidders !== undefined) {\n          info.push({\n            img: \"competitors\",\n            value: this.itemCard.bidders\n          });\n        }\n        if (this.itemCard?.count !== undefined && [\"auction\", \"items\"].includes(this.$route.params?.section)) {\n          info.push({\n            img: \"quantity\",\n            value: `${this.itemCard.count} ${this.$t(\"шт.\")}`\n          });\n        }\n        return info;\n      }\n    },\n    getCardSubTitle() {\n      if ([\"item\"].includes(this.itemCard.objectType)) {\n        return this.itemCard.category;\n      } else {\n        return getitemCardType(this.itemCard.objectType);\n      }\n    },\n    isShowUnloadBtn() {\n      return checkSection(this.$route, \"stock\");\n    },\n    isShowCreateDateTip() {\n      return [\"myListings\", \"shoppingHistory\"].includes(this.$route.params.section);\n    },\n    isShowTimer() {\n      return this.itemCard?.endTime && [\"stock\", \"auction\"].includes(this.$route.params.section);\n    },\n    getCardStatus() {\n      const statuses = {\n        stock: \"На складі\",\n        available: \"Доступно\",\n        unavailable: \"Не доступно\",\n        owned: \"У власності\"\n      };\n      return statuses[this.itemCard.status];\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}