{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createBlock as _createBlock, vShow as _vShow, withDirectives as _withDirectives, Transition as _Transition, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"notification-body\"\n};\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = {\n  key: 1,\n  class: \"notification-text__item\"\n};\nconst _hoisted_4 = {\n  class: \"notification-text__item-title\"\n};\nconst _hoisted_5 = {\n  class: \"notification-text__item\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"notification-text__item-icon\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ProgressBar = _resolveComponent(\"ProgressBar\");\n  return _openBlock(), _createBlock(_Transition, {\n    name: $options.getTransition,\n    onAfterLeave: $options.remove\n  }, {\n    default: _withCtx(() => [_withDirectives(_createElementVNode(\"div\", {\n      class: _normalizeClass([\"notification-bar\", $options.getClasses]),\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.closeNotification && $options.closeNotification(...args)),\n      onMouseover: _cache[1] || (_cache[1] = (...args) => $options.stopTimer && $options.stopTimer(...args)),\n      onMouseleave: _cache[2] || (_cache[2] = (...args) => $options.startTimer && $options.startTimer(...args))\n    }, [_createElementVNode(\"div\", _hoisted_1, [!$props.notification.isFromServer ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"notification-text\",\n      innerHTML: $props.notification.text\n    }, null, 8, _hoisted_2)) : _createCommentVNode(\"\", true), $props.notification.isFromServer ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"span\", null, _toDisplayString($props.notification.text), 1)])])) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_5, [$props.notification.isFromServer ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"span\", {\n      class: _normalizeClass(`icon-${$props.notification.type}`)\n    }, null, 2)])) : _createCommentVNode(\"\", true)]), $options.withProgressbar ? (_openBlock(), _createBlock(_component_ProgressBar, {\n      key: 2,\n      time: $options.getTime,\n      progress: $data.progress\n    }, null, 8, [\"time\", \"progress\"])) : _createCommentVNode(\"\", true)])], 34), [[_vShow, $data.active]])]),\n    _: 1\n  }, 8, [\"name\", \"onAfterLeave\"]);\n}","map":null,"metadata":{},"sourceType":"module"}