{"ast":null,"code":"export default {\n  data() {\n    return {\n      reqInputValue: \"\",\n      selectedReportIndex: -5\n    };\n  },\n  computed: {\n    reportList() {\n      return this.$store.getters[\"playerMenu/getReptortList\"];\n    },\n    isHaveActive() {\n      return this.reportList.some(report => !report.closed);\n    }\n  },\n  watch: {\n    reportList(val, oldVal) {\n      if (oldVal.length !== val.length) {\n        setTimeout(() => this.selectedReportIndex = 0);\n      }\n      if (!this.$refs.chat) {\n        return;\n      }\n      setTimeout(() => {\n        this.$refs.chat.style.scrollBehavior = \"smooth\";\n        this.$refs.chat.scrollTop = this.$refs.chat.scrollHeight + 500;\n        this.reportList[this.selectedReportIndex].read = true;\n      });\n    },\n    selectedReportIndex(val, oldVal) {\n      if (val != -1) {\n        setTimeout(() => this.resizeTextarea());\n      }\n      if (val > -1) {\n        console.log(val);\n        this.reportList[val].read = true;\n      }\n      this.reqInputValue = \"\";\n      if (this.reportList[oldVal]) {\n        this.reportList[oldVal].scrollTop = this.$refs.chat?.scrollTop;\n      }\n      setTimeout(() => {\n        if (!this.$refs.chat) {\n          return;\n        }\n        this.$refs.chat.style.scrollBehavior = \"auto\";\n        this.$refs.chat.scrollTop = this.reportList[val].scrollTop ? this.reportList[val].scrollTop : this.$refs.chat.scrollHeight + 500;\n      }, 10);\n    }\n  },\n  methods: {\n    lastMassageShow(lastMsg, id) {\n      if (lastMsg.text) {\n        return lastMsg.text.length > 67 ? lastMsg.text?.slice(0, lastMsg.text?.indexOf(\" \", 68)) + \"...\" : lastMsg.text;\n      }\n      return this.$t(`Запрос [№{0}] принял администратор {1}`, [id, lastMsg.adminName]);\n    },\n    getDate(date) {\n      const day = date.getDate().toString().padStart(2, \"0\"); // Получаем день и добавляем нуль в начале, если нужно\n      const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Получаем месяц (нумерация месяцев начинается с 0)\n      const year = date.getFullYear().toString().slice(2); // Получаем последние две цифры года\n\n      const formattedDate = `${day}.${month}.${year}`;\n      return formattedDate;\n    },\n    getTime(date) {\n      const hours = date.getHours().toString().padStart(2, \"0\"); // Получаем часы и добавляем нуль в начале, если нужно\n      const minutes = date.getMinutes().toString().padStart(2, \"0\"); // Получаем минуты и добавляем нуль в начале, если нужно\n\n      const formattedTime = `${hours}:${minutes}`;\n      return formattedTime;\n    },\n    resizeTextarea() {\n      const textarea = document.getElementById(\"text\");\n      if (!textarea) {\n        return;\n      }\n      textarea.style.height = \"auto\"; // Сбрасываем высоту\n      textarea.style.height = textarea.scrollHeight + \"px\"; // Устанавливаем высоту на основе содержимого\n    },\n    onkeydown(event) {\n      if (event.key === \"Enter\" && !event.shiftKey) {\n        event.preventDefault(); // Предотвращаем автоматический перенос строки\n        this.sendMsg();\n        setTimeout(() => {\n          this.resizeTextarea();\n        });\n      }\n    },\n    sendMsg() {\n      if (this.selectedReportIndex == -2) {\n        this.$callClient(\"C:Report:NewReport\", this.reqInputValue);\n      } else {\n        this.$callClient(\"C:Report:SendMsg\", this.reportList[this.selectedReportIndex].id, this.reqInputValue);\n      }\n      this.reqInputValue = \"\";\n    },\n    closeReport() {\n      if (!this.reportList[this.selectedReportIndex].closed) {\n        this.$callClient(\"C:Report:CloseReport\", this.reqInputValue);\n      }\n    },\n    createNewReport() {\n      this.$callClient(\"C:Report:NewReport\", this.reqInputValue);\n      this.reqInputValue = \"\";\n    }\n  },\n  mounted() {\n    if (this.isHaveActive) {\n      this.selectedReportIndex = 0;\n    } else {\n      this.selectedReportIndex = -2;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}