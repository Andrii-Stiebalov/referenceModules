{"ast":null,"code":"class EventBus {\n  constructor() {\n    if (!EventBus._instance) {\n      this.events = new Map();\n      EventBus._instance = this;\n    }\n    return EventBus._instance;\n  }\n  on(event, callback) {\n    let eventsList = this.events.has(event) ? this.events.get(event) : [];\n    eventsList.push(callback);\n    this.events.set(event, eventsList);\n  }\n  off(event, callback) {\n    if (this.events.has(event)) {\n      let eventsList = this.events.get(event);\n      for (let i = 0; i < eventsList.length; i++) {\n        if (eventsList[i] === callback) {\n          eventsList.splice(i, 1);\n          break;\n        }\n      }\n      this.events.set(event, eventsList);\n    }\n  }\n  emit(event, ...args) {\n    if (this.events.has(event)) {\n      this.events.get(event).forEach(callback => callback(...args));\n    }\n  }\n}\nwindow.EventBus = new EventBus();\nexport default {\n  install: app => {\n    app.config.globalProperties.$EBus = new EventBus();\n  }\n};","map":null,"metadata":{},"sourceType":"module"}