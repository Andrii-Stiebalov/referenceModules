{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chipsPage\"\n};\nconst _hoisted_2 = {\n  class: \"chipsPage-header\"\n};\nconst _hoisted_3 = {\n  class: \"chipsPage-keypad\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Input = _resolveComponent(\"Input\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"Покупка фишек\")), 1), _createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"{0} фишка = {1}$\", [1, _ctx.$n($props.price)])), 1)]), _createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"Выберите вариант из предложенных \\n или введите количество сами\")), 1), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.numbers, number => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([\"chipsPage-keypad__item\", {\n        active: $options.isNumberActive(number)\n      }]),\n      key: number,\n      onClick: $event => $options.setActiveNumber(number)\n    }, [_createElementVNode(\"p\", null, _toDisplayString(number), 1), _createElementVNode(\"img\", {\n      src: `./img/Chips/Icons/Chip.svg`,\n      alt: \"Icon\"\n    }, null, 8, _hoisted_5)], 10, _hoisted_4);\n  }), 128))]), _createVNode(_component_Input, {\n    placeholder: _ctx.$t('Введите количество'),\n    value: $data.inputAmount,\n    onInput: $options.onAmountInput,\n    onChange: $options.onAmountChange\n  }, null, 8, [\"placeholder\", \"value\", \"onInput\", \"onChange\"]), _createElementVNode(\"button\", {\n    class: \"chipsPage-button\",\n    tabindex: \"-1\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.onAction && $options.onAction(...args))\n  }, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"Купить за {0}$\", [_ctx.$n($options.computedPrice)])), 1)])]);\n}","map":null,"metadata":{},"sourceType":"module"}