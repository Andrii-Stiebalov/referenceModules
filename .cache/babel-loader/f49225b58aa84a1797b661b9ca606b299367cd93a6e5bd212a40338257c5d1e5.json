{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"UntangleMiniGame\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"UntangleMiniGame-hr\"\n}, null, -1);\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"UntangleMiniGame__title-section\"\n};\nconst _hoisted_5 = {\n  class: \"UntangleMiniGame__title\"\n};\nconst _hoisted_6 = {\n  class: \"UntangleMiniGame__info-section\"\n};\nconst _hoisted_7 = {\n  class: \"UntangleMiniGame__info-title\"\n};\nconst _hoisted_8 = {\n  class: \"UntangleMiniGame__info-title2\"\n};\nconst _hoisted_9 = {\n  class: \"UntangleMiniGame__info\"\n};\nconst _hoisted_10 = {\n  key: 1\n};\nconst _hoisted_11 = {\n  class: \"UntangleMiniGame__title-section UntangleMiniGame__title-section-car\"\n};\nconst _hoisted_12 = {\n  class: \"UntangleMiniGame__title\"\n};\nconst _hoisted_13 = {\n  class: \"UntangleMiniGame__info-section\"\n};\nconst _hoisted_14 = {\n  class: \"UntangleMiniGame__info-title\"\n};\nconst _hoisted_15 = {\n  class: \"UntangleMiniGame__info-title2\"\n};\nconst _hoisted_16 = {\n  class: \"UntangleMiniGame__info\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Drawable = _resolveComponent(\"Drawable\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    class: \"UntangleMiniGame__close-button\",\n    onClick: _cache[0] || (_cache[0] = () => $options.close())\n  }), $options.isRobbery ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"взлом\")), 1), _createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"электрощита\")), 1)])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString(_ctx.$t(\"взлом электрощита\")), 1), _createElementVNode(\"div\", _hoisted_8, _toDisplayString(_ctx.$t(\"ваша задача\")), 1), _createElementVNode(\"div\", _hoisted_9, _toDisplayString(_ctx.$t(\"Перед вами электрическая цепь, вам необходимо разместить электрические пути так, чтобы все цепи были зеленого цвета.\")), 1)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"взлом\")), 1), _createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"автомобиля\")), 1)])]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, _toDisplayString(_ctx.$t(\"взлом автомобиля\")), 1), _createElementVNode(\"div\", _hoisted_15, _toDisplayString(_ctx.$t(\"ваша задача\")), 1), _createElementVNode(\"div\", _hoisted_16, _toDisplayString(_ctx.$t(\"Перед вами электрическая цепь, вам необходимо разместить электрические пути так, чтобы все цепи были зеленого цвета.\")), 1)])])), _createVNode(_component_Drawable, {\n    onOnFinishGame: $options.onFinishGame\n  }, null, 8, [\"onOnFinishGame\"])]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}