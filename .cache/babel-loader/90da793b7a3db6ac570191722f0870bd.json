{"ast":null,"code":"import ColorPickerSection from \"./ColorPickerSection/ColorPickerSection\";\nimport CategoryIconList from \"../Assets/CategoryIconList.js\";\nexport default {\n  data() {\n    return {\n      list: [],\n      selectedIndex: 0\n    };\n  },\n  components: {\n    ColorPickerSection\n  },\n  computed: {\n    getCatigoryIcon() {\n      return CategoryIconList[this.selectedCatigory.img];\n    },\n    isColorPicker() {\n      if (this.selectedCatigory.id == 20) {\n        return false;\n      }\n      return this.selectedCatigory.id;\n    }\n  },\n  watch: {\n    selectedSubCatigory() {\n      this.list = this.selectedSubCatigory.items;\n    },\n    selectedCatigory() {\n      if (!this.selectedSubCatigory) {\n        this.list = this.selectedCatigory.items;\n      }\n    },\n    selectedIndex: {\n      handler(val) {\n        setTimeout(() => {\n          if (this.list?.[val]?.id == undefined || !this.selectedSubCatigory || this.selectedItem?.items?.[0]?.color) return;\n          this.$emit(\"selectLocalSelectedItemId\", this.list[val].id);\n        });\n      }\n    }\n  },\n  methods: {\n    onSelectItem(id) {\n      this.$emit(\"selectLocalSelectedItemId\", id);\n    },\n    onSelectSubCatigory(item) {\n      this.$emit(\"selectSubCatigory\", item);\n    },\n    onMouseenter() {\n      this.$callClient(\"Tuning:disableRotation\");\n    },\n    onMouseleave() {\n      this.$callClient(\"Tuning:activeRotation\");\n    },\n    onBack() {\n      this.$emit(\"selectSubCatigory\", null);\n    },\n    formatMoney(amount) {\n      return amount.toLocaleString(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0\n      }).replace(\"$\", \"\").replace(/,/g, \".\");\n    },\n    move(type) {\n      if (type == \"+\") {\n        this.selectedIndex = this.selectedIndex == this.list.length - 1 ? 0 : this.selectedIndex + 1;\n      } else {\n        this.selectedIndex = this.selectedIndex == 0 ? this.list.length - 1 : this.selectedIndex - 1;\n      }\n    }\n  },\n  props: {\n    selectedCatigory: Object,\n    selectedItemId: Number,\n    localSelectedItemId: Number,\n    selectedSubCatigory: Object,\n    colorHsv: Object,\n    isSpecial: Boolean\n  },\n  mounted() {\n    if (this.selectedSubCatigory) {\n      this.list = this.selectedSubCatigory.items;\n    } else {\n      this.list = this.selectedCatigory.items;\n    }\n    if (this.selectedItemId?.color) {\n      const index = this.list.findIndex(item => item.id === this.selectedItemId.id);\n      this.selectedIndex = index;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}