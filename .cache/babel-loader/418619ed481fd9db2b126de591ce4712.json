{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, createBlock as _createBlock, normalizeStyle as _normalizeStyle, Transition as _Transition, withCtx as _withCtx } from \"vue\";\nimport _imports_0 from '../Assets/BattlePass/spring-100-lvl_case.png';\nimport _imports_1 from '../Assets/BattlePass/Tasksr.svg';\nimport _imports_2 from '../Assets/BattlePass/Vector.svg';\nimport _imports_3 from '../Assets/coin.svg';\nimport _imports_4 from '../Assets/BattlePass/bg-form.png';\nimport _imports_5 from '../Assets/BattlePass/icon_reward.svg';\nconst _hoisted_1 = {\n  class: \"PlayerMenuBattlePass\"\n};\nconst _hoisted_2 = {\n  class: \"PlayerMenuBattlePass_bigPrize\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 0,\n  class: \"PlayerMenuBattlePass_bigPrize-info\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"PlayerMenuBattlePass_bigPrize_progress\"\n};\nconst _hoisted_7 = {\n  height: \"8rem\",\n  width: \"8rem\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"circle\", {\n  cx: \"4rem\",\n  cy: \"4rem\",\n  r: \"3.2rem\",\n  stroke: \"rgba(12, 18, 18, 0.40)\",\n  pathLength: \"100\",\n  \"stroke-width\": \"0.6rem\",\n  fill: \"none\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_9 = [\"stroke-dashoffset\"];\nconst _hoisted_10 = {\n  class: \"PlayerMenuBattlePass__title-section\"\n};\nconst _hoisted_11 = {\n  class: \"PlayerMenuBattlePass__timer\"\n};\nconst _hoisted_12 = {\n  class: \"PlayerMenuBattlePass__subtitle\"\n};\nconst _hoisted_13 = {\n  class: \"PlayerMenuBattlePass__title\"\n};\nconst _hoisted_14 = {\n  class: \"PlayerMenuBattlePass__description\"\n};\nconst _hoisted_15 = {\n  class: \"PlayerMenuBattlePass__additional-info\"\n};\nconst _hoisted_16 = {\n  class: \"PlayerMenuBattlePass__task-section\"\n};\nconst _hoisted_17 = {\n  key: 0\n};\nconst _hoisted_18 = {\n  key: 0,\n  class: \"PlayerMenuBattlePass__tasks-empty\"\n};\nconst _hoisted_19 = {\n  class: \"PlayerMenuBattlePass__tasks-empty-info\"\n};\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1\n}, null, -1 /* HOISTED */);\nconst _hoisted_21 = {\n  key: 1,\n  class: \"PlayerMenuBattlePass__tasks\"\n};\nconst _hoisted_22 = {\n  class: \"PlayerMenuBattlePass__task-title\"\n};\nconst _hoisted_23 = {\n  key: 0,\n  class: \"PlayerMenuBattlePass__task-progress-section\"\n};\nconst _hoisted_24 = {\n  class: \"PlayerMenuBattlePass__task-progress\"\n};\nconst _hoisted_25 = {\n  class: \"PlayerMenuBattlePass__task-award\"\n};\nconst _hoisted_26 = {\n  key: 1,\n  class: \"PlayerMenuBattlePass__task-done-button\"\n};\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_2\n}, null, -1 /* HOISTED */);\nconst _hoisted_28 = [_hoisted_27];\nconst _hoisted_29 = {\n  key: 1,\n  class: \"PlayerMenuBattlePass__buy-lvl\"\n};\nconst _hoisted_30 = [\"src\"];\nconst _hoisted_31 = {\n  class: \"PlayerMenuBattlePass__buy-lvl-item-title\"\n};\nconst _hoisted_32 = [\"onClick\"];\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_3\n}, null, -1 /* HOISTED */);\nconst _hoisted_34 = {\n  class: \"PlayerMenuBattlePass__buy-lvl-btn-wrapper\"\n};\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"2.3rem\",\n  height: \"2rem\",\n  viewBox: \"0 0 23 20\",\n  fill: \"none\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M14.0553 9.74312L16.947 5.67219C17.1098 5.44333 17.323 5.25716 17.5691 5.12881C17.8153 5.00046 18.0874 4.93357 18.3635 4.93357C18.6396 4.93357 18.9118 5.00046 19.158 5.12881C19.4041 5.25716 19.6173 5.44333 19.7801 5.67219L22.671 9.74312C22.9021 10.0682 23.0175 10.465 22.9978 10.867C22.9781 11.269 22.8245 11.6518 22.5627 11.9515C22.3009 12.2511 21.9468 12.4494 21.5597 12.5131C21.1725 12.5769 20.7757 12.5022 20.4358 12.3016L20.3241 12.2357C19.8892 14.6354 18.7933 16.3216 17.4568 17.4848C14.665 19.9128 10.8861 19.9961 10.6382 19.9985C10.2095 20.0174 9.7909 19.861 9.47423 19.5637C9.15755 19.2664 8.9686 18.8524 8.94878 18.4123C8.93046 17.9749 9.08055 17.5476 9.36662 17.2228C9.65269 16.898 10.0518 16.7018 10.4776 16.6766C10.7458 16.6398 13.1361 16.2717 14.8108 14.5431C15.3296 14.0072 15.755 13.3183 16.0018 12.4369C15.7357 12.5319 15.4492 12.5585 15.1678 12.512C14.7809 12.4481 14.4271 12.2499 14.1654 11.9505C13.9037 11.651 13.75 11.2685 13.73 10.8668C13.7099 10.465 13.8248 10.0684 14.0553 9.74312Z\",\n  fill: \"#E5FFFF\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M8.94566 10.2569L6.05403 14.3278C5.89119 14.5567 5.67803 14.7428 5.43188 14.8712C5.18573 14.9995 4.91354 15.0664 4.63745 15.0664C4.36136 15.0664 4.08917 14.9995 3.84302 14.8712C3.59687 14.7428 3.38371 14.5567 3.22087 14.3278L0.330019 10.2569C0.0983892 9.93181 -0.0173766 9.5349 0.00211372 9.13264C0.0216041 8.73039 0.175167 8.34723 0.43708 8.04735C0.698991 7.74746 1.05334 7.54907 1.44077 7.48541C1.8282 7.42175 2.22518 7.49668 2.56521 7.69765L2.67703 7.76358C3.11196 5.36433 4.20782 3.67824 5.54415 2.51516C8.33599 0.0871632 12.1148 0.00393598 12.3628 0.0015352C12.7914 -0.0173645 13.2098 0.138858 13.5265 0.435991C13.8431 0.733125 14.0322 1.14695 14.0522 1.58685C14.0705 2.02438 13.9205 2.45176 13.6344 2.77667C13.3484 3.10159 12.9493 3.29798 12.5234 3.32342C12.2552 3.36023 9.86484 3.72835 8.1902 5.45692C7.67164 5.99262 7.24638 6.68108 6.99949 7.56193C7.26564 7.46686 7.55221 7.44014 7.8337 7.48655C8.22086 7.55039 8.57495 7.74871 8.83675 8.04837C9.09855 8.34802 9.25221 8.73085 9.27204 9.13284C9.29186 9.53483 9.17665 9.93163 8.94566 10.2569Z\",\n  fill: \"#E5FFFF\"\n})], -1 /* HOISTED */);\nconst _hoisted_36 = [_hoisted_35];\nconst _hoisted_37 = {\n  class: \"PlayerMenuBattlePass-left-side-section\"\n};\nconst _hoisted_38 = {\n  class: \"PlayerMenuBattlePass__battlePass-list-section-info PlayerMenuBattlePass__battlePass-list-section-info-normal\"\n};\nconst _hoisted_39 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_4\n}, null, -1 /* HOISTED */);\nconst _hoisted_40 = {\n  class: \"\"\n};\nconst _hoisted_41 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"22\",\n  height: \"28\",\n  viewBox: \"0 0 22 28\",\n  fill: \"none\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M0.000174276 21.2238C0.329133 22.2597 0.690347 23.0702 1.41208 24.0688C1.53382 24.1983 1.65817 24.3253 1.78505 24.4496C1.81801 24.4354 1.8587 24.4135 1.91605 24.3812C2.02272 24.3211 2.15028 24.2176 2.27645 24.0874C2.59195 24.2869 2.91482 24.4743 3.24435 24.649C3.06735 24.8656 2.87038 25.0599 2.64931 25.2161C3.20536 25.6691 3.79825 26.0732 4.42161 26.4244C4.51686 26.401 4.62073 26.3323 4.75989 26.2009C4.926 26.0439 5.09758 25.7986 5.24395 25.5136C5.6001 25.6333 5.9545 25.7359 6.30826 25.8202C6.11147 26.26 5.85599 26.6623 5.5314 26.9785C6.34801 27.3351 7.20023 27.6008 8.07317 27.7711C8.21488 27.6921 8.34466 27.5515 8.48259 27.3388C8.67706 27.039 8.83635 26.6081 8.9284 26.1398C9.30318 26.1424 9.67494 26.125 10.0419 26.0918C9.94445 26.7661 9.7363 27.4163 9.39232 27.9466C9.39034 27.9495 9.38883 27.9529 9.38685 27.9558C10.2775 28.0315 11.1736 28.0099 12.0596 27.8912C12.2622 27.7546 12.4065 27.5261 12.5218 27.1855C12.67 26.7477 12.7165 26.1526 12.6564 25.5468C13.0128 25.4285 13.3627 25.2941 13.7044 25.1442C13.8266 25.9701 13.7989 26.8135 13.5516 27.5439C13.5448 27.5639 13.5369 27.5833 13.5297 27.6031C14.4252 27.3693 15.2923 27.0353 16.1152 26.6073C16.2784 26.3972 16.3607 26.1137 16.3863 25.7371C16.4238 25.1873 16.2855 24.4871 16.017 23.8194C16.3223 23.6005 16.6185 23.3688 16.9049 23.1248C17.2958 23.9861 17.5264 24.9196 17.4725 25.7888C18.3237 25.2004 19.1009 24.5086 19.7869 23.7289C19.8711 23.4771 19.8722 23.1791 19.8032 22.8201C19.6941 22.2525 19.3721 21.5872 18.9299 20.9856C18.9301 20.9852 18.9296 20.9841 18.9299 20.9837C19.1612 20.6798 19.3797 20.3661 19.5849 20.0434C20.1618 20.7514 20.6152 21.5583 20.8203 22.3803C21.2832 21.6858 21.6769 20.9463 21.9956 20.1727C22.0203 19.8809 21.9397 19.5644 21.7682 19.2065C21.5508 18.753 21.1713 18.2736 20.7039 17.845C21.0988 16.8379 21.3572 15.7918 21.4553 14.7376L20.3709 14.6324C20.2923 15.4759 20.0931 16.3222 19.7922 17.1486C19.1455 16.7417 18.4431 16.4622 17.8455 16.3836C17.3148 16.314 16.9047 16.3787 16.5973 16.6072C16.5053 17.0848 16.3679 17.5466 16.1897 17.989C16.5664 17.9992 16.9459 18.0899 17.3014 18.2385C17.8314 18.4599 18.3377 18.8013 18.7989 19.2157C18.6064 19.5335 18.4 19.8423 18.1803 20.1413C17.7621 19.75 17.3087 19.4365 16.8866 19.2601C16.3483 19.0351 15.9214 19.0134 15.5585 19.2232C15.2699 19.6812 14.9334 20.1101 14.5559 20.5071C14.8063 20.6119 15.0433 20.7546 15.2601 20.9228C15.6772 21.2465 16.0467 21.666 16.3608 22.1384C16.086 22.382 15.8017 22.6144 15.5056 22.8331C15.2323 22.4103 14.9175 22.047 14.5995 21.8003C14.2156 21.5024 13.877 21.3735 13.5461 21.4179C13.1593 21.7155 12.7505 21.9823 12.3234 22.216C12.4801 22.3513 12.6222 22.503 12.7474 22.6687C13.0487 23.0682 13.2804 23.5435 13.4478 24.0524C13.1165 24.2058 12.7784 24.3454 12.4326 24.4662C12.2926 24.0271 12.1017 23.6308 11.8832 23.3412C11.6292 23.0044 11.3856 22.8208 11.1117 22.7777C10.6393 22.9589 10.1547 23.1052 9.66149 23.2155C9.72406 23.3259 9.77879 23.4407 9.82527 23.5591C9.99685 23.9995 10.0834 24.4902 10.1018 24.9944C9.73984 25.0344 9.37601 25.0548 9.01189 25.0555C8.99658 24.6442 8.92823 24.2596 8.81365 23.9654C8.70768 23.6935 8.5924 23.5164 8.44975 23.4131C7.87326 23.4747 7.29291 23.4908 6.71396 23.4611C6.72001 23.4995 6.72444 23.5374 6.72851 23.5757C6.77073 23.9673 6.73725 24.3771 6.65032 24.782C6.30215 24.701 5.95107 24.6005 5.59864 24.4809C5.65297 24.193 5.66985 23.917 5.64604 23.6958C5.62939 23.5413 5.60202 23.4279 5.56418 23.3411C5.05139 23.2599 4.54491 23.142 4.04852 22.9882C4.00567 23.2354 3.92672 23.4779 3.82291 23.7124C3.49748 23.5411 3.17885 23.3568 2.86776 23.16C2.92383 23.0173 2.9647 22.8812 2.98246 22.7647C2.99236 22.6992 2.99789 22.6451 2.99876 22.6002C2.72861 22.4852 2.46486 22.3624 2.20909 22.2288C1.52194 21.8801 0.797186 21.4949 0.000290658 21.2238L0.000174276 21.2238ZM0.000173645 6.77703C0.797011 6.50609 1.52183 6.12083 2.20903 5.77204C2.46734 5.63728 2.73075 5.51284 2.99865 5.399C2.99771 5.35455 2.99207 5.30087 2.98234 5.23643C2.96453 5.11938 2.92412 4.98246 2.86765 4.83916C3.17874 4.64231 3.4974 4.45804 3.82285 4.28677C3.92683 4.52182 4.00567 4.76539 4.04852 5.01273C4.53701 4.86121 5.04413 4.74239 5.56406 4.65998C5.60237 4.57284 5.62927 4.45874 5.64604 4.30332C5.66991 4.08211 5.65302 3.80615 5.5987 3.51825C5.94488 3.40113 6.29647 3.30124 6.65224 3.21893C6.73882 3.62312 6.77078 4.03251 6.72869 4.42345C6.72477 4.46233 6.71992 4.5011 6.71413 4.53973C7.29302 4.50946 7.87334 4.52492 8.44987 4.58596C8.59252 4.48251 8.7078 4.30545 8.81376 4.03351C8.92817 3.73988 8.99658 3.35591 9.01207 2.9454C9.37618 2.94616 9.74 2.96648 10.102 3.00629C10.0834 3.50997 9.99673 3.99993 9.82544 4.43989C9.7789 4.55822 9.72415 4.67306 9.6616 4.78353C10.1541 4.89389 10.6381 5.04021 11.1099 5.22136C11.3847 5.17909 11.6288 4.99701 11.8832 4.65974C12.1017 4.36983 12.2925 3.97369 12.4326 3.53456C12.7784 3.6554 13.1165 3.79497 13.4479 3.94838C13.2805 4.45667 13.0484 4.93115 12.7475 5.33025C12.6224 5.49655 12.4802 5.6489 12.3234 5.78474C12.7556 6.02181 13.1644 6.28842 13.5461 6.58283C13.8769 6.62776 14.2158 6.49829 14.5997 6.20034C14.9174 5.95394 15.2325 5.59066 15.5058 5.16774C15.8018 5.38629 16.086 5.6188 16.3609 5.86236C16.0467 6.33471 15.6774 6.75421 15.2601 7.07794C15.0438 7.24571 14.8073 7.38736 14.5577 7.49176C14.9349 7.88843 15.2701 8.31798 15.5585 8.77579C15.9214 8.98547 16.3483 8.96378 16.8866 8.73878C17.3088 8.56231 17.7621 8.24881 18.1804 7.85746C18.4 8.1571 18.6064 8.46655 18.7989 8.78489C18.3377 9.19889 17.8314 9.53887 17.3014 9.76032C16.9459 9.90889 16.5665 9.99957 16.1898 10.0098C16.3697 10.4564 16.5062 10.9199 16.5974 11.3934C16.9048 11.6224 17.3149 11.6867 17.8455 11.6169C18.4431 11.5385 19.1456 11.2575 19.7924 10.8503C20.0933 11.6764 20.2923 12.5229 20.3709 13.3665L21.4553 13.263C21.3571 12.2084 21.0992 11.1616 20.7039 10.1538C21.1713 9.72521 21.5508 9.24589 21.7682 8.79234C21.9398 8.43432 22.0203 8.11793 21.9956 7.82607C21.6769 7.05244 21.2832 6.31295 20.8203 5.61851C20.6153 6.44 20.1628 7.2479 19.5865 7.95541C19.3825 7.6337 19.1619 7.32049 18.9298 7.01509C19.3725 6.41328 19.694 5.74667 19.8031 5.17879C19.872 4.82078 19.8721 4.52318 19.7886 4.2717C19.1021 3.49127 18.3243 2.7989 17.4725 2.20998C17.5263 3.0793 17.2958 4.01459 16.9048 4.87588C16.6188 4.63231 16.3232 4.39904 16.0169 4.17947C16.2853 3.51174 16.4237 2.81162 16.3862 2.26171C16.3605 1.88525 16.2783 1.6016 16.1151 1.39168C15.2922 0.963686 14.4251 0.62972 13.5296 0.395905C13.5368 0.41571 13.5448 0.4351 13.5515 0.455023C13.7987 1.18542 13.8265 2.0289 13.7043 2.85483C13.3612 2.70432 13.0115 2.56993 12.6563 2.45207C12.7161 1.84694 12.6697 1.25257 12.5216 0.815224C12.4063 0.474412 12.2622 0.244742 12.0595 0.107708C11.1734 -0.0103393 10.2773 -0.0314268 9.38673 0.0448081C9.38836 0.0473501 9.39052 0.0496557 9.39221 0.0521977C9.73619 0.58248 9.94433 1.23277 10.0417 1.90706C9.67482 1.87378 9.30307 1.85646 8.92823 1.85906C8.83612 1.39085 8.67688 0.959885 8.48242 0.66016C8.34466 0.447752 8.21436 0.308649 8.07299 0.229609C7.2001 0.400035 6.3479 0.665794 5.53128 1.02225C5.85558 1.33835 6.11118 1.73952 6.3082 2.17871C5.94908 2.2648 5.59391 2.36714 5.24378 2.48541C5.09746 2.20135 4.92565 1.95678 4.75977 1.8C4.62143 1.66923 4.51814 1.59888 4.42324 1.57459C3.79928 1.92567 3.2058 2.32991 2.64919 2.78294C2.87021 2.93913 3.06723 3.13351 3.24423 3.35C2.91468 3.52471 2.59178 3.71205 2.27622 3.91161C2.15011 3.78108 2.02237 3.67792 1.91582 3.61792C1.85934 3.58611 1.8194 3.56353 1.78668 3.54958C1.65918 3.67441 1.53423 3.8019 1.4119 3.93195C0.690172 4.93062 0.328958 5.74112 -9.27688e-07 6.77697L0.000173645 6.77703ZM3.54815 20.1469L11.1007 18.7226L11.1007 9.02165L3.85196 7.66751L7.54911 11.0926L3.63735 13.751L7.54916 16.4113L3.54821 20.1468L3.54815 20.1469ZM12.1888 18.5175L13.3076 18.3069L13.3076 9.4337L12.1887 9.22484L12.1887 18.5174L12.1888 18.5175Z\",\n  fill: \"#2BD9D9\"\n})], -1 /* HOISTED */);\nconst _hoisted_42 = {\n  key: 0,\n  class: \"PlayerMenuBattlePass__battlePass-list-section-info PlayerMenuBattlePass__battlePass-list-section-info\"\n};\nconst _hoisted_43 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_4\n}, null, -1 /* HOISTED */);\nconst _hoisted_44 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"22\",\n  height: \"28\",\n  viewBox: \"0 0 22 28\",\n  fill: \"none\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M0.000174276 21.2238C0.329133 22.2597 0.690347 23.0702 1.41208 24.0688C1.53382 24.1983 1.65817 24.3253 1.78505 24.4496C1.81801 24.4354 1.8587 24.4135 1.91605 24.3812C2.02272 24.3211 2.15028 24.2176 2.27645 24.0874C2.59195 24.2869 2.91482 24.4743 3.24435 24.649C3.06735 24.8656 2.87038 25.0599 2.64931 25.2161C3.20536 25.6691 3.79825 26.0732 4.42161 26.4244C4.51686 26.401 4.62073 26.3323 4.75989 26.2009C4.926 26.0439 5.09758 25.7986 5.24395 25.5136C5.6001 25.6333 5.9545 25.7359 6.30826 25.8202C6.11147 26.26 5.85599 26.6623 5.5314 26.9785C6.34801 27.3351 7.20023 27.6008 8.07317 27.7711C8.21488 27.6921 8.34466 27.5515 8.48259 27.3388C8.67706 27.039 8.83635 26.6081 8.9284 26.1398C9.30318 26.1424 9.67494 26.125 10.0419 26.0918C9.94445 26.7661 9.7363 27.4163 9.39232 27.9466C9.39034 27.9495 9.38883 27.9529 9.38685 27.9558C10.2775 28.0315 11.1736 28.0099 12.0596 27.8912C12.2622 27.7546 12.4065 27.5261 12.5218 27.1855C12.67 26.7477 12.7165 26.1526 12.6564 25.5468C13.0128 25.4285 13.3627 25.2941 13.7044 25.1442C13.8266 25.9701 13.7989 26.8135 13.5516 27.5439C13.5448 27.5639 13.5369 27.5833 13.5297 27.6031C14.4252 27.3693 15.2923 27.0353 16.1152 26.6073C16.2784 26.3972 16.3607 26.1137 16.3863 25.7371C16.4238 25.1873 16.2855 24.4871 16.017 23.8194C16.3223 23.6005 16.6185 23.3688 16.9049 23.1248C17.2958 23.9861 17.5264 24.9196 17.4725 25.7888C18.3237 25.2004 19.1009 24.5086 19.7869 23.7289C19.8711 23.4771 19.8722 23.1791 19.8032 22.8201C19.6941 22.2525 19.3721 21.5872 18.9299 20.9856C18.9301 20.9852 18.9296 20.9841 18.9299 20.9837C19.1612 20.6798 19.3797 20.3661 19.5849 20.0434C20.1618 20.7514 20.6152 21.5583 20.8203 22.3803C21.2832 21.6858 21.6769 20.9463 21.9956 20.1727C22.0203 19.8809 21.9397 19.5644 21.7682 19.2065C21.5508 18.753 21.1713 18.2736 20.7039 17.845C21.0988 16.8379 21.3572 15.7918 21.4553 14.7376L20.3709 14.6324C20.2923 15.4759 20.0931 16.3222 19.7922 17.1486C19.1455 16.7417 18.4431 16.4622 17.8455 16.3836C17.3148 16.314 16.9047 16.3787 16.5973 16.6072C16.5053 17.0848 16.3679 17.5466 16.1897 17.989C16.5664 17.9992 16.9459 18.0899 17.3014 18.2385C17.8314 18.4599 18.3377 18.8013 18.7989 19.2157C18.6064 19.5335 18.4 19.8423 18.1803 20.1413C17.7621 19.75 17.3087 19.4365 16.8866 19.2601C16.3483 19.0351 15.9214 19.0134 15.5585 19.2232C15.2699 19.6812 14.9334 20.1101 14.5559 20.5071C14.8063 20.6119 15.0433 20.7546 15.2601 20.9228C15.6772 21.2465 16.0467 21.666 16.3608 22.1384C16.086 22.382 15.8017 22.6144 15.5056 22.8331C15.2323 22.4103 14.9175 22.047 14.5995 21.8003C14.2156 21.5024 13.877 21.3735 13.5461 21.4179C13.1593 21.7155 12.7505 21.9823 12.3234 22.216C12.4801 22.3513 12.6222 22.503 12.7474 22.6687C13.0487 23.0682 13.2804 23.5435 13.4478 24.0524C13.1165 24.2058 12.7784 24.3454 12.4326 24.4662C12.2926 24.0271 12.1017 23.6308 11.8832 23.3412C11.6292 23.0044 11.3856 22.8208 11.1117 22.7777C10.6393 22.9589 10.1547 23.1052 9.66149 23.2155C9.72406 23.3259 9.77879 23.4407 9.82527 23.5591C9.99685 23.9995 10.0834 24.4902 10.1018 24.9944C9.73984 25.0344 9.37601 25.0548 9.01189 25.0555C8.99658 24.6442 8.92823 24.2596 8.81365 23.9654C8.70768 23.6935 8.5924 23.5164 8.44975 23.4131C7.87326 23.4747 7.29291 23.4908 6.71396 23.4611C6.72001 23.4995 6.72444 23.5374 6.72851 23.5757C6.77073 23.9673 6.73725 24.3771 6.65032 24.782C6.30215 24.701 5.95107 24.6005 5.59864 24.4809C5.65297 24.193 5.66985 23.917 5.64604 23.6958C5.62939 23.5413 5.60202 23.4279 5.56418 23.3411C5.05139 23.2599 4.54491 23.142 4.04852 22.9882C4.00567 23.2354 3.92672 23.4779 3.82291 23.7124C3.49748 23.5411 3.17885 23.3568 2.86776 23.16C2.92383 23.0173 2.9647 22.8812 2.98246 22.7647C2.99236 22.6992 2.99789 22.6451 2.99876 22.6002C2.72861 22.4852 2.46486 22.3624 2.20909 22.2288C1.52194 21.8801 0.797186 21.4949 0.000290658 21.2238L0.000174276 21.2238ZM0.000173645 6.77703C0.797011 6.50609 1.52183 6.12083 2.20903 5.77204C2.46734 5.63728 2.73075 5.51284 2.99865 5.399C2.99771 5.35455 2.99207 5.30087 2.98234 5.23643C2.96453 5.11938 2.92412 4.98246 2.86765 4.83916C3.17874 4.64231 3.4974 4.45804 3.82285 4.28677C3.92683 4.52182 4.00567 4.76539 4.04852 5.01273C4.53701 4.86121 5.04413 4.74239 5.56406 4.65998C5.60237 4.57284 5.62927 4.45874 5.64604 4.30332C5.66991 4.08211 5.65302 3.80615 5.5987 3.51825C5.94488 3.40113 6.29647 3.30124 6.65224 3.21893C6.73882 3.62312 6.77078 4.03251 6.72869 4.42345C6.72477 4.46233 6.71992 4.5011 6.71413 4.53973C7.29302 4.50946 7.87334 4.52492 8.44987 4.58596C8.59252 4.48251 8.7078 4.30545 8.81376 4.03351C8.92817 3.73988 8.99658 3.35591 9.01207 2.9454C9.37618 2.94616 9.74 2.96648 10.102 3.00629C10.0834 3.50997 9.99673 3.99993 9.82544 4.43989C9.7789 4.55822 9.72415 4.67306 9.6616 4.78353C10.1541 4.89389 10.6381 5.04021 11.1099 5.22136C11.3847 5.17909 11.6288 4.99701 11.8832 4.65974C12.1017 4.36983 12.2925 3.97369 12.4326 3.53456C12.7784 3.6554 13.1165 3.79497 13.4479 3.94838C13.2805 4.45667 13.0484 4.93115 12.7475 5.33025C12.6224 5.49655 12.4802 5.6489 12.3234 5.78474C12.7556 6.02181 13.1644 6.28842 13.5461 6.58283C13.8769 6.62776 14.2158 6.49829 14.5997 6.20034C14.9174 5.95394 15.2325 5.59066 15.5058 5.16774C15.8018 5.38629 16.086 5.6188 16.3609 5.86236C16.0467 6.33471 15.6774 6.75421 15.2601 7.07794C15.0438 7.24571 14.8073 7.38736 14.5577 7.49176C14.9349 7.88843 15.2701 8.31798 15.5585 8.77579C15.9214 8.98547 16.3483 8.96378 16.8866 8.73878C17.3088 8.56231 17.7621 8.24881 18.1804 7.85746C18.4 8.1571 18.6064 8.46655 18.7989 8.78489C18.3377 9.19889 17.8314 9.53887 17.3014 9.76032C16.9459 9.90889 16.5665 9.99957 16.1898 10.0098C16.3697 10.4564 16.5062 10.9199 16.5974 11.3934C16.9048 11.6224 17.3149 11.6867 17.8455 11.6169C18.4431 11.5385 19.1456 11.2575 19.7924 10.8503C20.0933 11.6764 20.2923 12.5229 20.3709 13.3665L21.4553 13.263C21.3571 12.2084 21.0992 11.1616 20.7039 10.1538C21.1713 9.72521 21.5508 9.24589 21.7682 8.79234C21.9398 8.43432 22.0203 8.11793 21.9956 7.82607C21.6769 7.05244 21.2832 6.31295 20.8203 5.61851C20.6153 6.44 20.1628 7.2479 19.5865 7.95541C19.3825 7.6337 19.1619 7.32049 18.9298 7.01509C19.3725 6.41328 19.694 5.74667 19.8031 5.17879C19.872 4.82078 19.8721 4.52318 19.7886 4.2717C19.1021 3.49127 18.3243 2.7989 17.4725 2.20998C17.5263 3.0793 17.2958 4.01459 16.9048 4.87588C16.6188 4.63231 16.3232 4.39904 16.0169 4.17947C16.2853 3.51174 16.4237 2.81162 16.3862 2.26171C16.3605 1.88525 16.2783 1.6016 16.1151 1.39168C15.2922 0.963686 14.4251 0.62972 13.5296 0.395905C13.5368 0.41571 13.5448 0.4351 13.5515 0.455023C13.7987 1.18542 13.8265 2.0289 13.7043 2.85483C13.3612 2.70432 13.0115 2.56993 12.6563 2.45207C12.7161 1.84694 12.6697 1.25257 12.5216 0.815224C12.4063 0.474412 12.2622 0.244742 12.0595 0.107708C11.1734 -0.0103393 10.2773 -0.0314268 9.38673 0.0448081C9.38836 0.0473501 9.39052 0.0496557 9.39221 0.0521977C9.73619 0.58248 9.94433 1.23277 10.0417 1.90706C9.67482 1.87378 9.30307 1.85646 8.92823 1.85906C8.83612 1.39085 8.67688 0.959885 8.48242 0.66016C8.34466 0.447752 8.21436 0.308649 8.07299 0.229609C7.2001 0.400035 6.3479 0.665794 5.53128 1.02225C5.85558 1.33835 6.11118 1.73952 6.3082 2.17871C5.94908 2.2648 5.59391 2.36714 5.24378 2.48541C5.09746 2.20135 4.92565 1.95678 4.75977 1.8C4.62143 1.66923 4.51814 1.59888 4.42324 1.57459C3.79928 1.92567 3.2058 2.32991 2.64919 2.78294C2.87021 2.93913 3.06723 3.13351 3.24423 3.35C2.91468 3.52471 2.59178 3.71205 2.27622 3.91161C2.15011 3.78108 2.02237 3.67792 1.91582 3.61792C1.85934 3.58611 1.8194 3.56353 1.78668 3.54958C1.65918 3.67441 1.53423 3.8019 1.4119 3.93195C0.690172 4.93062 0.328958 5.74112 -9.27688e-07 6.77697L0.000173645 6.77703ZM3.54815 20.1469L11.1007 18.7226L11.1007 9.02165L3.85196 7.66751L7.54911 11.0926L3.63735 13.751L7.54916 16.4113L3.54821 20.1468L3.54815 20.1469ZM12.1888 18.5175L13.3076 18.3069L13.3076 9.4337L12.1887 9.22484L12.1887 18.5174L12.1888 18.5175Z\",\n  fill: \"#2BD9D9\"\n})], -1 /* HOISTED */);\nconst _hoisted_45 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_4\n}, null, -1 /* HOISTED */);\nconst _hoisted_46 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"22\",\n  height: \"28\",\n  viewBox: \"0 0 22 28\",\n  fill: \"none\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M0.000174276 21.2238C0.329133 22.2597 0.690347 23.0702 1.41208 24.0688C1.53382 24.1983 1.65817 24.3253 1.78505 24.4496C1.81801 24.4354 1.8587 24.4135 1.91605 24.3812C2.02272 24.3211 2.15028 24.2176 2.27645 24.0874C2.59195 24.2869 2.91482 24.4743 3.24435 24.649C3.06735 24.8656 2.87038 25.0599 2.64931 25.2161C3.20536 25.6691 3.79825 26.0732 4.42161 26.4244C4.51686 26.401 4.62073 26.3323 4.75989 26.2009C4.926 26.0439 5.09758 25.7986 5.24395 25.5136C5.6001 25.6333 5.9545 25.7359 6.30826 25.8202C6.11147 26.26 5.85599 26.6623 5.5314 26.9785C6.34801 27.3351 7.20023 27.6008 8.07317 27.7711C8.21488 27.6921 8.34466 27.5515 8.48259 27.3388C8.67706 27.039 8.83635 26.6081 8.9284 26.1398C9.30318 26.1424 9.67494 26.125 10.0419 26.0918C9.94445 26.7661 9.7363 27.4163 9.39232 27.9466C9.39034 27.9495 9.38883 27.9529 9.38685 27.9558C10.2775 28.0315 11.1736 28.0099 12.0596 27.8912C12.2622 27.7546 12.4065 27.5261 12.5218 27.1855C12.67 26.7477 12.7165 26.1526 12.6564 25.5468C13.0128 25.4285 13.3627 25.2941 13.7044 25.1442C13.8266 25.9701 13.7989 26.8135 13.5516 27.5439C13.5448 27.5639 13.5369 27.5833 13.5297 27.6031C14.4252 27.3693 15.2923 27.0353 16.1152 26.6073C16.2784 26.3972 16.3607 26.1137 16.3863 25.7371C16.4238 25.1873 16.2855 24.4871 16.017 23.8194C16.3223 23.6005 16.6185 23.3688 16.9049 23.1248C17.2958 23.9861 17.5264 24.9196 17.4725 25.7888C18.3237 25.2004 19.1009 24.5086 19.7869 23.7289C19.8711 23.4771 19.8722 23.1791 19.8032 22.8201C19.6941 22.2525 19.3721 21.5872 18.9299 20.9856C18.9301 20.9852 18.9296 20.9841 18.9299 20.9837C19.1612 20.6798 19.3797 20.3661 19.5849 20.0434C20.1618 20.7514 20.6152 21.5583 20.8203 22.3803C21.2832 21.6858 21.6769 20.9463 21.9956 20.1727C22.0203 19.8809 21.9397 19.5644 21.7682 19.2065C21.5508 18.753 21.1713 18.2736 20.7039 17.845C21.0988 16.8379 21.3572 15.7918 21.4553 14.7376L20.3709 14.6324C20.2923 15.4759 20.0931 16.3222 19.7922 17.1486C19.1455 16.7417 18.4431 16.4622 17.8455 16.3836C17.3148 16.314 16.9047 16.3787 16.5973 16.6072C16.5053 17.0848 16.3679 17.5466 16.1897 17.989C16.5664 17.9992 16.9459 18.0899 17.3014 18.2385C17.8314 18.4599 18.3377 18.8013 18.7989 19.2157C18.6064 19.5335 18.4 19.8423 18.1803 20.1413C17.7621 19.75 17.3087 19.4365 16.8866 19.2601C16.3483 19.0351 15.9214 19.0134 15.5585 19.2232C15.2699 19.6812 14.9334 20.1101 14.5559 20.5071C14.8063 20.6119 15.0433 20.7546 15.2601 20.9228C15.6772 21.2465 16.0467 21.666 16.3608 22.1384C16.086 22.382 15.8017 22.6144 15.5056 22.8331C15.2323 22.4103 14.9175 22.047 14.5995 21.8003C14.2156 21.5024 13.877 21.3735 13.5461 21.4179C13.1593 21.7155 12.7505 21.9823 12.3234 22.216C12.4801 22.3513 12.6222 22.503 12.7474 22.6687C13.0487 23.0682 13.2804 23.5435 13.4478 24.0524C13.1165 24.2058 12.7784 24.3454 12.4326 24.4662C12.2926 24.0271 12.1017 23.6308 11.8832 23.3412C11.6292 23.0044 11.3856 22.8208 11.1117 22.7777C10.6393 22.9589 10.1547 23.1052 9.66149 23.2155C9.72406 23.3259 9.77879 23.4407 9.82527 23.5591C9.99685 23.9995 10.0834 24.4902 10.1018 24.9944C9.73984 25.0344 9.37601 25.0548 9.01189 25.0555C8.99658 24.6442 8.92823 24.2596 8.81365 23.9654C8.70768 23.6935 8.5924 23.5164 8.44975 23.4131C7.87326 23.4747 7.29291 23.4908 6.71396 23.4611C6.72001 23.4995 6.72444 23.5374 6.72851 23.5757C6.77073 23.9673 6.73725 24.3771 6.65032 24.782C6.30215 24.701 5.95107 24.6005 5.59864 24.4809C5.65297 24.193 5.66985 23.917 5.64604 23.6958C5.62939 23.5413 5.60202 23.4279 5.56418 23.3411C5.05139 23.2599 4.54491 23.142 4.04852 22.9882C4.00567 23.2354 3.92672 23.4779 3.82291 23.7124C3.49748 23.5411 3.17885 23.3568 2.86776 23.16C2.92383 23.0173 2.9647 22.8812 2.98246 22.7647C2.99236 22.6992 2.99789 22.6451 2.99876 22.6002C2.72861 22.4852 2.46486 22.3624 2.20909 22.2288C1.52194 21.8801 0.797186 21.4949 0.000290658 21.2238L0.000174276 21.2238ZM0.000173645 6.77703C0.797011 6.50609 1.52183 6.12083 2.20903 5.77204C2.46734 5.63728 2.73075 5.51284 2.99865 5.399C2.99771 5.35455 2.99207 5.30087 2.98234 5.23643C2.96453 5.11938 2.92412 4.98246 2.86765 4.83916C3.17874 4.64231 3.4974 4.45804 3.82285 4.28677C3.92683 4.52182 4.00567 4.76539 4.04852 5.01273C4.53701 4.86121 5.04413 4.74239 5.56406 4.65998C5.60237 4.57284 5.62927 4.45874 5.64604 4.30332C5.66991 4.08211 5.65302 3.80615 5.5987 3.51825C5.94488 3.40113 6.29647 3.30124 6.65224 3.21893C6.73882 3.62312 6.77078 4.03251 6.72869 4.42345C6.72477 4.46233 6.71992 4.5011 6.71413 4.53973C7.29302 4.50946 7.87334 4.52492 8.44987 4.58596C8.59252 4.48251 8.7078 4.30545 8.81376 4.03351C8.92817 3.73988 8.99658 3.35591 9.01207 2.9454C9.37618 2.94616 9.74 2.96648 10.102 3.00629C10.0834 3.50997 9.99673 3.99993 9.82544 4.43989C9.7789 4.55822 9.72415 4.67306 9.6616 4.78353C10.1541 4.89389 10.6381 5.04021 11.1099 5.22136C11.3847 5.17909 11.6288 4.99701 11.8832 4.65974C12.1017 4.36983 12.2925 3.97369 12.4326 3.53456C12.7784 3.6554 13.1165 3.79497 13.4479 3.94838C13.2805 4.45667 13.0484 4.93115 12.7475 5.33025C12.6224 5.49655 12.4802 5.6489 12.3234 5.78474C12.7556 6.02181 13.1644 6.28842 13.5461 6.58283C13.8769 6.62776 14.2158 6.49829 14.5997 6.20034C14.9174 5.95394 15.2325 5.59066 15.5058 5.16774C15.8018 5.38629 16.086 5.6188 16.3609 5.86236C16.0467 6.33471 15.6774 6.75421 15.2601 7.07794C15.0438 7.24571 14.8073 7.38736 14.5577 7.49176C14.9349 7.88843 15.2701 8.31798 15.5585 8.77579C15.9214 8.98547 16.3483 8.96378 16.8866 8.73878C17.3088 8.56231 17.7621 8.24881 18.1804 7.85746C18.4 8.1571 18.6064 8.46655 18.7989 8.78489C18.3377 9.19889 17.8314 9.53887 17.3014 9.76032C16.9459 9.90889 16.5665 9.99957 16.1898 10.0098C16.3697 10.4564 16.5062 10.9199 16.5974 11.3934C16.9048 11.6224 17.3149 11.6867 17.8455 11.6169C18.4431 11.5385 19.1456 11.2575 19.7924 10.8503C20.0933 11.6764 20.2923 12.5229 20.3709 13.3665L21.4553 13.263C21.3571 12.2084 21.0992 11.1616 20.7039 10.1538C21.1713 9.72521 21.5508 9.24589 21.7682 8.79234C21.9398 8.43432 22.0203 8.11793 21.9956 7.82607C21.6769 7.05244 21.2832 6.31295 20.8203 5.61851C20.6153 6.44 20.1628 7.2479 19.5865 7.95541C19.3825 7.6337 19.1619 7.32049 18.9298 7.01509C19.3725 6.41328 19.694 5.74667 19.8031 5.17879C19.872 4.82078 19.8721 4.52318 19.7886 4.2717C19.1021 3.49127 18.3243 2.7989 17.4725 2.20998C17.5263 3.0793 17.2958 4.01459 16.9048 4.87588C16.6188 4.63231 16.3232 4.39904 16.0169 4.17947C16.2853 3.51174 16.4237 2.81162 16.3862 2.26171C16.3605 1.88525 16.2783 1.6016 16.1151 1.39168C15.2922 0.963686 14.4251 0.62972 13.5296 0.395905C13.5368 0.41571 13.5448 0.4351 13.5515 0.455023C13.7987 1.18542 13.8265 2.0289 13.7043 2.85483C13.3612 2.70432 13.0115 2.56993 12.6563 2.45207C12.7161 1.84694 12.6697 1.25257 12.5216 0.815224C12.4063 0.474412 12.2622 0.244742 12.0595 0.107708C11.1734 -0.0103393 10.2773 -0.0314268 9.38673 0.0448081C9.38836 0.0473501 9.39052 0.0496557 9.39221 0.0521977C9.73619 0.58248 9.94433 1.23277 10.0417 1.90706C9.67482 1.87378 9.30307 1.85646 8.92823 1.85906C8.83612 1.39085 8.67688 0.959885 8.48242 0.66016C8.34466 0.447752 8.21436 0.308649 8.07299 0.229609C7.2001 0.400035 6.3479 0.665794 5.53128 1.02225C5.85558 1.33835 6.11118 1.73952 6.3082 2.17871C5.94908 2.2648 5.59391 2.36714 5.24378 2.48541C5.09746 2.20135 4.92565 1.95678 4.75977 1.8C4.62143 1.66923 4.51814 1.59888 4.42324 1.57459C3.79928 1.92567 3.2058 2.32991 2.64919 2.78294C2.87021 2.93913 3.06723 3.13351 3.24423 3.35C2.91468 3.52471 2.59178 3.71205 2.27622 3.91161C2.15011 3.78108 2.02237 3.67792 1.91582 3.61792C1.85934 3.58611 1.8194 3.56353 1.78668 3.54958C1.65918 3.67441 1.53423 3.8019 1.4119 3.93195C0.690172 4.93062 0.328958 5.74112 -9.27688e-07 6.77697L0.000173645 6.77703ZM3.54815 20.1469L11.1007 18.7226L11.1007 9.02165L3.85196 7.66751L7.54911 11.0926L3.63735 13.751L7.54916 16.4113L3.54821 20.1468L3.54815 20.1469ZM12.1888 18.5175L13.3076 18.3069L13.3076 9.4337L12.1887 9.22484L12.1887 18.5174L12.1888 18.5175Z\",\n  fill: \"#2BD9D9\"\n})], -1 /* HOISTED */);\nconst _hoisted_47 = {\n  class: \"PlayerMenuBattlePass__battlePass-list-section\"\n};\nconst _hoisted_48 = {\n  ref: \"itemsLists\"\n};\nconst _hoisted_49 = {\n  class: \"PlayerMenuBattlePass__battlePass-prize-list\"\n};\nconst _hoisted_50 = {\n  key: 1,\n  class: \"PlayerMenuBattlePass__battlePass-list-item-split\"\n};\nconst _hoisted_51 = {\n  class: \"PlayerMenuBattlePass__progress-section\"\n};\nconst _hoisted_52 = {\n  class: \"PlayerMenuBattlePass__progress-item-info\"\n};\nconst _hoisted_53 = {\n  key: 0,\n  class: \"PlayerMenuBattlePass__progress-item-value\"\n};\nconst _hoisted_54 = {\n  key: 1,\n  class: \"PlayerMenuBattlePass__battlePass-list-item-split\"\n};\nconst _hoisted_55 = {\n  key: 0,\n  class: \"PlayerMenuBattlePass__taskList-section-modal\"\n};\nconst _hoisted_56 = {\n  class: \"PlayerMenuBattlePass__taskList-section-modal-content\"\n};\nconst _hoisted_57 = {\n  class: \"PlayerMenuBattlePass__taskList-section-modal-content-header\"\n};\nconst _hoisted_58 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"16\",\n  height: \"16\",\n  viewBox: \"0 0 16 16\",\n  fill: \"none\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M3.33301 3.3335L12.6663 12.6668M12.6663 3.3335L3.33301 12.6668\",\n  stroke: \"#5D7171\",\n  \"stroke-width\": \"1.5\",\n  \"stroke-linecap\": \"round\"\n})], -1 /* HOISTED */);\nconst _hoisted_59 = [_hoisted_58];\nconst _hoisted_60 = {\n  class: \"PlayerMenuBattlePass__taskList-section-modal-content-main-section\"\n};\nconst _hoisted_61 = {\n  class: \"PlayerMenuBattlePass__taskList-section-modal-content-title\"\n};\nconst _hoisted_62 = {\n  class: \"PlayerMenuBattlePass__taskList-section-modal-content-main\"\n};\nconst _hoisted_63 = {\n  class: \"PlayerMenuBattlePass__taskList-section-modal-content-main-list\"\n};\nconst _hoisted_64 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_5\n}, null, -1 /* HOISTED */);\nconst _hoisted_65 = /*#__PURE__*/_createElementVNode(\"div\", null, \"EXP\", -1 /* HOISTED */);\nconst _hoisted_66 = {\n  class: \"PlayerMenuBattlePass__taskList-section-modal-content-main-list-item-info\"\n};\nconst _hoisted_67 = [\"onClick\"];\nconst _hoisted_68 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"12\",\n  height: \"12\",\n  viewBox: \"0 0 12 12\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  \"fill-rule\": \"evenodd\",\n  \"clip-rule\": \"evenodd\",\n  d: \"M6 0C6.52322 0 6.94737 0.424151 6.94737 0.947368V5.05263H11.0526C11.5758 5.05263 12 5.47678 12 6C12 6.52322 11.5758 6.94737 11.0526 6.94737H6.94737V11.0526C6.94737 11.5758 6.52322 12 6 12C5.47678 12 5.05263 11.5758 5.05263 11.0526V6.94737H0.947368C0.424151 6.94737 0 6.52322 0 6C0 5.47678 0.424151 5.05263 0.947368 5.05263H5.05263V0.947368C5.05263 0.424151 5.47678 0 6 0Z\"\n})], -1 /* HOISTED */);\nconst _hoisted_69 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"12\",\n  height: \"10\",\n  viewBox: \"0 0 12 10\",\n  fill: \"none\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M4.8371 10C4.32342 10 3.90963 9.807 3.55291 9.42099L0.356718 6.07961C0.11415 5.8263 0 5.56092 0 5.28347C0 4.66827 0.570749 4.20989 1.26992 4.20989C1.71225 4.20989 2.08323 4.37877 2.35434 4.6924L4.78002 7.31001L9.56005 0.603136C9.83115 0.217129 10.2449 0 10.6873 0C11.4007 0 12 0.446321 12 1.02533C12 1.30277 11.8288 1.59228 11.6718 1.80941L6.06421 9.39686C5.77883 9.78287 5.3365 10 4.8371 10Z\",\n  fill: \"white\"\n})], -1 /* HOISTED */);\nconst _hoisted_70 = [_hoisted_68, _hoisted_69];\nconst _hoisted_71 = {\n  class: \"PlayerMenuBattlePass__taskList-section-modal-content-main-buttons\"\n};\nconst _hoisted_72 = {\n  id: \"selectedItemModal\",\n  class: \"PlayerMenuBattlePass__taskList-section-modal-content PlayerMenuBattlePass__taskList-section-modal-content--card-modal\"\n};\nconst _hoisted_73 = {\n  class: \"PlayerMenuBattlePass__taskList-section-modal-content-header\"\n};\nconst _hoisted_74 = {\n  class: \"PlayerMenuBattlePass__taskList-section-modal-content-main-section\"\n};\nconst _hoisted_75 = {\n  class: \"PlayerMenuBattlePass__taskList-section-modal-content-main PlayerMenuBattlePass__taskList-section-modal-content-main-card-modal\"\n};\nconst _hoisted_76 = {\n  class: /*#__PURE__*/_normalizeClass(`PlayerMenuBattlePass__modal-content-main-item-img-section`)\n};\nconst _hoisted_77 = [\"src\"];\nconst _hoisted_78 = {\n  key: 0,\n  class: \"PlayerMenuBattlePass__taskList-section-modal-content-arrows\"\n};\nconst _hoisted_79 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"21\",\n  height: \"25\",\n  viewBox: \"0 0 21 25\",\n  fill: \"none\"\n}, [/*#__PURE__*/_createElementVNode(\"g\", {\n  opacity: \"0.7\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M8.7427 24.1384C8.32541 23.7001 8.28748 23.0142 8.62889 22.5309L8.7427 22.3925L18.1612 12.5L8.7427 2.60754C8.32541 2.16924 8.28748 1.48337 8.62889 1.00006L8.7427 0.861597C9.15998 0.423298 9.81296 0.383452 10.2731 0.742061L10.4049 0.861597L20.6542 11.627C21.0715 12.0653 21.1094 12.7512 20.768 13.2345L20.6542 13.373L10.4049 24.1384C9.94591 24.6205 9.20171 24.6205 8.7427 24.1384Z\",\n  fill: \"#E5FFFF\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  opacity: \"0.25\",\n  d: \"M0.344259 24.1384C-0.0730246 23.7001 -0.110959 23.0142 0.230454 22.5309L0.344259 22.3925L9.76278 12.5L0.344259 2.60754C-0.0730246 2.16924 -0.110959 1.48337 0.230454 1.00006L0.344259 0.861597C0.761542 0.423298 1.41452 0.383452 1.87466 0.742061L2.00649 0.861597L12.2557 11.627C12.673 12.0653 12.711 12.7512 12.3695 13.2345L12.2557 13.373L2.00649 24.1384C1.54748 24.6205 0.803271 24.6205 0.344259 24.1384Z\",\n  fill: \"#E5FFFF\"\n})])], -1 /* HOISTED */);\nconst _hoisted_80 = [_hoisted_79];\nconst _hoisted_81 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"21\",\n  height: \"25\",\n  viewBox: \"0 0 21 25\",\n  fill: \"none\"\n}, [/*#__PURE__*/_createElementVNode(\"g\", {\n  opacity: \"0.7\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M8.7427 24.1384C8.32541 23.7001 8.28748 23.0142 8.62889 22.5309L8.7427 22.3925L18.1612 12.5L8.7427 2.60754C8.32541 2.16924 8.28748 1.48337 8.62889 1.00006L8.7427 0.861597C9.15998 0.423298 9.81296 0.383452 10.2731 0.742061L10.4049 0.861597L20.6542 11.627C21.0715 12.0653 21.1094 12.7512 20.768 13.2345L20.6542 13.373L10.4049 24.1384C9.94591 24.6205 9.20171 24.6205 8.7427 24.1384Z\",\n  fill: \"#E5FFFF\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  opacity: \"0.25\",\n  d: \"M0.344259 24.1384C-0.0730246 23.7001 -0.110959 23.0142 0.230454 22.5309L0.344259 22.3925L9.76278 12.5L0.344259 2.60754C-0.0730246 2.16924 -0.110959 1.48337 0.230454 1.00006L0.344259 0.861597C0.761542 0.423298 1.41452 0.383452 1.87466 0.742061L2.00649 0.861597L12.2557 11.627C12.673 12.0653 12.711 12.7512 12.3695 13.2345L12.2557 13.373L2.00649 24.1384C1.54748 24.6205 0.803271 24.6205 0.344259 24.1384Z\",\n  fill: \"#E5FFFF\"\n})])], -1 /* HOISTED */);\nconst _hoisted_82 = [_hoisted_81];\nconst _hoisted_83 = {\n  class: \"PlayerMenuBattlePass__taskList-section-modal-content-buttons\"\n};\nconst _hoisted_84 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  width: \"2.8rem\",\n  height: \"1.1rem\",\n  viewBox: \"0 0 28 11\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M2.24002 10.9814H10.4916L13.2711 7.98145L14.8812 10.9814H19.1465L19.6933 8.36716H21.8197C22.8728 8.36716 23.7942 8.19573 24.584 7.85287C25.384 7.51002 25.9966 7.0243 26.4219 6.39573C26.8573 5.76716 27.075 5.03383 27.075 4.19573C27.075 3.91937 27.0474 3.65983 26.9923 3.41709L24.033 4.32146C24.0358 4.3595 24.0372 4.39854 24.0372 4.43859C24.0372 4.98145 23.855 5.40049 23.4905 5.69573C23.136 5.99097 22.6247 6.13859 21.9564 6.13859H20.1641L20.3085 5.45969L17.1051 6.43865L16.6766 8.4535L15.7546 6.85137L2.24002 10.9814Z\",\n  fill: \"#E5FFFF\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M17.3491 5.29117L17.7542 3.38587L15.2916 5.91995L10.3717 7.42346L11.9497 5.81002L10.4616 3.16716H5.23606L4.88672 4.85287H9.61042L9.16995 6.96716H4.43106L4.05134 8.79573H5.88134L0.75 10.3639L2.7451 0.981445H12.4358L13.985 3.85287L16.6886 0.981445H22.7614C24.1385 0.981445 25.2017 1.2624 25.951 1.8243C26.2034 2.01359 26.4133 2.2288 26.5807 2.46996L23.4446 3.42836C23.1732 3.2828 22.8138 3.21002 22.3665 3.21002H20.7869L20.5525 4.3122L17.3491 5.29117Z\",\n  fill: \"#E5FFFF\"\n})], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Glow = _resolveComponent(\"Glow\");\n  const _component_BattlePassCard = _resolveComponent(\"BattlePassCard\");\n  const _component_BattlePassBg = _resolveComponent(\"BattlePassBg\");\n  const _component_CdnResolverImage = _resolveComponent(\"CdnResolverImage\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" <div class=\\\"PlayerMenuBattlePass-decor\\\">\\r\\n      <img src=\\\"../Assets/BattlePass/girland-left.png\\\" />\\r\\n      <img src=\\\"../Assets/BattlePass/girland-top.png\\\" />\\r\\n    </div> \"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_Glow, {\n    \"main-color\": \"#FFCC4D\"\n  }), _hoisted_3, $options.battlePassData.currentLevel < 100 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"ПРИ ДОСТИЖЕНИИ\")), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"100 уровня\")), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"PlayerMenuBattlePass_bigPrize-info PlayerMenuBattlePass_bigPrize-info--take\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.takeBigPrize && $options.takeBigPrize(...args))\n  }, [_hoisted_5, _createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"ЗАБРАТЬ\")), 1 /* TEXT */)])), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(), _createElementBlock(\"svg\", _hoisted_7, [_hoisted_8, _createElementVNode(\"circle\", {\n    cx: \"4rem\",\n    cy: \"4rem\",\n    r: \"3.2rem\",\n    stroke: \"#FFCC4D\",\n    \"stroke-width\": \"0.6rem\",\n    fill: \"none\",\n    pathLength: \"100\",\n    \"stroke-dashoffset\": $options.getStrokeDashoffset($options.battlePassData.currentLevel, 100)\n  }, null, 8 /* PROPS */, _hoisted_9)])), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", null, _toDisplayString($options.battlePassData.currentLevel), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"из\")) + \" 100\", 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", null, [_createTextVNode(_toDisplayString($options.battlePassData.endDays) + \" \", 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(_ctx.$t(\"дн.\")), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_12, _toDisplayString(_ctx.$t(\"ЛЕТНИЙ\")), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_13, _toDisplayString(_ctx.$t(\"ПРОПУСК 2023\")), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_14, _toDisplayString(_ctx.$t(\"Представляем вам летний пропуск! Получайте награды за выполнение заданий. Вы можете приобрести премиум пропуск, а также бонус к уровням, чтобы получить ещё больше наград!\")), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"Бесплатный EXP через:\")), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString($options.battlePassData.timeExpAdd + _ctx.$t(\" мин.\")), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_16, [$data.isShowTaskList ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [!$options.battlePassData.selectedTasks?.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_hoisted_20, _createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"Выберите 5 заданий \")), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"из предложенного списка \")), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = () => $data.isShowListOfTasks = true)\n  }, _toDisplayString(_ctx.$t(\"Выбрать задания\")), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.battlePassData.selectedTasks, task => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([\"PlayerMenuBattlePass__task\", {\n        'PlayerMenuBattlePass__task--done': task.progress === 'done'\n      }]),\n      key: task.taskName\n    }, [_createElementVNode(\"div\", _hoisted_22, _toDisplayString(task.taskName), 1 /* TEXT */), task.progress !== 'done' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createTextVNode(_toDisplayString(task.progress.split(\"/\")[0]), 1 /* TEXT */), _createElementVNode(\"span\", null, \"/\" + _toDisplayString(task.progress.split(\"/\")[1]), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_25, _toDisplayString(task.reward) + \" exp \", 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_26, _hoisted_28))], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.battlePassData.offers, (offer, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"PlayerMenuBattlePass__buy-lvl-item\",\n      key: offer\n    }, [_createElementVNode(\"div\", null, [_createElementVNode(\"img\", {\n      src: require(`../Assets/BattlePass/lvlup-${i + 1}.svg`)\n    }, null, 8 /* PROPS */, _hoisted_30), _createElementVNode(\"div\", _hoisted_31, _toDisplayString(`+ ${offer.count * 1000} EXP`), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n      onClick: () => $options.buyLvl(offer)\n    }, [_createTextVNode(_toDisplayString(offer.price) + \" \", 1 /* TEXT */), _hoisted_33], 8 /* PROPS */, _hoisted_32)]);\n  }), 128 /* KEYED_FRAGMENT */))])), _createElementVNode(\"div\", _hoisted_34, [_createElementVNode(\"div\", {\n    class: \"PlayerMenuBattlePass__buy-lvl-btn\",\n    onClick: _cache[2] || (_cache[2] = $event => $data.isShowTaskList = !$data.isShowTaskList)\n  }, _toDisplayString(_ctx.$t($data.isShowTaskList ? \"Купить уровень\" : \"Список заданий\")), 1 /* TEXT */), $data.isShowTaskList && $options.battlePassData.selectedTasks?.length ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.onResetTasks && $options.onResetTasks(...args))\n  }, _hoisted_36)) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_37, [_createElementVNode(\"div\", _hoisted_38, [_hoisted_39, _createElementVNode(\"div\", _hoisted_40, [_hoisted_41, _createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"ОБЫЧНЫЙ\")), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"пропуск\")), 1 /* TEXT */)])]), $options.battlePassData.hasPrime ? (_openBlock(), _createElementBlock(\"div\", _hoisted_42, [_hoisted_43, _createElementVNode(\"div\", null, [_hoisted_44, _createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"ПРЕМИУМ\")), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"пропуск\")), 1 /* TEXT */)])])) : (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"PlayerMenuBattlePass__battlePass-list-section-info PlayerMenuBattlePass__battlePass-list-section-info\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.buyPass && $options.buyPass(...args))\n  }, [_hoisted_45, _createElementVNode(\"div\", null, [_hoisted_46, _createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"КУПИТЬ\")), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"ПРЕМИУМ пропуск\")), 1 /* TEXT */)])]))]), _createElementVNode(\"div\", {\n    class: \"PlayerMenuBattlePass__battlePass-section\",\n    onMousedown: _cache[5] || (_cache[5] = (...args) => $options.onMoveScroll && $options.onMoveScroll(...args)),\n    onWheel: _cache[6] || (_cache[6] = (...args) => $options.onWheel && $options.onWheel(...args))\n  }, [_createElementVNode(\"div\", _hoisted_47, [_createElementVNode(\"div\", _hoisted_48, [_createElementVNode(\"div\", _hoisted_49, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.battlePassData.prizes, prize => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"PlayerMenuBattlePass__battlePass-list-item-wrapper\",\n      key: prize.level,\n      ref_for: true,\n      ref: \"battlePassDataPrizeItem\"\n    }, [!Array.isArray(prize.freeItem) && prize.level !== 100 ? (_openBlock(), _createBlock(_component_BattlePassCard, {\n      key: 0,\n      prize: prize.freeItem,\n      onClick: () => $options.showItemModal(prize, true)\n    }, null, 8 /* PROPS */, [\"prize\", \"onClick\"])) : prize.level !== 100 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_50, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(prize.freeItem, (item, i) => {\n      return _openBlock(), _createBlock(_component_BattlePassCard, {\n        prize: item,\n        key: item,\n        isSplited: true,\n        onClick: () => $options.showItemModal(prize, true, i)\n      }, null, 8 /* PROPS */, [\"prize\", \"onClick\"]);\n    }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(4 - prize.freeItem.length, item => {\n      return _openBlock(), _createBlock(_component_BattlePassCard, {\n        prize: item,\n        key: item,\n        isSplited: true\n      }, null, 8 /* PROPS */, [\"prize\"]);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_51, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.battlePassData.prizes, (i, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"PlayerMenuBattlePass__progress-item\",\n      key: i.level\n    }, [_createElementVNode(\"div\", {\n      class: _normalizeClass([\"PlayerMenuBattlePass__progress-item-circle\", {\n        'PlayerMenuBattlePass__progress-item-circle--pasted': $options.battlePassData.currentLevel === i.level,\n        'PlayerMenuBattlePass__progress-item-circle--ended': $options.getProgressStyle(i.level) === '100%'\n      }])\n    }, _toDisplayString(i.level), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", _hoisted_52, [_createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"Уровень\") + \" \") + _toDisplayString(i.level), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(\n    // (i.level > 100\n    //   ? battlePassData.maxExpAfter100\n    //   : battlePassData.maxExp) - battlePassData.currentExp\n    Math.min($options.battlePassData.startExp + (i.level - 1) * $options.battlePassData.expStep, $options.battlePassData.maxExp)) + \" EXP \", 1 /* TEXT */)]), $options.battlePassData.prizes.length !== index + 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_53, [_createElementVNode(\"div\", {\n      class: \"PlayerMenuBattlePass__progress-item-innervalue\",\n      style: _normalizeStyle({\n        width: $options.getProgressStyle(i.level)\n      })\n    }, null, 4 /* STYLE */)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"PlayerMenuBattlePass__battlePass-prize-list\", {\n      'PlayerMenuBattlePass__battlePass-prize-list--disabled': !$options.battlePassData.hasPrime\n    }])\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.battlePassData.prizes, prize => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"PlayerMenuBattlePass__battlePass-list-item-wrapper\",\n      key: prize.level\n    }, [!Array.isArray(prize.premiumItem) && prize.level !== 100 ? (_openBlock(), _createBlock(_component_BattlePassCard, {\n      key: 0,\n      onClick: () => $options.battlePassData.hasPrime && $options.showItemModal(prize, false),\n      isPrimeBlocked: !$options.battlePassData.hasPrime,\n      prize: prize.premiumItem\n    }, null, 8 /* PROPS */, [\"onClick\", \"isPrimeBlocked\", \"prize\"])) : prize.level !== 100 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_54, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(prize.premiumItem, (item, i) => {\n      return _openBlock(), _createBlock(_component_BattlePassCard, {\n        prize: item,\n        key: item,\n        isPrimeBlocked: !$options.battlePassData.hasPrime,\n        isSplited: true,\n        onClick: () => $options.battlePassData.hasPrime && $options.showItemModal(prize, false, i)\n      }, null, 8 /* PROPS */, [\"prize\", \"isPrimeBlocked\", \"onClick\"]);\n    }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(4 - prize.premiumItem.length, item => {\n      return _openBlock(), _createBlock(_component_BattlePassCard, {\n        prize: item,\n        key: item,\n        isSplited: true\n      }, null, 8 /* PROPS */, [\"prize\"]);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */)], 512 /* NEED_PATCH */)])], 32 /* HYDRATE_EVENTS */), _createVNode(_Transition, {\n    name: \"showModal\"\n  }, {\n    default: _withCtx(() => [$data.isShowListOfTasks ? (_openBlock(), _createElementBlock(\"div\", _hoisted_55, [_createElementVNode(\"div\", _hoisted_56, [_createElementVNode(\"div\", _hoisted_57, [_createElementVNode(\"div\", null, _toDisplayString(_ctx.$t(\"Список заданий\")), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: _cache[7] || (_cache[7] = () => $data.isShowListOfTasks = false)\n    }, _hoisted_59)]), _createElementVNode(\"div\", _hoisted_60, [_createElementVNode(\"div\", _hoisted_61, _toDisplayString(_ctx.$t(`Выбрано:`) + ` ${$data.listOfSelectedTasks.length}/5`), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_62, [_createElementVNode(\"div\", _hoisted_63, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.battlePassData.tasks, (task, i) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"PlayerMenuBattlePass__taskList-section-modal-content-main-list-item\",\n        key: i\n      }, [_createElementVNode(\"div\", null, [_hoisted_64, _createElementVNode(\"div\", null, [_createElementVNode(\"div\", null, _toDisplayString(task.reward), 1 /* TEXT */), _hoisted_65])]), _createElementVNode(\"div\", _hoisted_66, _toDisplayString(task.taskName), 1 /* TEXT */), _createElementVNode(\"button\", {\n        onClick: () => $options.selectTask(task),\n        class: _normalizeClass([\"PlayerMenuBattlePass__taskList-section-modal-content-main-list-item-button\", {\n          'PlayerMenuBattlePass__taskList-section-modal-content-main-list-item-button--selected': $data.listOfSelectedTasks.includes(task)\n        }])\n      }, _hoisted_70, 10 /* CLASS, PROPS */, _hoisted_67)]);\n    }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_71, [_createElementVNode(\"button\", {\n      onClick: _cache[8] || (_cache[8] = (...args) => $options.updateTaskList && $options.updateTaskList(...args)),\n      class: \"abled\"\n    }, _toDisplayString(_ctx.$t(\"Обновить за 50 монет\")), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: _cache[9] || (_cache[9] = (...args) => $options.selectTasks && $options.selectTasks(...args)),\n      class: _normalizeClass({\n        abled: $data.listOfSelectedTasks.length === 5\n      })\n    }, _toDisplayString(_ctx.$t(\"Применить\")), 3 /* TEXT, CLASS */)])])])])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createVNode(_Transition, {\n    name: \"showModal\"\n  }, {\n    default: _withCtx(() => [$data.selectedItem && $data.isShowItemModal ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"PlayerMenuBattlePass__taskList-section-modal\",\n      onClick: _cache[15] || (_cache[15] = (...args) => $options.hideModal && $options.hideModal(...args))\n    }, [_createElementVNode(\"div\", _hoisted_72, [_createElementVNode(\"div\", _hoisted_73, [_createElementVNode(\"div\", null, _toDisplayString($data.selectedItem.name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_74, [_createElementVNode(\"div\", _hoisted_75, [_createElementVNode(\"div\", _hoisted_76, [_createVNode(_component_BattlePassBg, {\n      mainColor: $data.bindRarity[$data.selectedItem.rarity]\n    }, null, 8 /* PROPS */, [\"mainColor\"]), _createElementVNode(\"div\", {\n      class: _normalizeClass(`PlayerMenuBattlePass__modal-content-main-item-img-wrapper PlayerMenuBattlePass__modal-content-main-item-img-wrapper--${$data.selectedItem.image !== 'Gift' && $data.selectedItem.ObjectType}`)\n    }, [$data.selectedItem.ObjectType !== 'AnimationItemPrize' ? (_openBlock(), _createBlock(_component_CdnResolverImage, {\n      path: $options.GetImagePath($data.selectedItem, true),\n      key: $data.colorIndex\n    }, null, 8 /* PROPS */, [\"path\"])) : (_openBlock(), _createElementBlock(\"video\", {\n      key: 1,\n      ref: \"anim\",\n      loop: \"loop\",\n      autoplay: \"\",\n      src: `https://cdn.nexus-rp.net/animations/${$data.selectedItem.animatioin}`\n    }, null, 8 /* PROPS */, _hoisted_77))], 2 /* CLASS */), $data.selectedItem.ObjectType == 'ClothesItemPrize' && $data.selectedItem.colors.length > 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_78, [_createElementVNode(\"button\", {\n      onClick: _cache[10] || (_cache[10] = () => $options.moveColorIndex('-'))\n    }, _hoisted_80), _createElementVNode(\"button\", {\n      onClick: _cache[11] || (_cache[11] = () => $options.moveColorIndex('+'))\n    }, _hoisted_82)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_83, [_createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      onClick: _cache[12] || (_cache[12] = (...args) => $options.takePrize && $options.takePrize(...args)),\n      class: \"PlayerMenuBattlePass__taskList-section-modal-content-button\"\n    }, _toDisplayString(_ctx.$t($data.selectedItem.ObjectType === \"BattlePassCasePrize\" ? \"Открыть кейс\" : \"Забрать приз\")), 1 /* TEXT */), $data.selectedItem.sprayAmount ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: _cache[13] || (_cache[13] = (...args) => $options.sprayPrize && $options.sprayPrize(...args)),\n      class: \"PlayerMenuBattlePass__taskList-section-modal-content-button\"\n    }, [_createTextVNode(_toDisplayString(_ctx.$t(\"Распылить на \") + $data.selectedItem.sprayAmount) + \" \", 1 /* TEXT */), _hoisted_84])) : _createCommentVNode(\"v-if\", true)]), $data.selectedItem.ObjectType !== 'BattlePassCasePrize' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: _cache[14] || (_cache[14] = (...args) => $options.asidePrize && $options.asidePrize(...args)),\n      class: \"PlayerMenuBattlePass__taskList-section-modal-content-button\"\n    }, _toDisplayString(_ctx.$t(\"Отложить в мои призы\")), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])])])])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  })]);\n}","map":null,"metadata":{},"sourceType":"module"}