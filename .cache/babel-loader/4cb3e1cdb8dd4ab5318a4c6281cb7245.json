{"ast":null,"code":"import SewingMinigameContent from \"./SewingMinigameContent.vue\";\nimport data from \"./Assets/data\";\nexport default {\n  data() {\n    return {\n      selectedMiniGameIndex: 5,\n      playedMiniGames: [],\n      bindName: [\"ChristmasTree\", \"Tree\", \"Tr\", \"T\", \"FS\"],\n      step: 0,\n      maxStep: 3,\n      count: 1,\n      score: 2,\n      wincount: 0,\n      priviusScore: 0\n    };\n  },\n  computed: {\n    dataValues() {\n      return Object.values(data);\n    },\n    selectedMiniGame() {\n      return this.dataValues[this.selectedMiniGameIndex];\n    }\n  },\n  methods: {\n    onEndStep(score) {\n      this.priviusScore = this.score;\n      this.score += score;\n      this.count++;\n      if (score > 0) {\n        this.wincount++;\n      }\n      setTimeout(() => {\n        if (this.count > this.maxStep) {\n          this.$callClient(\"C:SewingMinigame:EndGame\", this.wincount);\n          this.step = 0;\n          return;\n        }\n        this.step++;\n        this.generateRandomSelectedMiniGame();\n      }, 1000);\n    },\n    onStartGame() {\n      this.generateRandomSelectedMiniGame();\n      this.step++;\n    },\n    generateRandomSelectedMiniGame() {\n      let randomIndex;\n      do {\n        randomIndex = Math.floor(Math.random() * this.dataValues.length);\n      } while (this.playedMiniGames.includes(randomIndex));\n      this.playedMiniGames.push(randomIndex);\n      this.selectedMiniGameIndex = randomIndex;\n    }\n  },\n  components: {\n    SewingMinigameContent\n  },\n  mounted() {\n    this.onStartGame();\n  }\n};","map":null,"metadata":{},"sourceType":"module"}