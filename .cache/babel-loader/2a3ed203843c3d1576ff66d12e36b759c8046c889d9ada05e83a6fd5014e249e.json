{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"SewingMinigame-container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SewingMinigameContent = _resolveComponent(\"SewingMinigameContent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.count > 1 ? (_openBlock(), _createElementBlock(\"div\", {\n    class: \"statusBar\",\n    key: $data.count\n  }, [$data.score - $data.priviusScore ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(_ctx.$t(\"ти впорався\")), 1)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(_ctx.$t(\"ПОРАЗКА\")), 1))])) : _createCommentVNode(\"\", true), _createVNode(_Transition, {\n    name: \"fadeIcon\"\n  }, {\n    default: _withCtx(() => [$data.step ? (_openBlock(), _createBlock(_component_SewingMinigameContent, {\n      key: $data.selectedMiniGameIndex,\n      sendedTargetCells: $options.selectedMiniGame.targetCells,\n      gameStep: $data.step,\n      maxStep: $data.maxStep,\n      onOnEndGame: _cache[0] || (_cache[0] = data => $options.onEndStep(data))\n    }, null, 8, [\"sendedTargetCells\", \"gameStep\", \"maxStep\"])) : _createCommentVNode(\"\", true)]),\n    _: 1\n  })]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}