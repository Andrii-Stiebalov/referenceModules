{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nexport function setParticles() {\n  let particles = document.querySelectorAll('.particles'),\n    radius = 1.8,\n    number = 300;\n  particles.forEach(node => {\n    let color = node.dataset.color;\n    const ctx = node.getContext('2d'),\n      clr = hexToRgbA(color),\n      width = window.innerWidth,\n      height = window.innerHeight;\n    node.width = width;\n    node.height = height;\n    ctx.fillStyle = clr;\n    Dot.prototype = {\n      create: function () {\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n        ctx.fill();\n      },\n      animate: function () {\n        for (let i = 0; i < dots.num; i++) {\n          let dot = dots.array[i];\n          if (dot.x < 0 || dot.x > width) {\n            dot.vx = -dot.vx;\n            dot.vy = dot.vy;\n          } else if (dot.y < 0 || dot.y > height) {\n            dot.vx = dot.vx;\n            dot.vy = -dot.vy;\n          }\n          dot.x += dot.vx;\n          dot.y += dot.vy;\n        }\n      }\n    };\n    let dots = {\n      num: number,\n      distance: 200,\n      d_radius: 200,\n      velocity: -.9,\n      array: []\n    };\n    function Dot() {\n      this.x = Math.random() * width;\n      this.y = Math.random() * height;\n      this.vx = dots.velocity + Math.random();\n      this.vy = dots.velocity + Math.random();\n      this.radius = Math.random() * radius;\n    }\n    function createDots() {\n      ctx.clearRect(0, 0, width, height);\n      let dot = dots[0];\n      for (let i = 0; i < dots.num; i++) {\n        dots.array.push(new Dot());\n        dot = dots.array[i];\n        dot.create();\n      }\n      dot.animate();\n    }\n    setInterval(createDots, 1000 / 30);\n  });\n}\nfunction hexToRgbA(hex) {\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n    let c = hex.substring(1).split('');\n    if (c.length == 3) {\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n    }\n    c = `0x${c.join('')}`;\n    return `rgba(${[c >> 16 & 255, c >> 8 & 255, c & 255].join(',')}, 1`;\n  }\n  throw new Error('Bad Hex');\n}","map":null,"metadata":{},"sourceType":"module"}