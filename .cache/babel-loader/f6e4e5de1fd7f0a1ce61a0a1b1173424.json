{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"Workbench_main\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"Workbench_main-craft-title\"\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_WorkbenchChence = _resolveComponent(\"WorkbenchChence\");\n  const _component_WorkbenchCraftPrev = _resolveComponent(\"WorkbenchCraftPrev\");\n  const _component_HexogoneBgProgressBar = _resolveComponent(\"HexogoneBgProgressBar\");\n  const _component_WorkbenchRecipe = _resolveComponent(\"WorkbenchRecipe\");\n  const _component_FiguresListMiniGame = _resolveComponent(\"FiguresListMiniGame\");\n  const _component_WorkbenchActionSection = _resolveComponent(\"WorkbenchActionSection\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_WorkbenchChence, {\n    chance: $props.selectedRecipe.CraftChance,\n    IsVip: $props.selectedRecipe.IsVip,\n    ChanceBoost: $props.ChanceBoost\n  }, null, 8 /* PROPS */, [\"chance\", \"IsVip\", \"ChanceBoost\"]), _createVNode(_component_WorkbenchCraftPrev, {\n    selectedRecipe: $props.selectedRecipe,\n    CurrentItem: $props.CurrentItem,\n    Progress: $props.Progress,\n    Count: $props.Count,\n    countMult: $data.count\n  }, null, 8 /* PROPS */, [\"selectedRecipe\", \"CurrentItem\", \"Progress\", \"Count\", \"countMult\"]), false ? (_openBlock(), _createBlock(_component_HexogoneBgProgressBar, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), !$props.CurrentItem ? (_openBlock(), _createBlock(_component_WorkbenchRecipe, {\n    key: 1,\n    selectedRecipe: $props.selectedRecipe,\n    inventoryMap: $options.inventoryMap,\n    count: $data.count\n  }, null, 8 /* PROPS */, [\"selectedRecipe\", \"inventoryMap\", \"count\"])) : _createCommentVNode(\"v-if\", true), $data.isShowMiniGame ? (_openBlock(), _createBlock(_component_FiguresListMiniGame, {\n    key: 2\n  })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_WorkbenchActionSection, {\n    setCount: $options.setCount,\n    Progress: $props.Progress,\n    CraftTime: $props.selectedRecipe.CraftTime,\n    isHaveEnoughItemsAll: $options.isHaveEnoughItemsAll,\n    CurrentItem: $props.CurrentItem,\n    onOnClickBtn: $options.onClickBtn,\n    onOnShhowMiniGame: _cache[0] || (_cache[0] = () => $data.isShowMiniGame = !$data.isShowMiniGame),\n    count: $data.count,\n    IsParallelCraft: $props.selectedRecipe?.IsParallelCraft,\n    FastPrice: $props.selectedRecipe.FastCraft,\n    isShowMiniGame: $data.isShowMiniGame,\n    CountIND: $props.Count\n  }, null, 8 /* PROPS */, [\"setCount\", \"Progress\", \"CraftTime\", \"isHaveEnoughItemsAll\", \"CurrentItem\", \"onOnClickBtn\", \"count\", \"IsParallelCraft\", \"FastPrice\", \"isShowMiniGame\", \"CountIND\"])]);\n}","map":null,"metadata":{},"sourceType":"module"}