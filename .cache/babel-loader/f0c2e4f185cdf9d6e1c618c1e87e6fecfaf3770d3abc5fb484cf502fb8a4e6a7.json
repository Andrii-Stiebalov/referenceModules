{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SystemAppHeader from \"../../../../Components/SystemAppHeader.vue\";\nimport Card from \"../Components/Card.vue\";\nexport default {\n  components: {\n    SystemAppHeader,\n    Card\n  },\n  data() {\n    return {\n      transformPositonY: 0,\n      color: \"#3C3C434D\",\n      inputVal: \"\",\n      mainHeight: 0\n    };\n  },\n  watch: {\n    $route(to) {\n      if (to.fullPath.split(\"/\")[4] !== \"main\") {\n        const elem = this.$refs.ActionSection;\n        const height = elem.getBoundingClientRect().height;\n        this.transformPositonY = this.mainHeight - height + this.remToPx(29.1) / 2;\n        this.color = \"#1C1C1EFF\";\n      }\n    }\n  },\n  computed: {\n    bankData() {\n      return this.$store.getters[\"playerMenu/getBankData\"];\n    },\n    getBankTaxes() {\n      return this.$store.getters[\"getBankTaxes\"];\n    },\n    isMainRoute() {\n      return this.$route.fullPath.split(\"/\")[4].toLowerCase() === \"main\";\n    }\n  },\n  methods: {\n    onWheel(e) {\n      const elem = this.$refs.ActionSection;\n      const height = elem.getBoundingClientRect().height;\n      console.log(height, this.transformPositonY, this.mainHeight);\n      let newTransform = this.transformPositonY;\n      const step = 50;\n      if (e.deltaY > 0) {\n        newTransform += step;\n      } else {\n        if (newTransform > 0) {\n          newTransform -= step;\n        } else {\n          newTransform = 0;\n          this.$router.push(\"/Phone/BankApp/Main/Main\");\n        }\n      }\n      if (newTransform > this.mainHeight - height + this.remToPx(29.1) / 2) {\n        newTransform = this.mainHeight - height + this.remToPx(29.1) / 2;\n      }\n      this.transformPositonY = newTransform;\n      const procent = newTransform / 100 > 1 ? 1 : newTransform / 100;\n      this.color = this.blendColors(\"#3C3C434D\", \"#1C1C1EFF\", procent);\n      console.log(this.color);\n    },\n    goToMain() {\n      this.$router.push(\"/Phone/BankApp/Main/Main\");\n    },\n    hexToRgb(hex) {\n      hex = hex.replace(/^#/, \"\");\n      let r = parseInt(hex.substring(0, 2), 16);\n      let g = parseInt(hex.substring(2, 4), 16);\n      let b = parseInt(hex.substring(4, 6), 16);\n      let a = parseInt(hex.substring(6, 8), 16) / 255;\n      return [r, g, b, a];\n    },\n    blendColors(hex1, hex2, percent) {\n      let color1 = this.hexToRgb(hex1);\n      let color2 = this.hexToRgb(hex2);\n      let r = Math.round(color1[0] * (1 - percent) + color2[0] * percent);\n      let g = Math.round(color1[1] * (1 - percent) + color2[1] * percent);\n      let b = Math.round(color1[2] * (1 - percent) + color2[2] * percent);\n      let a = color1[3] * (1 - percent) + color2[3] * percent;\n      return `#${r.toString(16).padStart(2, \"0\")}${g.toString(16).padStart(2, \"0\")}${b.toString(16).padStart(2, \"0\")}${Math.round(a * 255).toString(16).padStart(2, \"0\")}`;\n    },\n    remToPx(rem) {\n      return rem * parseFloat(getComputedStyle(document.documentElement).fontSize);\n    }\n  },\n  mounted() {\n    console.log(\"this.getBankData\");\n    console.log(this.bankData);\n    setTimeout(() => {\n      this.mainHeight = this.$refs.BankAppMain.getBoundingClientRect().height;\n    }, 300);\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}