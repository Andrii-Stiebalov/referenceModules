{"ast":null,"code":"import Switcher from \"../Components/Switcher.vue\";\nimport BankInput from \"../Components/BankInput.vue\";\nimport Lock from \"../Components/Lock.vue\";\nconst Text = {\n  put: {\n    title: \"Пополнение счета\",\n    subtitle: \"Выберите вариант из предложенных\\n или введите свою сумму\\n для пополнения вашего счета\"\n  },\n  get: {\n    title: \"Вывести со счета\",\n    subtitle: \"Выберите вариант из предложенных\\n или введите свою сумму\\n для вывода средств с вашего счета\"\n  }\n};\nexport default {\n  components: {\n    Switcher,\n    BankInput,\n    Lock\n  },\n  data() {\n    return {\n      navigationTabs: [{\n        name: \"Пополнить счет\",\n        route: \"put\",\n        image: \"put\"\n      }, {\n        name: \"Вывести со счета\",\n        route: \"get\",\n        image: \"get\"\n      }],\n      activeTab: null,\n      numbers: [250, 500, 1000, 5000, 50000, 250000],\n      keypadAmount: 250,\n      inputAmount: \"\"\n    };\n  },\n  computed: {\n    getText() {\n      return Text[this.activeTab.route];\n    },\n    getVuexGettersGetBankPermission() {\n      return this.$store.getters.getBankPermisions;\n    },\n    isAvailable() {\n      let type = this.$route.params.type;\n      return type != \"my\" ? this.getVuexGettersGetBankPermission[type][this.activeTab.route] : true;\n    },\n    currentAmount() {\n      return Number(this.inputAmount) ? Number(this.inputAmount) : this.keypadAmount;\n    }\n  },\n  methods: {\n    onAmountInput(e) {\n      e.stopPropagation();\n      this.keypadAmount = 0;\n      if (!/^[0-9]+$/.test(e.target.value)) e.target.value = e.target.value.substring(0, e.target.value.length - 1);\n      if (Number(e.target.value) > 1e9) e.target.value = 1e9 - 1;\n      this.inputAmount = e.target.value;\n    },\n    onAmountChange(e) {\n      if (!e.target.value || !Number(e.target.value)) {\n        this.inputAmount = \"\";\n        this.keypadAmount = this.numbers[0];\n      }\n    },\n    setActiveTab(tab) {\n      this.activeTab = tab;\n      this.keypadAmount = this.numbers[0];\n      this.inputAmount = \"\";\n    },\n    isNumberActive(number) {\n      return this.keypadAmount == number;\n    },\n    setActiveNumber(number) {\n      if (!this.isNumberActive(number)) {\n        this.keypadAmount = number;\n        this.inputAmount = \"\";\n      }\n    },\n    onAction() {\n      if (this.currentAmount) {\n        this.$callClient(\"C:Bank:Management\", this.$route.params.type, this.activeTab.route, this.currentAmount);\n      }\n    }\n  },\n  created() {\n    this.activeTab = this.navigationTabs[0];\n    this.$callClient(\"C:Bank:ManagementReady\");\n  },\n  beforeUnmount() {\n    this.$callClient(\"C:Bank:ManagementDestroyed\");\n  }\n};","map":null,"metadata":{},"sourceType":"module"}