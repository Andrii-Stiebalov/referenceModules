{"ast":null,"code":"import SystemAppHeader from \"../../../Components/SystemAppHeader.vue\";\nexport default {\n  components: {\n    SystemAppHeader\n  },\n  data() {\n    return {\n      houseId: \"Дiм #437\",\n      houseData: {\n        owner: \"Morty_Richmond\",\n        lock: false,\n        govPrice: 390000,\n        cohabitant: 4,\n        garage: \"4\",\n        tax: 2304\n      },\n      bindedData: {\n        owner: \"Владелец\",\n        lock: \"Состояние\",\n        govPrice: \"Гос. цена\",\n        cohabitant: \"Сожитель\",\n        garage: \"Гараж\",\n        tax: \"Налог\"\n      },\n      houseBinder: {\n        owner: val => {\n          return val;\n        },\n        lock: val => {\n          return val ? this.$t(\"Закрыто\") : this.$t(\"Открыто\");\n        },\n        govPrice: val => {\n          return this.formatMoney(val);\n        },\n        cohabitant: val => {\n          return val;\n        },\n        garage: val => {\n          return val;\n        },\n        tax: val => {\n          return this.formatMoney(val);\n        }\n      }\n    };\n  },\n  computed: {\n    entries() {\n      if (!this.getMyHouse?.houseData) {\n        return null;\n      }\n      return Object.entries(this.getMyHouse?.houseData);\n    },\n    getMyHouse() {\n      return this.$store.getters[\"playerMenu/getHouseList\"];\n    },\n    computedData() {\n      if (!this.entries) {\n        return null;\n      }\n      return this.entries.map(([key, value]) => [key, this.houseBinder[key](value)]);\n    }\n  },\n  methods: {\n    getValue() {},\n    goBack() {\n      this.$router.go(-1);\n    },\n    getHouseRoute() {\n      this.$callClient(\"W:Phone:House:SetHouseRoute\", this.getMyHouse.Coords.x, this.getMyHouse.Coords.y);\n    },\n    formatMoney(amount) {\n      const parts = amount.toString().split(\".\");\n      let formattedAmount = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n      if (parts.length > 1) {\n        formattedAmount += \".\" + parts[1];\n      }\n\n      // Add dollar sign\n      formattedAmount += \"$\";\n      return formattedAmount;\n    }\n  },\n  mounted() {\n    console.log(this.computedData);\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}