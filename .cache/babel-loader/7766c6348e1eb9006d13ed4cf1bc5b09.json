{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"WeazelAppCreation\"\n};\nconst _hoisted_2 = {\n  class: \"WeazelAppCreation-types\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  class: \"WeazelAppCreation-textarea\"\n};\nconst _hoisted_5 = {\n  class: \"WeazelAppCreation-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.typeList, typeItem => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([\"WeazelAppCreation-type-item\", {\n        active: $data.selectedType === typeItem.typeId\n      }]),\n      key: typeItem.type,\n      onClick: () => $data.selectedType = typeItem.typeId\n    }, _toDisplayString(_ctx.$t(typeItem?.name)), 11 /* TEXT, CLASS, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"textarea\", {\n    class: \"WeazelAppCreation-textarea-input\",\n    placeholder: \"Описание\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.description = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.description]])])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    class: _normalizeClass({\n      disactive: $options.isNotAccess\n    }),\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.onSubmit && $options.onSubmit(...args))\n  }, _toDisplayString(_ctx.$t(\"Создать объявление\")), 3 /* TEXT, CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.onCancel && $options.onCancel(...args))\n  }, _toDisplayString(_ctx.$t(\"Отменить\")), 1 /* TEXT */)])], 64 /* STABLE_FRAGMENT */);\n}","map":null,"metadata":{},"sourceType":"module"}