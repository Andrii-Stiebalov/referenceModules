{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SystemInput from \"../../../../Components/SystemInput.vue\";\nimport { setContactInfoItem } from \"../../../../Lib/additionalUiFunctions\";\nimport PhoneMixin from \"@/Application/Pages/Phone/Mixins/PhoneMixin.vue\";\nimport CompanyAvatar from \"@/Application/Pages/Phone/Pages/Apps/CompanyApp/Components/CompanyAvatar.vue\";\nexport default {\n  data() {\n    return {\n      emojiList: [],\n      search: \"\",\n      isFixed: false\n    };\n  },\n  props: {\n    isPrevent: {\n      type: Boolean,\n      default: false\n    },\n    isRedacted: {\n      type: Boolean,\n      default: false\n    },\n    redactList: {\n      type: Array,\n      default: () => []\n    }\n  },\n  mixins: [PhoneMixin],\n  computed: {\n    contactList() {\n      return this.$store.getters[\"phone/getContacts\"].filter(contact => !contact.isHidden);\n    },\n    myInfo() {\n      return this.$store.getters[\"playerMenu/getPhoneMyInfo\"];\n    },\n    filteredList() {\n      return this.contactList.filter(contact => {\n        return contact.name.toLowerCase().includes(this.search.toLowerCase());\n      });\n    },\n    sortByName() {\n      return [...this.filteredList].sort((a, b) => {\n        return a.name.localeCompare(b.name);\n      });\n    },\n    bindByLetterObj() {\n      return this.sortByName.reduce((acc, contact) => {\n        const firstLetter = contact.name[0].toUpperCase();\n        if (!acc[firstLetter]) {\n          acc[firstLetter] = [];\n        }\n        acc[firstLetter].push(contact);\n        return acc;\n      }, {});\n    },\n    PMData() {\n      return this.$store.getters[\"playerMenu/getMainData\"];\n    }\n  },\n  components: {\n    SystemInput,\n    CompanyAvatar\n  },\n  methods: {\n    onWheel(e) {\n      e.preventDefault();\n      console.log(e);\n      if (e.deltaY > 0) {\n        e.currentTarget.scrollTop += 50;\n      } else {\n        e.currentTarget.scrollTop -= 50;\n      }\n      if (e.currentTarget.scrollTop > 50) {\n        this.isFixed = true;\n      } else {\n        this.isFixed = false;\n      }\n    },\n    onContactClick(callItem) {\n      if (this.isPrevent || this.isRedacted) {\n        this.$emit(\"onContactClick\", callItem);\n        return;\n      }\n      setContactInfoItem(callItem);\n    },\n    selectToRedact(callItem) {\n      this.$emit(\"addToRedact\", callItem.id);\n      return;\n    },\n    onCkickLetter(letter) {\n      const elem = document.getElementById(letter);\n      elem.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    },\n    onInput(value) {\n      this.search = value;\n    }\n  },\n  mounted() {\n    console.log(this.bindByLetterObj);\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}