{"ast":null,"code":"import Navigation from \"../../components/store/Navigation.js\";\nimport NavigationCategories from \"../../components/store/NavigationCategories.js\";\nimport Shop from \"../../components/store/Shop.js\";\nimport Subnavigation from \"../../components/store/Subnavigation.js\";\nexport default {\n  components: {\n    Navigation,\n    Shop,\n    Subnavigation\n  },\n  data: function () {\n    return {\n      appActive: false,\n      title: \"\",\n      type: \"\",\n      subtitle: \"\",\n      bank: 200,\n      cash: 3000,\n      wallet: \"$\",\n      categories: [],\n      activeCategory: null,\n      items: [],\n      activeItem: null,\n      modifications: [],\n      activeModification: null\n    };\n  },\n  computed: {\n    showMainNavigation() {\n      return !this.activeCategory && this.type !== \"backpacks\" && this.type !== \"masks\";\n    },\n    getKey() {\n      return this.activeCategory && this.activeCategory.id ? this.activeCategory.id : `0`;\n    }\n  },\n  methods: {\n    onKeyUp(e) {\n      if (e.key === \"Escape\") this.closeStore();\n    },\n    closeStore() {\n      this.appActive = false;\n      this.$callClient(\"Store:DestroyBrowser\");\n    },\n    destroyBrowser() {\n      this.$callClient(\"Store:DestroyBrowser\");\n    },\n    buyItem(type) {\n      this.$callClient(\"Store:BuyItem\", type, this.activeCategory && this.activeCategory.id !== undefined ? this.activeCategory.id : -1, this.activeItem && this.activeItem.id !== undefined ? this.activeItem.id : -1, this.activeModification && this.activeModification.id !== undefined ? this.activeModification.id : -1);\n    },\n    openSimpleStore(type, items, title, subtitle) {\n      this.items = items;\n      this.openStore(type, title, subtitle);\n    },\n    openCategoriesStore(type, categories, title, subtitle) {\n      this.categories = NavigationCategories.filter(x => categories.includes(x.id));\n      this.openStore(type, title, subtitle);\n    },\n    openStore(type, title, subtitle) {\n      this.type = type;\n      this.title = title;\n      this.subtitle = subtitle;\n      this.appActive = true;\n    },\n    setActiveCategory(category) {\n      this.$callClient(\"Store:SetCategory\", category.id);\n    },\n    setActiveCategoryCallback(categoryID, items) {\n      this.items = [];\n      this.activeItem = null;\n      this.items = items;\n      let category = this.categories.find(x => x.id === categoryID);\n      if (category) this.activeCategory = category;\n    },\n    setActiveItem(item) {\n      this.$callClient(\"Store:SetItem\", this.activeCategory && this.activeCategory.id !== undefined ? this.activeCategory.id : -1, item.id);\n    },\n    setActiveItemCallback(itemID, modification) {\n      this.modification = [];\n      this.activeModification = null;\n      this.modifications = modification;\n      let item = this.items.find(x => x.id === itemID);\n      if (item) this.activeItem = item;\n      this.activeModification = this.modifications[0];\n    },\n    setActiveModification(modification) {\n      this.$callClient(\"Store:SetModification\", this.activeCategory && this.activeCategory.id !== undefined ? this.activeCategory.id : -1, this.activeItem && this.activeItem.id !== undefined ? this.activeItem.id : -1, modification.id);\n    },\n    setActiveModificationCallback(modificationID) {\n      let modification = this.modifications.find(x => x.id === modificationID);\n      if (modification) this.activeModification = modification;\n    }\n  },\n  mounted() {\n    window.addEventListener(\"keyup\", this.onKeyUp);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}