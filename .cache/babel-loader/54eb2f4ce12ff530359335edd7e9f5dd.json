{"ast":null,"code":"import { mapGetters } from \"vuex\";\nimport Blank from \"../Blank.vue\";\nimport Tilt from \"vanilla-tilt-vue\";\nimport { setParticles } from \"../../Assets/particles.js\";\nexport default {\n  data() {\n    return {\n      updatingBlankData: {},\n      isApproved: null\n    };\n  },\n  computed: {\n    ...mapGetters([\"isAnimated\"])\n  },\n  props: {\n    startedBlankData: {\n      type: Object\n    },\n    type: String,\n    setSelectedContract: Function\n  },\n  methods: {\n    disabledAllInputs() {\n      const inputs = this.getAllInputs(this.$el);\n    },\n    setUpdatingBlankData(blank) {\n      this.updatingBlankData = blank;\n    },\n    getAllInputs(element) {\n      let inputs = element.querySelectorAll(\"input\");\n      element.childNodes.forEach(childNode => {\n        if (childNode.nodeType === Node.ELEMENT_NODE) {\n          const childInputs = this.getAllInputs(childNode);\n          if (Array.isArray(inputs) && Array.isArray(childInputs)) {\n            inputs = inputs.concat(childInputs);\n          }\n        }\n      });\n      return inputs;\n    },\n    onRevokeContract() {\n      this.$callClient(\"C:ContractsMenu:RevokeOutgoingContract\", this.startedBlankData);\n      this.setSelectedContract(null);\n    },\n    onCancelContract() {\n      this.$callClient(\"C:ContractsMenu:CancelIncomingContract\", this.startedBlankData);\n      this.setSelectedContract(null);\n    },\n    onAcceptContract() {\n      if (this.updatingBlankData.signatureExecutor) {\n        this.$callClient(\"C:ContractsMenu:AcceptIncomingContract\", this.startedBlankData);\n        if (!this.isApproved) {\n          setTimeout(() => this.onSetStamp(), 200);\n        }\n        this.isApproved = true;\n        setTimeout(() => this.setSelectedContract(null), 1000);\n        return;\n      }\n      this.$Notification.create({\n        type: \"info\",\n        layout: \"compact-top__right\",\n        theme: \"compact\",\n        time: 5000,\n        isFromServer: true,\n        text: this.$t(\"Поставьте подпись\"),\n        progressBar: false\n      });\n    },\n    onSetStamp() {\n      const audio = document.getElementById(\"setStamp\");\n      audio.pause();\n      audio.currentTime = 0;\n      setTimeout(() => audio.play(), 200);\n    }\n  },\n  components: {\n    Blank,\n    Tilt\n  },\n  mounted() {\n    setParticles();\n  }\n};","map":null,"metadata":{},"sourceType":"module"}