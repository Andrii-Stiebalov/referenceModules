{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, createBlock as _createBlock, Transition as _Transition, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"bankPage navigated\"\n};\nconst _hoisted_2 = {\n  class: \"bankPage-main__title\"\n};\nconst _hoisted_3 = {\n  class: \"bankKeypad\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Switcher = _resolveComponent(\"Switcher\");\n  const _component_BankInput = _resolveComponent(\"BankInput\");\n  const _component_Lock = _resolveComponent(\"Lock\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Switcher, {\n    tabs: $data.navigationTabs,\n    active: $data.activeTab,\n    onChange: $options.setActiveTab\n  }, null, 8 /* PROPS */, [\"tabs\", \"active\", \"onChange\"]), _createVNode(_Transition, {\n    name: \"bankPageLockTransition\",\n    mode: \"out-in\"\n  }, {\n    default: _withCtx(() => [$options.isAvailable ? (_openBlock(), _createElementBlock(\"div\", {\n      class: \"bankPage-main\",\n      key: $data.activeTab.route\n    }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t($options.getText.title)), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(_ctx.$t($options.getText.subtitle)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.numbers, number => {\n      return _openBlock(), _createElementBlock(\"button\", {\n        class: _normalizeClass([\"bankKeypad-item\", {\n          active: $options.isNumberActive(number)\n        }]),\n        key: number,\n        onClick: $event => $options.setActiveNumber(number)\n      }, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$n(number)), 1 /* TEXT */), _createElementVNode(\"img\", {\n        src: `./img/Bank/Icons/Coin.svg`,\n        alt: \"Icon\"\n      }, null, 8 /* PROPS */, _hoisted_5)], 10 /* CLASS, PROPS */, _hoisted_4);\n    }), 128 /* KEYED_FRAGMENT */))]), _createVNode(_component_BankInput, {\n      placeholder: _ctx.$t('Введите сумму'),\n      value: $data.inputAmount,\n      image: \"Coin\",\n      onInput: $options.onAmountInput,\n      onChange: $options.onAmountChange\n    }, null, 8 /* PROPS */, [\"placeholder\", \"value\", \"onInput\", \"onChange\"]), _createElementVNode(\"button\", {\n      class: \"bankPage-button\",\n      tabindex: \"-1\",\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.onAction && $options.onAction(...args))\n    }, _toDisplayString(_ctx.$t(\"Перевести\")), 1 /* TEXT */)])) : (_openBlock(), _createBlock(_component_Lock, {\n      key: 1\n    }))]),\n    _: 1 /* STABLE */\n  })]);\n}","map":null,"metadata":{},"sourceType":"module"}