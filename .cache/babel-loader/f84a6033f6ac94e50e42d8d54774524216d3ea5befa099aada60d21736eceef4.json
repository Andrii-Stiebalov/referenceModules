{"ast":null,"code":"import Store from \"../../Store\";\nlet intervalId = null;\nStore.watch(state => state.family.PlayerList, newValue => {\n  if (!intervalId) {\n    intervalId = setInterval(() => {\n      if (newValue?.length) {\n        incrementOnlineTime(newValue);\n      }\n    }, 60000);\n  }\n}, {\n  deep: true\n});\nfunction incrementOnlineTime(players) {\n  players.forEach(player => {\n    if (!player.IsOnline) return;\n    const updatedPlayer = {\n      ...player,\n      OnlineTime: Object.fromEntries(Object.entries(player.OnlineTime).map(([key, value]) => [key, value + 1]))\n    };\n    Store.commit(\"family/updatePlayer\", updatedPlayer);\n  });\n}\n\n// setTimeout(() => {\n//   Store.commit(\"family/updatePlayer\", { Id: 4, IsOnline: true });\n// }, 3500);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}