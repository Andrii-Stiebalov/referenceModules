{"ast":null,"code":"export default {\n  data: function () {\n    return {\n      type: \"taxi\",\n      locale: \"ua\",\n      appActive: true,\n      taxiNotification: false,\n      activeOrder: null,\n      orderList: [],\n      cTime: null\n    };\n  },\n  computed: {\n    getBackground() {\n      return `background-image: url(${require(`./Assets/img/${this.type}__background.png`)});`;\n    },\n    getTitles() {\n      switch (this.type) {\n        case \"taxi\":\n          return {\n            title: \"Uklon\",\n            subtitle: \"Служба вызова такси\"\n          };\n        case \"ems\":\n          return {\n            title: \"ЕМС\",\n            subtitle: \"Служба вызова\"\n          };\n        case \"mechanic\":\n          return {\n            title: \"Автосервiс\",\n            subtitle: \"Служба ремонта\"\n          };\n      }\n    },\n    getLogo() {\n      return `background-image: url(${require(`./Assets/img/${this.type}__icon.svg`)});`;\n    }\n  },\n  methods: {\n    afterLeave(el) {\n      this.$callClient(\"CloseTaxiPad\");\n    },\n    currentTime() {\n      this.cTime = new Date().toLocaleTimeString([], {\n        timeZone: \"Europe/Kiev\",\n        timeStyle: \"short\"\n      });\n    },\n    getID(order) {\n      return order && order.OrderPlayerId !== undefined ? `ID ${order.OrderPlayerId}` : ``;\n    },\n    getDestionation(order) {\n      return order && order.streetName !== undefined ? `${order.streetName}` : ``;\n    },\n    getDistance(order) {\n      return order && order.OrderDistance !== undefined ? `${Math.round(order.OrderDistance)} м.` : ``;\n    },\n    cancelOrder() {\n      switch (this.type) {\n        case \"taxi\":\n          this.$callClient(\"Taxi:Tablet:CancelOrder\");\n          break;\n        case \"ems\":\n          this.$callClient(\"Ambulance:Tablet:CancelOrder\");\n          break;\n        case \"mechanic\":\n          this.$callClient(\"Mechanic:Tablet:CancelOrder\");\n          break;\n      }\n      this.activeOrder = null;\n    },\n    setActive(order) {\n      if (!this.activeOrder) {\n        switch (this.type) {\n          case \"taxi\":\n            this.$callClient(\"Taxi:Tablet:TakeOrder\", JSON.stringify(order));\n            break;\n          case \"ems\":\n            this.$callClient(\"Ambulance:Tablet:TakeOrder\", JSON.stringify(order));\n            break;\n          case \"mechanic\":\n            this.$callClient(\"Mechanic:Tablet:TakeOrder\", JSON.stringify(order));\n            break;\n        }\n      }\n    },\n    toggleNotification() {\n      this.taxiNotification = !this.taxiNotification;\n      this.$callClient(\"Tablet:\" + this.type + ':Notification', this.taxiNotification);\n    },\n    setData(data) {\n      this.$recursiveAssign(data, this.$data);\n    },\n    SetActiveOrder(order) {\n      this.activeOrder = order;\n    },\n    setOrderList(data) {\n      this.orderList = data;\n    }\n  },\n  mounted() {\n    this.$onClient(\"Taxi:Tablet:SetData\", this.setData);\n    this.$onClient(\"Taxi:Tablet:SetOrderList\", this.setOrderList);\n    this.$onClient(\"Taxi:Tablet:SetActiveOrder\", this.SetActiveOrder);\n    this.$callClient(\"Taxi:Tablet:Ready\");\n    this.appActive = true;\n    document.addEventListener(\"keyup\", e => {\n      if (e.key === \"Escape\") {\n        this.appActive = false;\n      }\n    });\n    this.currentTime();\n    setInterval(() => {\n      this.currentTime();\n    }, 1000);\n  },\n  beforeUnmount() {\n    this.$offClient(\"Taxi:Tablet:SetData\", this.setData);\n    this.$offClient(\"Taxi:Tablet:SetOrderList\", this.setOrderList);\n    this.$offClient(\"Taxi:Tablet:SetActiveOrder\", this.SetActiveOrder);\n    document.removeEventListener(\"keyup\", e => {\n      if (e.key === \"Escape\") {\n        this.appActive = false;\n      }\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}