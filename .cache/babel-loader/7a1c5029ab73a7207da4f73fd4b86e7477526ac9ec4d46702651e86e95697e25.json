{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Range from \"../../../../Components/CustomRange/CustomRange.vue\";\nimport Keyboard from \"../Components/Settings/Keyboard.vue\";\nimport Aim from \"../Components/Settings/Aim.vue\";\nexport default {\n  data() {\n    return {\n      selectedNav: null,\n      selectedNavName: null,\n      isWasChanged: false,\n      inputValue: \"\",\n      isFocus: false,\n      selectedBind: \"\",\n      bindData: {\n        Account: {\n          imgName: \"Account\",\n          name: \"Аккаунт\",\n          settingsList: [{\n            settingName: \"Сохранение сессии\",\n            settingDescription: \"Сохраните вашу сессию для автоматического входа в ваш аккаунт\",\n            type: \"btnList\",\n            btnList: [\"Отключить\", \"Включить\"]\n          }, {\n            settingName: \"Смена пароля\",\n            settingDescription: \"Вы подозреваете, что ваш пароль попал в чужие руки? - Немедленно смените пароль!\",\n            type: \"password\"\n          }]\n        },\n        Performance: {\n          name: \"Производительность\",\n          imgName: \"Performance\",\n          settingsList: [{\n            settingName: \"Дальность прорисовки объектов\",\n            settingDescription: \"Настройка дальности прорисовки объектов для оптимизации производительности\",\n            type: \"range\",\n            max: 5000,\n            min: 1000,\n            postfix: \" м.\"\n          }, {\n            settingName: \"Детализация объектов\",\n            settingDescription: \"Изменение уровня детализации объектов для лучшего качества графики\",\n            type: \"btnList\",\n            info: \"Подсказка детализация\",\n            btnList: [\"Ультра низкая\", \"Низкая\", \"Средняя\", \"Высокая\"]\n          }, {\n            settingName: \"Дальность прорисовки игроков\",\n            settingDescription: \"Настройка дальности прорисовки транспорта для оптимизации производительности\",\n            type: \"range\",\n            max: 5000,\n            min: 1000,\n            postfix: \" м.\"\n          }, {\n            settingName: \"Дальность прорисовки транспорта\",\n            settingDescription: \"Изменение уровня громкости бумбокса для удобства прослушивания музыки в зависимости от условий окружающей среды\",\n            type: \"range\",\n            max: 10000,\n            min: 1000,\n            postfix: \" м.\"\n          }]\n        },\n        Sounds: {\n          name: \"Звуки\",\n          imgName: \"Sounds\",\n          settingsList: [{\n            settingName: \"Общая громкость\",\n            settingDescription: \"Регулировка общей громкости звука для удобства игры\",\n            type: \"range\",\n            max: 100,\n            min: 0,\n            postfix: \"%\"\n          }, {\n            settingName: \"Громкость окружающей среды\",\n            settingDescription: \"Изменение уровня громкости окружающей среды для более комфортной игры\",\n            type: \"range\",\n            max: 100,\n            min: 0,\n            postfix: \"%\"\n          }, {\n            settingName: \"Громкость рации\",\n            settingDescription: \"Настройка громкости собеседника для лучшего восприятия в шумных местах\",\n            type: \"range\",\n            max: 100,\n            min: 0,\n            postfix: \"%\"\n          }, {\n            settingName: \"Громкость бумбокса\",\n            settingDescription: \"Изменение уровня громкости бумбокса для удобства прослушивания музыки в зависимости от условий окружающей среды\",\n            type: \"range\",\n            max: 100,\n            min: 0,\n            postfix: \"%\"\n          }]\n        },\n        Interface: {\n          name: \"Интерфейс\",\n          imgName: \"Interface\",\n          settingsList: [{\n            settingName: \"Таймер монет\",\n            value: true,\n            settingDescription: \"Скрывает либо же показывает на интерфейсе HUD, время отыгрыша\",\n            type: \"checkbox\"\n          }, {\n            settingName: \"Таймер кейса\",\n            value: false,\n            settingDescription: \"Скрывает либо же показывает на интерфейсе HUD, время до Free Case\",\n            type: \"checkbox\"\n          }, {\n            settingName: \"Отображение квестовых подсказаок\",\n            value: false,\n            settingDescription: \"Включение/отключение отображения квестовых подсказок в правой части экрана.\",\n            type: \"checkbox\"\n          }, {\n            settingName: \"Высота чата\",\n            settingDescription: \"Описание:Высота чата\",\n            type: \"range\",\n            max: 100,\n            min: 0,\n            postfix: \"%\"\n          }, {\n            settingName: \"Ширина чата\",\n            settingDescription: \"Описание:Ширина чата\",\n            type: \"range\",\n            max: 100,\n            min: 0,\n            postfix: \"%\"\n          }, {\n            settingName: \"Размер шрифта чата\",\n            settingDescription: \"Описание:Размер шрифта чата\",\n            type: \"range\",\n            max: 100,\n            min: 0,\n            postfix: \"%\"\n          }, {\n            settingName: \"Отображение подсказок по управлению\",\n            value: false,\n            settingDescription: \"Описание:подсказок по управлению\",\n            type: \"checkbox\"\n          }\n          // {\n          //   settingName: \"Отображение компаса\",\n          //   settingDescription:\n          //     \"Сохраните вашу сессию для автоматического входа в ваш аккаунт\",\n          //   type: \"checkbox\",\n          // },\n          // {\n          //   settingName: \"Отображение рюкзаков у других игроков\",\n          //   settingDescription:\n          //     \"Сохраните вашу сессию для автоматического входа в ваш аккаунт\",\n          //   type: \"checkbox\",\n          // },\n          // {\n          //   settingName: \"Отображение вашего рюкзака\",\n          //   settingDescription:\n          //     \"Сохраните вашу сессию для автоматического входа в ваш аккаунт\",\n          //   type: \"checkbox\",\n          // },\n          // {\n          //   settingName: \"Спидометр\",\n          //   settingDescription:\n          //     \"Сохраните вашу сессию для автоматического входа в ваш аккаунт\",\n          //   type: \"btnList\",\n          //   btnList: [\"Упращенный\", \"Реалистичный\"],\n          // },\n          ]\n        },\n        Aim: {\n          name: \"Прицел\",\n          imgName: \"Aim\"\n        },\n        // TextChat: {\n        //   name: \"Текстовый чат\",\n        //   imgName: \"TextChat\",\n        //   settingsList: [\n        //     {\n        //       settingName: \"Новостные объявления в чате\",\n        //       settingDescription:\n        //         \"Сохраните вашу сессию для автоматического входа в ваш аккаунт\",\n        //       type: \"checkbox\",\n        //     },\n        //     {\n        //       settingName: \"Государственные объявления в чате\",\n        //       settingDescription:\n        //         \"Сохраните вашу сессию для автоматического входа в ваш аккаунт\",\n        //       type: \"checkbox\",\n        //     },\n        //     {\n        //       settingName: \"Действия администрации в чате\",\n        //       settingDescription:\n        //         \"Сохраните вашу сессию для автоматического входа в ваш аккаунт\",\n        //       type: \"checkbox\",\n        //     },\n        //   ],\n        // },\n        VoiceChat: {\n          name: \"Голосовой чат и звуки\",\n          imgName: \"VoiceChat\",\n          settingsList: [{\n            settingName: \"Микрофон\",\n            settingDescription: \"В случае возникшей проблемы вы можете перезагрузить микрофон\",\n            type: \"reload\"\n          }, {\n            settingName: \"Громкость микрофона\",\n            settingDescription: \"Регулировка общей громкости звука для удобства игры\",\n            type: \"range\",\n            max: 100,\n            min: 0,\n            postfix: \"%\"\n          }, {\n            settingName: \"Отключить микрофон до N уровня\",\n            settingDescription: \"Игроки с уровнем ниже заданного будут автоматически отправлены в мут\",\n            type: \"input\",\n            value: 3\n          }, {\n            settingName: \"Отключить микрофон у игроков\",\n            settingDescription: \"Отправить в мут конкретных игроков\",\n            type: \"playerList\"\n          }, {\n            settingName: \"Громкость звуковой системы\",\n            settingDescription: \"Регулировка громкости звуков для удобства игры\",\n            type: \"range\",\n            max: 100,\n            min: 0,\n            value: 70,\n            postfix: \"%\"\n          }]\n        },\n        OnFoot: {\n          name: \"Пешком\",\n          imgName: \"OnFoot\",\n          bindData: []\n        },\n        InTransport: {\n          name: \"В транспорте\",\n          imgName: \"OnFoot\",\n          bindData: []\n        },\n        isAdmin: {\n          name: \"Aдмін\",\n          imgName: \"OnFoot\",\n          bindData: []\n        }\n      },\n      serverData: null,\n      oldValList: null,\n      navList: [{\n        name: \"ОБЩИЕ НАСТРОЙКИ\",\n        subNavList: [\"Account\", \"Performance\", \"Aim\", \"Interface\"]\n      }, {\n        name: \"НАСТРОЙКИ ЧАТА\",\n        subNavList: [\"VoiceChat\"]\n      }, {\n        name: \"НАЗНАЧЕНИЕ КЛАВИШ\",\n        subNavList: [\"OnFoot\", \"InTransport\"]\n      }],\n      isShowPlayersModal: false,\n      playersModalValue: \"\",\n      keyNameToCode: {\n        Backspace: 8,\n        Tab: 9,\n        Enter: 13,\n        Shift: 16,\n        Ctrl: 17,\n        Alt: 18,\n        CapsLock: 20,\n        Escape: 27,\n        Space: 32,\n        PageUp: 33,\n        PageDown: 34,\n        End: 35,\n        Home: 36,\n        \"→\": 37,\n        \"↑\": 38,\n        \"←\": 39,\n        \"↓\": 40,\n        Insert: 45,\n        Delete: 46,\n        0: 48,\n        1: 49,\n        2: 50,\n        3: 51,\n        4: 52,\n        5: 53,\n        6: 54,\n        7: 55,\n        8: 56,\n        9: 57,\n        A: 65,\n        B: 66,\n        C: 67,\n        D: 68,\n        E: 69,\n        F: 70,\n        G: 71,\n        H: 72,\n        I: 73,\n        J: 74,\n        K: 75,\n        L: 76,\n        M: 77,\n        N: 78,\n        O: 79,\n        P: 80,\n        Q: 81,\n        R: 82,\n        S: 83,\n        T: 84,\n        U: 85,\n        V: 86,\n        W: 87,\n        X: 88,\n        Y: 89,\n        Z: 90,\n        Meta: 91,\n        // Windows/Command ключ\n        ContextMenu: 93,\n        // Контекстное меню (правая кнопка мыши)\n        Numpad0: 96,\n        Numpad1: 97,\n        Numpad2: 98,\n        Numpad3: 99,\n        Numpad4: 100,\n        Numpad5: 101,\n        Numpad6: 102,\n        Numpad7: 103,\n        Numpad8: 104,\n        Numpad9: 105,\n        NumpadMultiply: 106,\n        NumpadAdd: 107,\n        NumpadSubtract: 109,\n        NumpadDecimal: 110,\n        NumpadDivide: 111,\n        F1: 112,\n        F2: 113,\n        F3: 114,\n        F4: 115,\n        F5: 116,\n        F6: 117,\n        F7: 118,\n        F8: 119,\n        F9: 120,\n        F10: 121,\n        F11: 122,\n        F12: 123,\n        NumLock: 144,\n        ScrollLock: 145,\n        Semicolon: 186,\n        Equal: 187,\n        Comma: 188,\n        Minus: 189,\n        Period: 190,\n        Slash: 191,\n        \"~\": 192,\n        BracketLeft: 219,\n        Backslash: 220,\n        BracketRight: 221,\n        Quote: 222,\n        MetaLeft: 224,\n        // Левый Windows/Command ключ\n        MetaRight: 225 // Правый Windows/Command ключ\n      }\n      // navList: [\n      //   {\n      //     name: \"ОБЩИЕ НАСТРОЙКИ\",\n      //     subNavList: [\"Аккаунт\", \"Производительность\", \"Звуки\", \"Интерфейс\"],\n      //   },\n      //   {\n      //     name: \"НАСТРОЙКИ ЧАТА\",\n      //     subNavList: [\"Текстовый чат\", \"Голосовой чат\"],\n      //   },\n      //   {\n      //     name: \"НАЗНАЧЕНИЕ КЛАВИШ\",\n      //     subNavList: [\"Пешком\", \"В транспорте\"],\n      //   },\n      // ],\n    };\n  },\n  computed: {\n    settingsData() {\n      return this.$store.getters[\"playerMenu/getSettingsData\"];\n    },\n    mutePlayerList() {\n      return this.$store.getters[\"playerMenu/getMutePlayerList\"];\n    },\n    filterSettings() {\n      const filtered = this.selectedNav.bindData.filter(bindItem => bindItem.desc.toUpperCase().includes(this.inputValue.toUpperCase()));\n      return filtered;\n    },\n    differencesList() {\n      if (!this.selectedNav) {\n        return [];\n      }\n      const oldValList = this.serverData[this.selectedNavName];\n      const newValList = this.bindData[this.selectedNavName].settingsList;\n      return this.findDifferences(oldValList, newValList);\n    }\n  },\n  methods: {\n    getImgPath(name) {\n      return require(`../Assets/Settings/${name}.svg`);\n    },\n    reloadMicro() {\n      this.$callClient(\"C:Settings:ReloadMicro\");\n    },\n    addPlayerToMute() {\n      this.$callClient(\"C:Settings:AddPlayerToMute\", this.playersModalValue);\n      this.playersModalValue = \"\";\n    },\n    removePlayerFromMute(id) {\n      this.$callClient(\"C:Settings:RemovePlayerFromMute\", id);\n    },\n    getKeyFromKeyCode(keyCode) {\n      const index = Object.values(this.keyNameToCode).indexOf(+keyCode);\n      console.log(index, keyCode);\n      return Object.keys(this.keyNameToCode)[index];\n    },\n    selectBind(bindItem) {\n      if (this.selectedBind.key === bindItem.key) {\n        this.selectedBind = \"\";\n        return;\n      }\n      this.selectedBind = bindItem;\n    },\n    bindKey(newKey, selectedComb) {\n      if (!this.selectedBind) {\n        return;\n      }\n      const comb = {\n        shift: false,\n        ctrl: false,\n        alt: false\n      };\n      if (selectedComb) {\n        comb[selectedComb] = true;\n      }\n      this.$callClient(\"C:Keyboard:BindKey\", newKey, this.selectedBind.action, comb);\n      this.selectedBind = \"\";\n    },\n    getTrueKey(obj) {\n      const values = Object.values(obj);\n      const index = values.indexOf(true);\n      return Object.keys(obj)[index];\n    },\n    selectNav(nav, name) {\n      this.selectedNav = nav;\n      this.selectedNavName = name;\n      setTimeout(() => this.isWasChanged = false);\n    },\n    setData(data, property) {\n      if (property) {\n        this.serverData[property] = data;\n        this.setData(this.serverData);\n        return;\n      }\n      if (!data) {\n        return;\n      }\n      this.serverData = data;\n      const keys = Object.keys(data);\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const settingsList = data[key];\n        if (key === \"isAdmin\") {\n          if (!this.navList[2].subNavList.includes(\"isAdmin\")) {\n            this.navList[2].subNavList.push(\"isAdmin\");\n          }\n        }\n        if (key === \"Aim\") {\n          this.bindData[key] = Object.assign({}, settingsList);\n        } else if (key === \"OnFoot\" || key === \"InTransport\" || key === \"isAdmin\") {\n          this.bindData[key].bindData = data[key];\n        } else {\n          for (let j = 0; j < settingsList.length; j++) {\n            const settingsListItem = settingsList[j];\n            Object.assign(this.bindData[key].settingsList[j], settingsListItem);\n          }\n        }\n      }\n    },\n    saveChanges() {\n      const onlyValuesList = this.bindData[this.selectedNavName].settingsList.map(settings => settings.value);\n      this.$callClient(\"C:Settings:Save\", this.selectedNavName, onlyValuesList, this.differencesList);\n    },\n    setToDefault() {\n      this.$callClient(\"W:PlayerMenuSettings:SetToDefault\", this.selectedNavName);\n    },\n    showListPlayersModal() {\n      this.isShowPlayersModal = true;\n    },\n    showPasswordModal() {\n      const UniversalModalData = {\n        title: this.$t(\"Cмена пароля\"),\n        isSetToStore: true,\n        content: [{\n          type: \"input\",\n          options: {\n            label: this.$t(\"Старый пароль\"),\n            valuesName: \"oldPassword\"\n          }\n        }, {\n          type: \"input\",\n          options: {\n            label: this.$t(\"Новый пароль\"),\n            valuesName: \"newPassword\"\n          }\n        }],\n        buttons: {\n          submit: {\n            name: this.$t(\"Да\"),\n            event: \"PlayerMenu:ChangePassword\"\n          },\n          cansel: {\n            name: this.$t(\"Отмена\")\n          }\n        }\n      };\n      this.$UniversalModal.create(UniversalModalData);\n    },\n    findDifferences(array1, array2) {\n      if (!array1 || !array2) {\n        return [];\n      }\n      const differences = [];\n      for (let i = 0; i < array1.length; i++) {\n        const item1 = array1[i];\n        const item2 = array2[i];\n        if (!this.areEqual(item1, item2)) {\n          differences.push(i);\n        }\n      }\n      return differences;\n    },\n    areEqual(obj1, obj2) {\n      for (const key in obj1) {\n        if (obj1[key] !== obj2[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  },\n  watch: {\n    selectedNav: {\n      handler(val, oldVal) {\n        console.log(val.settingsList, this.serverData[this.selectedNavName]);\n        if (!oldVal || !this.serverData) {\n          return;\n        }\n        if (oldVal.name !== val.name) {\n          this.setData(this.serverData);\n        } else {\n          this.isWasChanged = true;\n        }\n        const indexList = this.findDifferences(this.serverData[this.selectedNavName], val.settingsList);\n      },\n      deep: true\n    },\n    settingsData(val) {\n      this.setData(val);\n    }\n  },\n  components: {\n    Range,\n    Keyboard,\n    Aim\n  },\n  mounted() {\n    this.selectNav(this.bindData.Account, \"Account\");\n    this.setData(this.settingsData);\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}