{"ast":null,"code":"import GetIconVue from \"./Components/GetIcon.vue\";\nimport PageTitle from \"./Components/PageTitle.vue\";\nimport CustomSelect from \"@/Components/CustomSelect/CustomSelect.vue\";\nimport logo from \"./Components/Icons/logo.vue\";\nimport Doll from \"./Components/Icons/Doll.vue\";\nexport default {\n  components: {\n    CustomSelect,\n    GetIconVue,\n    PageTitle,\n    logo,\n    Doll\n  },\n  data() {\n    return {\n      isActive: false,\n      selectedColor: \"\",\n      selectedAddColor: \"\",\n      selectedVal: \"default\",\n      inputVal: \"\",\n      selectedType: \"own\",\n      selectedCoupon: this.$t(\"Купон не выбран\"),\n      colors: [{\n        color: \"Черный\",\n        hex: \"#0d0d0d\"\n      }, {\n        color: \"Белый\",\n        hex: \"#d9d9d9\"\n      }, {\n        color: \"Красный\",\n        hex: \"#cc452b\"\n      }, {\n        color: \"Оранжевый\",\n        hex: \"#fc8b0a\"\n      }, {\n        color: \"Желтый\",\n        hex: \"#f0c542\"\n      }, {\n        color: \"Зеленый\",\n        hex: \"#22631b\"\n      }, {\n        color: \"Голубой\",\n        hex: \"#42aaff\"\n      }, {\n        color: \"Синий\",\n        hex: \"#0000ff\"\n      }, {\n        color: \"Фиолетовый\",\n        hex: \"#743a6b\"\n      }],\n      settings: {\n        defaultCurrencyImg: \"cash.svg\",\n        //путь cdn\n        additionalCurrencyImg: \"starcoin.png\",\n        //путь cdn\n        progressLimits: {\n          //лимиты полосок в салоне\n          speed: 400,\n          tun: 150,\n          gas: 100\n        },\n        bizType: \"Премиум класса\"\n      },\n      bindGas: {\n        1: 92,\n        2: 95,\n        3: 100,\n        4: \"electro\",\n        5: \"Diesel\"\n      },\n      balanceList: [],\n      canBuyForFamily: true,\n      couponList: [],\n      selectedCar: null,\n      priviusSelectedCar: null,\n      carList: []\n    };\n  },\n  computed: {\n    couponOptionsList() {\n      return [...this.couponList.map(coupon => coupon.saleValue * 100 + \"%\"), this.$t(\"Купон не выбран\")];\n    },\n    filterCarList() {\n      return this.carList.filter(car => car.model.toLowerCase().includes(this.inputVal.toLowerCase()));\n    }\n  },\n  watch: {\n    selectedCar(val, priv) {\n      this.priviusSelectedCar = priv;\n      this.selectedVal = \"default\";\n    },\n    carList(val) {\n      this.onselectCar(val[0]);\n    }\n  },\n  methods: {\n    priceWithSale(procent, val) {\n      const num = procent.slice(0, -1);\n      if (+num) {\n        return Math.floor(val - val * (num / 100));\n      }\n      return val;\n    },\n    onMouseon() {\n      this.$callClient(\"C:CarShowRoom:OnSection\", true);\n    },\n    onMouseleave() {\n      this.$callClient(\"C:CarShowRoom:OnSection\", false);\n    },\n    onTestDrive() {\n      this.$callClient(\"C:CarShowRoom:TestDrive\", this.selectedCar.model, ...this.hexToRgb(this.selectedColor), ...this.hexToRgb(this.selectedAddColor), !!this.settings.isEventShop);\n    },\n    close() {\n      this.$callClient(\"C:CarShowRoom:Close\");\n    },\n    onkeydown(e) {\n      if (e.keyCode === 27 && !window.isModalShow) {\n        this.close();\n      }\n    },\n    onselectCar(car) {\n      if (this.selectedCar?.model === car.model) {\n        return;\n      }\n      this.selectedCar = car;\n      this.$callClient(\"C:CarShowRoom:SelectCar\", car.model, ...this.hexToRgb(this.selectedColor), ...this.hexToRgb(this.selectedAddColor));\n    },\n    getCouponName(sale) {\n      const saleValue = +sale.slice(0, -1);\n      if (saleValue) {\n        return this.couponList.find(coupon => coupon.saleValue == saleValue / 100).itemName;\n      }\n      return \"none\";\n    },\n    hexToRgb(hex) {\n      hex = hex.replace(/^#/, \"\");\n      const bigint = parseInt(hex, 16);\n      const r = bigint >> 16 & 255;\n      const g = bigint >> 8 & 255;\n      const b = bigint & 255;\n      return [r, g, b];\n    },\n    setData(data) {\n      Object.assign(this.$data, data);\n    },\n    getColorName(hex) {\n      return this.colors.find(color => color.hex === hex).color;\n    },\n    onBuy() {\n      const UniversalModalData = {\n        title: this.$t(\"Покупка транспорта\"),\n        content: [{\n          type: \"description\",\n          value: `\n            ${this.$t(`Транспорт:`)} <span>${this.selectedCar.model}</span> \\n\n            <div></div>\n            ${this.$t(`Основной цвет:`)} <span>${this.$t(this.getColorName(this.selectedColor))}</span>\\n\n            <div></div>\n            ${this.$t(`Дополнительный цвет:`)} <span>${this.$t(this.getColorName(this.selectedAddColor))}</span>\\n\n            <div></div>\n            ${this.settings.isEventShop ? \"\" : `${this.$t(`Способ оплаты:`)} <span>${this.$t(this.selectedVal === \"default\" ? \"Деньги\" : \"Монеты\")}</span>\\n\n            <div></div>`}\n            ${this.$t(`Итоговая стоимость:`)} <span>${this.formatMoney(this.priceWithSale(this.selectedCoupon, this.selectedVal === \"default\" ? this.selectedCar.price : this.selectedCar.coinPrice)) + (this.selectedVal === \"default\" && !this.settings.isEventShop ? `<div data-type=\"img\" data-img=\"${this.settings.defaultCurrencyImg}\" />` : `<div data-type=\"img\" data-img=\"${this.settings.isEventShop ? this.settings.defaultCurrencyImg : this.settings.additionalCurrencyImg}\" />`)}</span>\\n\n            <div></div>\n            `\n        }],\n        buttons: {\n          submit: {\n            name: this.selectedVal === \"default\" && !this.settings.isEventShop ? this.$t(\"Карта\") : this.$t(\"Купить\"),\n            handler: () => {\n              this.$callClient(\"C:CarShowRoom:BuyVehicle\", this.selectedCar.model, ...this.hexToRgb(this.selectedColor), ...this.hexToRgb(this.selectedAddColor), \"default\", false, this.selectedType == \"family\", this.getCouponName(this.selectedCoupon), !!this.settings.isEventShop);\n            }\n          },\n          additional: this.selectedVal === \"default\" && !this.settings.isEventShop ? {\n            name: this.$t(\"Наличные\"),\n            handler: () => {\n              console.log(this.selectedCoupon);\n              this.$callClient(\"C:CarShowRoom:BuyVehicle\", this.selectedCar.model, ...this.hexToRgb(this.selectedColor), ...this.hexToRgb(this.selectedAddColor), \"default\", true, this.selectedType == \"family\", this.getCouponName(this.selectedCoupon), !!this.settings.isEventShop);\n            }\n          } : null,\n          cansel: {\n            name: this.$t(\"Отмена\")\n          }\n        }\n      };\n      this.$UniversalModal.create(UniversalModalData);\n    },\n    setActive(val) {\n      this.isActive = val;\n    },\n    selectColor(color, isMain) {\n      if (isMain) {\n        if (this.selectedColor !== color) {\n          this.selectedColor = color;\n          this.$callClient(\"C:CarShowRoom:SelectColor\", \"prime\", ...this.hexToRgb(color));\n        }\n      } else {\n        if (this.selectedAddColor !== color) {\n          this.selectedAddColor = color;\n          this.$callClient(\"C:CarShowRoom:SelectColor\", \"sec\", ...this.hexToRgb(color));\n        }\n      }\n    },\n    formatMoney(amount) {\n      return amount.toLocaleString(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0\n      }).replace(\"$\", \"\").replace(/,/g, \".\");\n    }\n  },\n  created() {\n    this.$onClient(\"W:CarShowRoom:SetData\", this.setData);\n    this.$onClient(\"W:CarShowRoom:SetActive\", this.setActive);\n    this.$callClient(\"C:CarShowRoom:Ready\");\n    console.time();\n  },\n  beforeUnmount() {\n    this.$offClient(\"W:CarShowRoom:SetData\", this.setData);\n    this.$offClient(\"W:CarShowRoom:SetActive\", this.setActive);\n    window.removeEventListener(\"keyup\", this.onkeydown);\n  },\n  mounted() {\n    window.addEventListener(\"keyup\", this.onkeydown);\n    this.isActive = true;\n    this.selectedColor = this.colors[0].hex;\n    this.selectedAddColor = this.colors[0].hex;\n    console.timeEnd();\n  }\n};","map":null,"metadata":{},"sourceType":"module"}