{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Selection from \"../Components/Selection.vue\";\nimport { MapNames, GameDescriptions, GameModes } from \"../Components/ArenaEnums.js\";\nconst InputsTitles = {\n  lobby: \"Название лобби\",\n  prize: \"Взнос в призовой фонд\",\n  password: \"Пароль\"\n};\nconst InputPlaceholders = {\n  lobby: \"Введите название\",\n  prize: \"Введите сумму\",\n  password: \"Введите пароль\"\n};\nconst SelectNames = {\n  mapList: \"Выбор карты\",\n  gunList: \"Выбор оружия\"\n};\nexport default {\n  components: {\n    Selection\n  },\n  inject: [\"getModes\"],\n  data() {\n    return {\n      activeMode: {},\n      inputs: {\n        lobby: \"\",\n        prize: 0,\n        password: \"\"\n      },\n      selects: {\n        selectedWeapon: undefined,\n        selectedMap: undefined\n      },\n      currentStep: 1\n    };\n  },\n  computed: {\n    modes() {\n      return this.getModes();\n    }\n  },\n  methods: {\n    onKeyUp(e) {\n      if (e.keyCode === 27 && !window.isModalShow) this.$router.push(\"/arena/main\");\n    },\n    onInput(input, e) {\n      if (input == \"prize\") {\n        if (!/^[0-9]+$/.test(e.target.value)) {\n          e.target.value = e.target.value.substring(0, e.target.value.length - 1);\n        }\n      }\n      this.inputs[input] = e.target.value;\n    },\n    setAtciveMode(mode) {\n      if (this.activeMode != mode) {\n        this.activeMode = mode;\n        this.selects = {\n          selectedWeapon: undefined,\n          selectedMap: undefined\n        };\n        this.currentStep = 1;\n      }\n    },\n    onFocus(input, e) {\n      if (input == \"prize\") {\n        if (!this.inputs[input]) e.target.value = \"\";\n      }\n    },\n    onBlur(input, e) {\n      if (input == \"prize\") {\n        if (!this.inputs[input]) this.inputs[input] = 0;\n        e.target.value = this.inputs[input];\n      }\n    },\n    createLobby() {\n      if (this.inputs.lobby) {\n        if (Object.keys(this.activeMode).some(x => x == \"mapList\" || x == \"gunList\") && this.currentStep == 1) {\n          this.currentStep = 2;\n        } else {\n          let isValid = true;\n          Object.keys(this.activeMode).forEach(key => {\n            if ([\"mapList\", \"gunList\"].includes(key) && !this.selects[key]) isValid = false;\n          });\n          if (isValid) {\n            this.$callClient(\"Arena:Client:CreateLobby\", this.inputs, this.activeMode.id, this.selects);\n          } else {\n            console.log(1);\n          }\n        }\n      } else {\n        console.log(1);\n      }\n    },\n    setList(select, item) {\n      this.selects[select] = item;\n    },\n    getGameName(game) {\n      return GameModes[game] || \"\";\n    },\n    getMapName(map) {\n      return MapNames[map] || \"\";\n    },\n    getGameDescription(game) {\n      return GameDescriptions[game] || \"\";\n    },\n    getInputName(input) {\n      return InputsTitles[input] || \"\";\n    },\n    getInputPlaceholder(input) {\n      return InputPlaceholders[input] || \"\";\n    },\n    getSelectionName(select) {\n      if (select == \"gunList\" && this.activeMode.gameType.includes(\"race\")) {\n        return \"Выберите машину\";\n      }\n      return SelectNames[select] || \"\";\n    }\n  },\n  created() {\n    window.addEventListener(\"keyup\", this.onKeyUp);\n    this.activeMode = this.modes[0];\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"keyup\", this.onKeyUp);\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}