{"ast":null,"code":"import { onUnmounted } from \"vue\";\nexport default {\n  data() {\n    return {\n      intervalId: null,\n      timerValue: null,\n      status: null,\n      rgbColors: {\n        overday: \"64 191 106\",\n        dayLess: \"255 136 0\",\n        under12: \"247 0 50\"\n      }\n    };\n  },\n  mounted() {\n    this.startTimer();\n    onUnmounted(() => {\n      if (this.intervalId) {\n        this.stopTimer();\n      }\n    });\n  },\n  computed: {\n    getMainColor() {\n      return this.rgbColors[this.status];\n    },\n    getSelectedItem() {\n      return this.$store.getters[\"marketPlace/getSelectedItem\"];\n    }\n  },\n  methods: {\n    getTimeDifference() {\n      const endTime = new Date(this.getSelectedItem.endTime);\n      const now = new Date();\n      let difference = endTime - now;\n      if (difference <= 0) {\n        this.timerValue = this.$t(\"Час минув\");\n        this.stopTimer();\n      } else {\n        const days = Math.floor(difference / (1000 * 60 * 60 * 24));\n        difference -= days * (1000 * 60 * 60 * 24);\n        const hours = Math.floor(difference / (1000 * 60 * 60) % 24);\n        difference -= hours * (1000 * 60 * 60);\n        const minutes = Math.floor(difference / (1000 * 60) % 60);\n        const hoursString = hours ? `${hours} ${this.$t(\"г.\")}` : \"\";\n        const minutesString = minutes ? `${minutes} ${this.$t(\"хв.\")}` : \"\";\n        const daysString = days ? `${days} ${this.$t(\"д.\")}` : \"\";\n        this.timerValue = `${daysString} ${hoursString} ${minutesString}`;\n        if (!days && !hours && !minutes) this.timerValue = this.$t(\"Менше хвилини\");\n        if (days >= 1) {\n          this.status = \"overday\";\n        } else if (days === 1 || days === 0 && hours >= 12) {\n          this.status = \"dayLess\";\n        } else if (days === 0 && hours < 12) {\n          this.status = \"under12\";\n        }\n      }\n    },\n    startTimer() {\n      this.getTimeDifference();\n      this.intervalId = setInterval(this.getTimeDifference, 30000);\n    },\n    stopTimer() {\n      clearInterval(this.intervalId);\n    },\n    onContinue() {\n      this.$store.commit(\"marketPlace/openModal\", [this.getSelectedItem, \"listingContinue\"]);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}