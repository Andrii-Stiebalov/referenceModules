{"ast":null,"code":"import GetSVGIcons from \"../../GetSVGIcons.vue\";\nexport default {\n  data() {\n    return {\n      isShowModify: false,\n      carInfo: {\n        Speed: \"Cкорость\",\n        Boost: \"Ускорение\",\n        Weight: \"Багажник (кг)\",\n        Slots: `Багажник (слоты)`,\n        Fuel: \"Бак\"\n      },\n      maxValues: {\n        Speed: 100,\n        Boost: 100,\n        Weight: 100,\n        Slots: 100,\n        Fuel: 30\n      },\n      carItems: {\n        Engine: {\n          Name: \"Двигатель\",\n          Max: 4,\n          IconName: \"Engine\"\n        },\n        Brakes: {\n          Name: \"Тормоза\",\n          Max: 3,\n          IconName: \"Brakes\"\n        },\n        Transmission: {\n          Name: \"Трансмиссия\",\n          Max: 3,\n          IconName: \"Transmission\"\n        },\n        Suspension: {\n          Name: \"Подвеска\",\n          Max: 5,\n          IconName: \"Suspension\"\n        },\n        Turbo: {\n          Name: \"Турбонаддув\",\n          Max: 3,\n          IconName: \"Turbo\"\n        }\n      },\n      characteristicWithoutData: [\"Speed\", \"Boost\"]\n    };\n  },\n  components: {\n    GetSVGIcons\n  },\n  methods: {\n    calculatingRangeInnerWidth(value, maxValue) {\n      let rangeValue = value;\n      const maxWidth = 21;\n      if (value > maxValue) {\n        rangeValue = maxValue;\n      }\n      const procent = rangeValue / maxValue;\n      return procent * maxWidth + \"rem\";\n    },\n    convertToMoneyFormat(numb) {\n      return new Intl.NumberFormat(\"de-DE\").format(numb) + \"$\";\n    },\n    getCountOf(count, max) {\n      if (!+count) {\n        return this.$t(\"отсутствует\");\n      } else if (count == max) {\n        return \"MAX\";\n      }\n      return `${count}/${max}`;\n    },\n    getStrokeDashoffset(count, max) {\n      const procent = count / max * 100;\n      return 100 - procent;\n    }\n  },\n  props: {\n    car: Object,\n    scaleIconProcent: Number\n  },\n  mounted() {\n    console.log(this.car);\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}