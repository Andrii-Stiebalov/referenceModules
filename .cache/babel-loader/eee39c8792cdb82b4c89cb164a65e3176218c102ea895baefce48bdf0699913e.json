{"ast":null,"code":"import ContactsContent from \"../../Pages/Apps/ContactsApp/Components/ContactList\";\nimport { closeAdditionalUi } from \"../../Lib/additionalUiFunctions\";\nimport PhoneMixin from \"../../Mixins/PhoneMixin\";\nexport default {\n  name: \"PhoneNewMsgUI\",\n  data() {\n    return {\n      input: \"\",\n      currentInput: \"\",\n      msgInput: \"\",\n      isShowContactList: false,\n      isShowName: true,\n      value: \"\"\n    };\n  },\n  mixins: [PhoneMixin],\n  props: {\n    data: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  watch: {\n    input(value) {\n      console.log(`value`);\n      console.log(value);\n      if (value?.toString().length === 7 && !value?.toString().includes(\"-\")) {\n        this.input = value?.toString().replace(/(\\d{3})(\\d{2})(\\d{2})/, \"$1-$2-$3\");\n      }\n    }\n  },\n  computed: {\n    numbers() {\n      return this.$store.getters[\"phone/getNumbers\"];\n    },\n    isContact() {\n      return this.numbers[this.input?.toString().replace(/\\D/g, \"\")];\n    },\n    isValid() {\n      return this.input?.replace(/\\D/g, \"\")?.length === 7 && this.name;\n    }\n  },\n  components: {\n    ContactsContent\n  },\n  methods: {\n    onInput(e) {\n      const value = e.target.value;\n      let onlyNumbers = value.replace(/\\D/g, \"\");\n      if (onlyNumbers.length > 7) {\n        onlyNumbers = onlyNumbers.slice(0, -1);\n      }\n      this.input = onlyNumbers.replace(/(\\d{3})(\\d{2})(\\d{2})/, \"$1-$2-$3\");\n    },\n    onClickIsShowContactList() {\n      this.isShowContactList = true;\n    },\n    onCancel() {\n      this.isShowContactList = false;\n    },\n    onBack() {\n      closeAdditionalUi();\n    },\n    sendMsg() {\n      const number = this.input.replace(/\\D/g, \"\");\n      this.$callClient(\"W:Phone:SendMsg\", number, this.msgInput);\n      closeAdditionalUi();\n      // this.$router.push(`/Phone/MsgApp/Info/${number}`);\n    },\n    onContactClick(contact) {\n      this.input = contact.number;\n      this.isShowContactList = false;\n    },\n    callBack(value) {\n      console.log(value);\n    },\n    setData() {\n      this.input = this.data.number;\n    },\n    onInputName() {\n      this.isShowName = true;\n    }\n  },\n  mounted() {\n    this.setData();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}