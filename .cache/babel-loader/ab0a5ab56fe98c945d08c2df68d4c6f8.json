{"ast":null,"code":"import GangWarBg from \"./Components/GangWarBg\";\nexport default {\n  data() {\n    return {\n      data: null,\n      localTimer: 0,\n      interval: null\n    };\n  },\n  components: {\n    GangWarBg\n  },\n  watch: {\n    \"data.Timer\": {\n      handler(val) {\n        this.localTimer = val;\n        if (!val) {\n          return;\n        }\n        if (this.interval) {\n          clearInterval(this.interval);\n        }\n        this.interval = setInterval(() => {\n          this.localTimer--;\n          if (!this.localTimer) {\n            clearInterval(this.interval);\n          }\n        }, 1000);\n      }\n    }\n  },\n  methods: {\n    setData(data) {\n      this.data = data;\n    },\n    setRecursiveData(data) {\n      this.$recursiveAssign(data, this.data, true);\n    },\n    formatTime(sec) {\n      if (!sec) {\n        return 0;\n      }\n      const minutes = Math.floor(sec / 60);\n      const seconds = sec % 60;\n      return sec ? `${(10 > minutes ? \"0\" : \"\") + minutes}:${(10 > seconds ? \"0\" : \"\") + seconds}` : 0;\n    }\n  },\n  mounted() {\n    this.$onClient(\"W:GangWar:SetRecursiveData\", this.setRecursiveData);\n    this.$onClient(\"W:GangWar:SetData\", this.setData);\n    this.$callClient(\"C:GangWar:Ready\");\n\n    // const data = {\n    //   Attacker: {\n    //     Name: \"Ballas\",\n    //     Image: \"https://linkToImage.png\",\n    //     Points: 5,\n    //     Color: \"0000FF\",\n    //   },\n    //   Defender: {\n    //     Name: \"Bloods\",\n    //     Image: \"https://linkToImage.png\",\n    //     Points: 4,\n    //     Color: \"FFFFFF\",\n    //   },\n    //   Status: \"Подготовка\",\n    //   ShowStats: true,\n    //   Timer: 0, // секунды. на клиенте локально умнеьшать время каждую секунду. Когда таймер доходит до нуля, включается иконка загрузки\n    // };\n\n    // this.setData(data);\n\n    // setInterval(() => {\n    //   this.data.Defender.Points++;\n    // }, 200);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}