{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, vModelText as _vModelText, withDirectives as _withDirectives, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"CompanyAppMain\"\n};\nconst _hoisted_2 = {\n  class: \"CompanyAppMain-title\"\n};\nconst _hoisted_3 = {\n  class: \"CompanyAppMain-avasection\"\n};\nconst _hoisted_4 = {\n  class: \"CompanyAppMain-info\"\n};\nconst _hoisted_5 = {\n  class: \"CompanyAppMain-subtitle\"\n};\nconst _hoisted_6 = {\n  class: \"CompanyAppMain-subtitle\"\n};\nconst _hoisted_7 = {\n  class: \"CompanyAppMain-buttons\"\n};\nconst _hoisted_8 = {\n  class: \"CompanyAppModal-title\"\n};\nconst _hoisted_9 = {\n  class: \"CompanyAppModal-subtitle\"\n};\nconst _hoisted_10 = {\n  class: \"CompanyAppModal-input\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"1.6rem\",\n  height: \"1.6rem\",\n  viewBox: \"0 0 16 16\",\n  fill: \"none\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"M8.00651 7.82743C9.42544 7.82743 10.6296 6.53982 10.6296 4.87389C10.6296 3.24779 9.41893 2 8.00651 2C6.58757 2 5.37041 3.2677 5.37692 4.88717C5.37692 6.53982 6.58107 7.82743 8.00651 7.82743ZM3.94497 14H12.055C13.129 14 13.5 13.6681 13.5 13.0575C13.5 11.3518 11.3781 9.00221 8 9.00221C4.6284 9.00221 2.5 11.3518 2.5 13.0575C2.5 13.6681 2.87101 14 3.94497 14Z\",\n  fill: \"#8E8E93\"\n})])], -1);\nconst _hoisted_12 = [\"placeholder\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CompanyAvatar = _resolveComponent(\"CompanyAvatar\");\n  const _component_CompanyAppModal = _resolveComponent(\"CompanyAppModal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.$t(\"Компанія\")), 1), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_CompanyAvatar, {\n    social: $options.PMData.social\n  }, null, 8, [\"social\"])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString(_ctx.$t(\"Ви зможете спільно працювати на кооперативних роботах або просто проводити час із друзями\")), 1), _createElementVNode(\"div\", _hoisted_6, _toDisplayString(_ctx.$t(\"Учасники компанії будуть відзначені на міні-карті\")), 1)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", {\n    class: \"CompanyAppMain-button blue\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.createCompany && $options.createCompany(...args))\n  }, _toDisplayString(_ctx.$t(\"Створити компанію\")), 1), _createElementVNode(\"div\", {\n    class: \"CompanyAppMain-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.connectToCompany && $options.connectToCompany(...args))\n  }, _toDisplayString(_ctx.$t(\"Вступити в компанію\")), 1)]), $data.isModalOpen ? (_openBlock(), _createBlock(_component_CompanyAppModal, {\n    key: 0,\n    onOnClose: _cache[4] || (_cache[4] = () => $data.isModalOpen = false)\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_8, _toDisplayString(_ctx.$t(\"Вступити в компанію\")), 1), _createElementVNode(\"div\", _hoisted_9, _toDisplayString(_ctx.$t(\"Вкажіть код запрошення для того, щоб приєднатися до компанії\")), 1), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n      placeholder: _ctx.$t('Введіть код запрошення'),\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.modalInput = $event)\n    }, null, 8, _hoisted_12), [[_vModelText, $data.modalInput]])]), _createElementVNode(\"div\", {\n      class: \"CompanyAppMain-button blue\",\n      onClick: _cache[3] || (_cache[3] = (...args) => $options.onConnect && $options.onConnect(...args))\n    }, _toDisplayString(_ctx.$t(\"Приєднатися\")), 1)]),\n    _: 1\n  })) : _createCommentVNode(\"\", true)]);\n}","map":null,"metadata":{},"sourceType":"module"}