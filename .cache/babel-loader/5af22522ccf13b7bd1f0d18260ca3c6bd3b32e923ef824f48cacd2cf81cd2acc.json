{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, withMemo as _withMemo, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"TapTapMiniGame_game-section\"\n};\nconst _hoisted_2 = {\n  class: \"TapTapMiniGame_game-title\"\n};\nconst _hoisted_3 = {\n  class: \"TapTapMiniGame_figuresList-section-wrapper\"\n};\nconst _hoisted_4 = {\n  class: \"TapTapMiniGame_figuresList-section\"\n};\nconst _hoisted_5 = {\n  class: \"TapTapMiniGame_figuresList-indo-section\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", null, \"E\", -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.$t(`Поймайте фигуру\nв указанной области`)), 1), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"TapTapMiniGame_figures-enter-section\", {\n      'TapTapMiniGame_figures-enter-section--win': $data.isGameStop && $data.IsRight,\n      'TapTapMiniGame_figures-enter-section--fail': $data.isGameStop && !$data.IsRight\n    }])\n  }, \" E \", 2), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.figureList, (figure, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"TapTapMiniGame_figuresList-item\",\n      style: _normalizeStyle($options.getFigureStyle(figure)),\n      key: i\n    }, null, 4);\n  }), 128))])]), $data.currentFigure ? _withMemo([$data.figureBind], () => (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"TapTapMiniGame_figures-info\"\n  }, [_createElementVNode(\"span\", {\n    style: _normalizeStyle({\n      color: $options.getRandomColor()\n    })\n  }, _toDisplayString(_ctx.$t($data.colorTranslate[$data.currentFigure.color])), 5), _createElementVNode(\"span\", {\n    style: _normalizeStyle({\n      color: $options.getRandomColor()\n    })\n  }, _toDisplayString(_ctx.$t($data.figureBind[$data.currentFigure.figure])), 5)])), _cache, 0) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createTextVNode(\" \" + _toDisplayString(_ctx.$t(\"Применить\")), 1)])], 64);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}