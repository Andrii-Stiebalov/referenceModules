{"ast":null,"code":"export default {\n  data() {\n    return {\n      isActive: false,\n      announcements: []\n    };\n  },\n  computed: {\n    activeAnnouncement() {\n      return this.announcements[0];\n    }\n  },\n  methods: {\n    getId() {\n      const IDList = this.announcements.map(announcement => announcement.id);\n      let freeID = 0;\n      while (IDList.includes(freeID)) freeID++;\n      return freeID;\n    },\n    onAction(isSuccess) {\n      this.announcements.push({\n        id: this.getId(),\n        isSuccess\n      });\n    },\n    removeAnnouncement() {\n      this.announcements.splice(this.announcements.indexOf(this.activeAnnouncement), 1);\n    }\n  },\n  created() {\n    this.$onClient(\"W:ATM:Announcement\", this.onAction);\n  },\n  beforeUnmount() {\n    this.$offClient(\"W:ATM:Announcement\", this.onAction);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}