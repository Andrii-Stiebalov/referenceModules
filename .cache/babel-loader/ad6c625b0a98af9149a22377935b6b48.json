{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"universalModal-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"universalModal\"\n};\nconst _hoisted_3 = {\n  class: \"universalModal-content\"\n};\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"universalModal-layout\",\n    onClick: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.onClick && $options.onClick(...args), [\"self\"]))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [$props.title ? (_openBlock(), _createElementBlock(\"p\", {\n    key: 0,\n    innerHTML: $props.title\n  }, null, 8, _hoisted_4)) : _createCommentVNode(\"\", true), $props.subtitle ? (_openBlock(), _createElementBlock(\"p\", {\n    key: 1,\n    innerHTML: $props.subtitle\n  }, null, 8, _hoisted_5)) : _createCommentVNode(\"\", true), _renderSlot(_ctx.$slots, \"default\")])])]), _createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"Нажмите в пустую область,\\n чтобы закрыть окно\")), 1)]);\n}","map":null,"metadata":{},"sourceType":"module"}