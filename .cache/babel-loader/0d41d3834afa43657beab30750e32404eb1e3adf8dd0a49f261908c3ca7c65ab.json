{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      isOwner: true,\n      loaded: true,\n      keyReceive: false,\n      marketId: -1,\n      list: [],\n      OwnerName: \"Night_Will\",\n      startBuyItem: null,\n      startBuyIndex: !1,\n      startBuyCount: !1,\n      startBuyCashType: !1,\n      clothesMode: false\n    };\n  },\n  methods: {\n    GetName(item) {\n      return \"\";\n    },\n    setKey(data) {\n      window.login = data.login;\n      window.key = data.key;\n      window.images = new Map();\n      this.keyReceive = true;\n    },\n    save() {\n      let Items = {\n        Take: [],\n        Add: [],\n        Change: []\n      };\n      for (const a of this.list) {\n        if (a.Current && a.countToBuy == 0) {\n          Items.Take.push(a);\n        } else if (!a.Current && a.countToBuy > 0) {\n          Items.Add.push(a);\n        }\n      }\n      this.$callClient(\"Market:Save\", JSON.stringify(Items), this.marketId);\n    },\n    load(a) {\n      a.current.forEach(element => {\n        a.list.push(element);\n      });\n      this.isOwner = true;\n      this.OwnerName = a.OwnerName;\n      this.list = a.list;\n      this.marketId = a.marketId;\n      this.loaded = true;\n    },\n    getItemImage(item) {\n      if (item.ID == 236) {\n        return `cdn/inventory/other/${item.Datas}.png`;\n      }\n      return `cdn/inventory/other/${item.ID}.png`;\n    },\n    close() {\n      this.$callClient(\"Market:Close\");\n    },\n    startBuy(a, b, c, d) {\n      if (c < 1) return;\n      this.startBuyItem = a, this.startBuyIndex = b, this.startBuyCount = c, this.startBuyCashType = d;\n      this.openModal();\n    },\n    async buy(a, b, c, d) {\n      //startBuyItem, startBuyIndex, startBuyCount, startBuyCashType\n      if (!(1 > c || a.countToBuy < c)) {\n        this.startBuyItem = null, a.countForBuy = 0;\n        try {\n          this.$callClient(\"Market:BuyItem\", JSON.stringify(a), c, d, this.marketId, b);\n        } catch (a) {\n          console.log(a);\n        }\n      }\n    },\n    BuySucsess(index, c) {\n      this.list[index].countToBuy -= c;\n    },\n    async checkClothes(a) {\n      try {\n        this.$callClient(\"Market:setClothes\", JSON.stringify(a)), this.clothesMode = true;\n      } catch (a) {\n        serverAPI.notifyError(`${a}`);\n      }\n    },\n    closeClothesMode() {\n      this.clothesMode = false, this.$callClient(\"Market:disableCamera\");\n    },\n    formatCurrency(a) {\n      return a.toString().split(\"\").reverse().reduce(function (a, b, c) {\n        return \"-\" == b ? a : b + (c && !(c % 3) ? \".\" : \"\") + a;\n      }, \"\");\n    },\n    loadBuyingMenu(a) {\n      this.isOwner = false;\n      this.OwnerName = a.OwnerName;\n      this.marketId = a.marketId, this.ownerId = a.ownerId, this.secret = a.secret;\n      for (let i in a.list) {\n        a.list[i].countForBuy = 1;\n      }\n      this.list = a.list;\n      this.clothesMode = false, this.startBuyItem = null;\n      this.loaded = true;\n    },\n    openModal() {\n      //let params = this.startBuyCashType == 0? ''\n      //let count = this.startBuyCount;\n      setTimeout(() => {\n        this.$callLocal(\"W:Modals:Create\", {\n          title: \"\",\n          subtitle: \"\",\n          button: {\n            accept: {},\n            cancel: {\n              text: \"123\"\n            }\n          }\n        });\n      }, 1000);\n\n      // modalUniversal.openModal('confirmation', {\n      //   title: ' ',\n      //   bottomText: [this.GetTextJS('Нажмите в пустую область,'),this.GetTextJS('чтобы закрыть окно')],\n      //   subtitle: this.GetTextJS(`Вы уверены что хотите купить `) + count + this.GetTextJS('шт. ') + this.GetTextJS(this.GetName(this.startBuyItem)) + ' ' + this.GetTextJS('за') + ' ' + this.formatCurrency(this.startBuyItem.Price * this.startBuyCount) + '$',\n      //   action: [\n      //     {\n      //       title: this.startBuyCashType === 0 ? this.GetTextJS('Оплатить наличными') : this.GetTextJS('Оплатить картой'),\n      //       click: 'dialogConfim()',\n      //       code: function dialogConfim() {\n      //         app.buy(app.startBuyItem, app.startBuyIndex, app.startBuyCount, app.startBuyCashType);\n      //         modalUniversal.closeModal(modalUniversal.count);\n      //       }\n      //     },\n      //     {\n      //       title: this.GetTextJS('Нет'),\n      //       close: true,\n      //       click: 'dialogDeny()',\n      //       code: function dialogDeny() {\n      //         modalUniversal.closeModal(modalUniversal.count);\n      //       }\n      //     }\n      //   ]\n      // });\n    }\n  },\n  created() {\n    this.openModal();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}