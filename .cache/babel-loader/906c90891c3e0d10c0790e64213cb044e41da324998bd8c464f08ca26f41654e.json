{"ast":null,"code":"import { mapGetters } from \"vuex\";\nimport Blank from \"../../ContractsMenu/Components/Blank.vue\";\nimport Tilt from \"vanilla-tilt-vue\";\nexport default {\n  data() {\n    return {\n      activeContractsTab: null,\n      countOfPages: null,\n      activePage: 1,\n      selectedContract: null,\n      contractsTabs: [{\n        tabName: \"Все контракты\",\n        tabId: \"All\"\n      }, {\n        tabName: \"Активные контракты\",\n        tabId: \"Active\"\n      }, {\n        tabName: \"Закрытые контракты\",\n        tabId: \"Completed\"\n      }]\n    };\n  },\n  components: {\n    Blank,\n    Tilt\n  },\n  computed: {\n    ...mapGetters(\"family\", {\n      contracts: \"getContracts\",\n      familyName: \"getFamilyName\"\n    }),\n    filteredContracts() {\n      if (this.activeContractsTab === \"All\") {\n        return this.contracts;\n      }\n      return this.contracts.filter(contract => this.activeContractsTab === \"Active\" ? !contract.isEnded : contract.isEnded);\n    },\n    paginatedContracts() {\n      const startContracts = (this.activePage - 1) * 10;\n      const endContracts = startContracts + 10 > this.contracts.length ? this.contracts.length : startContracts + 10;\n      return this.contracts.slice(startContracts, endContracts);\n    }\n  },\n  methods: {\n    setActiveContractsTab(tabId) {\n      this.activeContractsTab = tabId;\n    },\n    hiddeContract() {\n      this.selectedContract = null;\n    },\n    getPartnerFamilyName(contract) {\n      return contract.customer === this.familyName ? contract.executor : contract.customer;\n    },\n    setPagination() {\n      const maxContracts = 10;\n      if (this.contracts.length > maxContracts) {\n        this.countOfPages = Math.ceil(this.filteredContracts.length / 10);\n      }\n    },\n    movePagination(paginationData) {\n      if (typeof paginationData === \"number\") {\n        this.activePage = paginationData;\n        return;\n      }\n      if (this.activePage === this.countOfPages && paginationData === \"+\") {\n        this.activePage = 1;\n        return;\n      }\n      if (this.activePage === 1 && paginationData === \"-\") {\n        this.activePage = this.countOfPages;\n        return;\n      }\n      paginationData === \"+\" ? this.activePage++ : this.activePage--;\n    }\n  },\n  watch: {\n    activeContractsTab() {\n      this.setPagination();\n      this.activePage = 1;\n    }\n  },\n  mounted() {\n    this.setActiveContractsTab(\"All\");\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}